{"version":3,"sources":["components/twemoji.js","components/header.js","components/tableCount.js","components/googlesheets/endereco.js","components/googlesheets/mylocation.js","components/googlesheets/sugestao.js","images/bean.svg","images/hub.svg","images/green.svg","images/red.svg","images/currentLocation.svg","components/map.js","images/qr.svg","components/googlesheets/cleanold.js","App.js","index.js"],"names":["Twemoji","emoji","dangerouslySetInnerHTML","__html","twemoji","parse","folder","ext","memo","Header","Component","this","props","rowCountProp","id","AppBar","position","Toolbar","Typography","variant","className","GoogleSpreadsheet","require","provider","OpenStreetMapProvider","doc","process","NameForm","state","value","alimento","isLoading","telefone","diaSemana","horario","handleChange","bind","handleSubmit","event","setState","target","self","a","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsByIndex","numero","replace","alert","preventDefault","row","Roaster","URL","City","DateISO","Date","toISOString","Telefone","DiaSemana","Horario","search","query","providerResult","length","console","log","latlon","y","x","Coordinates","JSON","stringify","addRow","window","location","reload","CircularProgress","onSubmit","type","placeholder","onChange","nextProps","loadCells","getCell","saveUpdatedCells","getRows","result","onClick","Sugestoes","Sugestao","TimeAgo","addDefaultLocale","pt","timeAgo","myIcon","L","Icon","iconUrl","coffeeBean","iconSize","Point","hubIcon","hub","greenIcon","green","redIcon","red","CurrentLocation","CurrentLocationSVG","interactive","markerclusterOptionsPrecisando","cluster","childCount","getChildCount","c","DivIcon","html","markerclusterOptionsAnjos","markerclusterOptionsEntrega","CoffeeMap","dataMaps","center","screensizeZoom","innerWidth","MapContainer","style","height","width","zoom","maxZoom","attributionControl","LayersControl","BaseLayer","checked","name","TileLayer","url","attribution","AttributionControl","prefix","Marker","icon","eventHandlers","click","e","spiderfyDistanceMultiplier","showCoverageOnHover","maxClusterRadius","iconCreateFunction","dataMapsProp","filter","map","dataItem","k","dateMarked","precisandoMsg","CurrentIcon","mapCoords","googleDirection","format","now","getTime","Popup","href","rel","aes","AesEncryption","ReactGA","initialize","pageview","pathname","setSecretKey","App","dataHeader","label","rowCount","telefoneEncryptado","dropDownMenuSemana","React","createRef","dropDownMenuHorario","setTipoAlimento","handleChangeTelefone","setDiaSemana","setHorario","current","selectedOptions","telefoneValue","encrypt","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","rows","forEach","decrypt","needsUpdates","index","city","setTimeout","save","Grid","container","spacing","item","xs","sm","Paper","tileMapOption","src","ref","title","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89cdb3eb.chunk.js","sourcesContent":["import React, { memo } from 'react'\nimport twemoji from 'twemoji'\n\n// Using the official https://github.com/twitter/twemoji from Twitter\n// With an excellent example from https://gist.github.com/chibicode/fe195d792270910226c928b69a468206\n\nconst Twemoji = ({ emoji }) => (\n    <span\n        dangerouslySetInnerHTML={{\n            __html: twemoji.parse(emoji, {\n                folder: 'svg',\n                ext: '.svg'\n            })\n        }}\n    />\n)\n\nexport default memo(Twemoji)","import React, { Component } from 'react';\nimport Twemoji from './twemoji';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import github_mark from '../images/github_mark.png';\nimport TableCount from './tableCount';\n\nclass Header extends Component {\n\n    render() {\n\n        const { rowCountProp } = this.props;\n\n        return (\n            <div id=\"header\">\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" id=\"logo\">\n                            <Twemoji emoji=\"☕\" /> MAPA da FOME <span className=\"beta\">(beta)</span> \n                        </Typography>\n                        {/* <TableCount rowCountProp={rowCountProp} /> */}\n                        {/* <a href=\"https://docs.google.com/spreadsheets/d/1u7jiqY1qM0jYWugn1dFiW3plQrvWysJqm8xXhO35zuU/edit?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Button\n                                variant=\"contained\"\n                                size=\"small\">\n                                Add<span id=\"RoasterButtonMobile\">&nbsp;Roaster</span>\n                            </Button>\n                        </a>\n                        <a href=\"https://github.com/hdehal/coffee-maps\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <IconButton\n                                className=\"GitHub\"\n                                variant=\"outlined\"\n                                size=\"small\">\n                                <img className=\"GitHub\" src={github_mark} alt=\"Hosted on GitHub\" />\n                            </IconButton>\n                        </a> */}\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass TableCount extends Component {\n    render() {\n        return (\n            <Typography className=\"TableCount\">\n                TOTAL: {this.props.rowCountProp}\n            </Typography>\n        );\n    }\n}\n\nexport default TableCount;","import React, { Component } from 'react';\r\n\r\nimport { \r\n  OpenStreetMapProvider,\r\n  // BingProvider \r\n} from 'leaflet-geosearch';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\nconst provider = new OpenStreetMapProvider();\r\n\r\n// = new BingProvider({\r\n//   params: {\r\n//     key: process.env.REACT_APP_BING_MAPS_API_KEY\r\n//   },\r\n// });\r\n//\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass NameForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '', \r\n        alimento: props.alimento, \r\n        isLoading:false,\r\n        telefone:props.telefone,\r\n        diaSemana:props.diaSemana,\r\n        horario:props.horario,\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    //ATUALIZAR PROPS VINDAS DO PAI\r\n    static getDerivedStateFromProps(nextProps, state) {\r\n      if(state){\r\n        if (nextProps.alimento !== state.alimento){ \r\n          state.alimento=nextProps.alimento;\r\n        }\r\n        if (nextProps.telefone !== state.telefone){ \r\n          state.telefone=nextProps.telefone;\r\n        }\r\n        if (nextProps.diaSemana !== state.diaSemana){ \r\n          state.diaSemana=nextProps.diaSemana;\r\n        }\r\n        if (nextProps.horario !== state.horario){ \r\n          state.horario=nextProps.horario;\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      //alert('Um endereço foi enviado: ' + this.state.value);\r\n      if(this.state.value === '') {event.preventDefault();return;}\r\n      \r\n      this.setState({isLoading: true});\r\n\r\n      (async function main(self) {\r\n        await doc.useServiceAccountAuth({\r\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n        });\r\n\r\n        await doc.loadInfo(); // Loads document properties and worksheets\r\n\r\n        const sheet = doc.sheetsByIndex[0];\r\n        //row = { Name: \"new name\", Value: \"new value\" };\r\n        \r\n        // Total row count\r\n        let numero = self.state.value.replace(/[^0-9]/g,'');\r\n        if(numero !== ''){\r\n          numero = \", nº\"+numero;\r\n        }else{\r\n          alert(\"faltou colocar o número\");\r\n          \r\n          event.preventDefault();\r\n          self.setState({isLoading: false});\r\n          return;\r\n        }\r\n        const row = { \r\n          Roaster:  self.state.alimento, \r\n          URL:numero, City: self.state.value,\r\n          DateISO: new Date().toISOString(), \r\n          Telefone: self.state.telefone, \r\n          DiaSemana: self.state.diaSemana, \r\n          Horario: self.state.horario,\r\n        };\r\n        \r\n        try{\r\n          let providerResult = await provider.search({ query: self.state.value.replace('-',\",\") + ', Brazil' });\r\n  \r\n          if(providerResult.length !== 0 ){\r\n              // throw new Error(\"endereco-nao-encontrado\");\r\n  \r\n              console.log(providerResult);\r\n              let latlon = [providerResult[0].y, providerResult[0].x];\r\n              row.Coordinates = JSON.stringify(latlon); // Convert obj to string\r\n              //needsUpdates[index].mapCoords = latlon;\r\n          }\r\n        }catch(e){\r\n            console.log(\"ERRO\");\r\n            console.log(e);\r\n        }\r\n        await sheet.addRow(row);\r\n       \r\n        self.setState({isLoading: false});\r\n        window.location.reload();\r\n      })(this);\r\n      event.preventDefault();\r\n    }\r\n\r\n    \r\n  \r\n    render() {\r\n      return (\r\n        this.state.isLoading ?\r\n        <div><CircularProgress /></div>\r\n        :\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <input className=\"TextField\" type=\"text\" placeholder='Insira rua,nº,bairro,cidade,estado' value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input className=\"SubmitButton\" type=\"submit\" value=\"Enviar Endereço\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\nexport default NameForm; ","import React, { Component } from 'react';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass NameForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '', \r\n        location: props.location, \r\n        alimento: props.alimento, \r\n        isLoading:props.isLoading,\r\n        telefone:props.telefone,\r\n        diaSemana:props.diaSemana,\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    \r\n  componentDidMount() {\r\n      \r\n    //salvar acesso  \r\n      \r\n    (async function main(self) {\r\n      try{\r\n        await doc.useServiceAccountAuth({\r\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n        });\r\n    \r\n        await doc.loadInfo(); // Loads document properties and worksheets\r\n    \r\n        const sheet = doc.sheetsByIndex[1];\r\n        \r\n        await sheet.loadCells('A2');\r\n        const a1 = sheet.getCell(1, 0);\r\n        a1.value+=1;\r\n        await sheet.saveUpdatedCells();\r\n      }catch(e){\r\n        \r\n      }\r\n      \r\n    })(this);\r\n\r\n  }\r\n\r\n    //ATUALIZAR PROPS VINDAS DO PAI\r\n    static getDerivedStateFromProps(nextProps, state) {\r\n      if(state){\r\n\r\n        if (nextProps.alimento !== state.alimento){ \r\n          state.alimento=nextProps.alimento;\r\n        }\r\n        if (nextProps.telefone !== state.telefone){ \r\n          state.telefone=nextProps.telefone;\r\n        }\r\n        if (nextProps.diaSemana !== state.diaSemana){ \r\n          state.diaSemana=nextProps.diaSemana;\r\n        }\r\n        if (nextProps.horario !== state.horario){ \r\n          state.horario=nextProps.horario;\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) { \r\n        //navigator.geolocation.getCurrentPosition(function(position) {\r\n        this.setState({isLoading: true});\r\n            (async function main(self) {\r\n                await doc.useServiceAccountAuth({\r\n                    client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n                    private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n                });\r\n        \r\n                await doc.loadInfo(); // Loads document properties and worksheets\r\n        \r\n                const sheet = doc.sheetsByIndex[0];\r\n                const rows = await sheet.getRows();\r\n                // Total row count\r\n                const row = { \r\n                  Roaster: self.state.alimento, \r\n                  URL:\"\", \r\n                  City: \"\", \r\n                  Coordinates:JSON.stringify([self.props.location[0], self.props.location[1]]), \r\n                  DateISO: new Date().toISOString(), \r\n                  Telefone: self.props.telefone, \r\n                  DiaSemana:self.props.diaSemana,\r\n                  Horario:self.props.horario,\r\n                };\r\n                \r\n                const result = await sheet.addRow(row);\r\n                console.log(result);\r\n                window.location.reload();\r\n            })(this);\r\n        //});\r\n      event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n          this.state.isLoading ?\r\n          <div><CircularProgress /></div>\r\n          :\r\n          <button className=\"SubmitButton\" onClick={this.handleSubmit}>\r\n            Marcar Minha Localização Atual\r\n          </button>\r\n        \r\n      );\r\n    }\r\n  }\r\nexport default NameForm; ","import React, { Component } from 'react';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass Sugestoes extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '',\r\n        isLoading:false\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      //alert('Um endereço foi enviado: ' + this.state.value);\r\n      if(this.state.value === '') {event.preventDefault();return;}\r\n      \r\n      this.setState({isLoading: true});\r\n\r\n      (async function main(self) {\r\n        await doc.useServiceAccountAuth({\r\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n        });\r\n\r\n        await doc.loadInfo(); // Loads document properties and worksheets\r\n\r\n        const sheet = doc.sheetsByIndex[2];\r\n        //row = { Name: \"new name\", Value: \"new value\" };\r\n        \r\n        const row = { Sugestao: self.state.value, DateISO: new Date().toISOString()};\r\n        \r\n        await sheet.addRow(row);\r\n       \r\n        self.setState({isLoading: false});\r\n        alert(\"sugestão enviada com sucesso\");\r\n      })(this);\r\n      event.preventDefault();\r\n    }\r\n\r\n    \r\n  \r\n    render() {\r\n      return (\r\n        this.state.isLoading ?\r\n        <div><CircularProgress /></div>\r\n        :\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <textarea className=\"TextField\" type=\"text\" placeholder='Insira sua sugestão' value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input className=\"SubmitButton\" type=\"submit\" value=\"Enviar sugestão\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\nexport default Sugestoes; ","export default __webpack_public_path__ + \"static/media/bean.8d52f968.svg\";","export default __webpack_public_path__ + \"static/media/hub.4f920e1b.svg\";","export default __webpack_public_path__ + \"static/media/green.00533c2a.svg\";","export default __webpack_public_path__ + \"static/media/red.651e6e29.svg\";","export default __webpack_public_path__ + \"static/media/currentLocation.b9cc00ae.svg\";","import React, { Component } from 'react';\nimport { MapContainer, Marker, TileLayer, Tooltip, AttributionControl, Popup, LayersControl } from \"react-leaflet\";\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport \"react-leaflet-markercluster/dist/styles.min.css\";\nimport coffeeBean from '../images/bean.svg';\nimport hub from '../images/hub.svg';\nimport green from '../images/green.svg';\nimport red from '../images/red.svg';\nimport CurrentLocationSVG from '../images/currentLocation.svg';\nimport TimeAgo from 'javascript-time-ago';\n\nimport pt from 'javascript-time-ago/locale/pt.json';\nTimeAgo.addDefaultLocale(pt);\n\nconst timeAgo = new TimeAgo();\n\n// Leaflet custom marker\nconst myIcon = new L.Icon({\n    // Coffee bean attribution -- Thanks! https://commons.wikimedia.org/wiki/File:Coffee_bean_symbol.svg\n    iconUrl: coffeeBean,\n    iconSize: new L.Point(20, 20),\n    className: 'leaflet-bean-icon',\n});\n\n\n// Leaflet custom marker\nconst hubIcon = new L.Icon({\n    iconUrl: hub,\n    iconSize: new L.Point(30, 30),\n    className: 'leaflet-bean-icon',\n});\n\n// Leaflet custom marker\nconst greenIcon = new L.Icon({\n    iconUrl: green,\n    iconSize: new L.Point(35, 35),\n    className: 'leaflet-bean-icon',\n});\nconst redIcon = new L.Icon({\n    iconUrl: red,\n    iconSize: new L.Point(35, 35),\n    className: 'leaflet-bean-icon',\n});\n\nconst CurrentLocation = new L.Icon({\n    iconUrl: CurrentLocationSVG,\n    iconSize: new L.Point(150, 150),\n    className: 'leaflet-bean-icon',\n    interactive: false\n});\n\nconst markerclusterOptionsPrecisando = function (cluster) {\n        var childCount = cluster.getChildCount();\n        var c = ' marker-cluster-';\n        if (childCount < 10) {\n          c += 'small';\n        } \n        else if (childCount < 100) {\n          c += 'medium';\n        } \n        else {\n          c += 'large';\n        }\n       \n        return new L.DivIcon({ html: '<div><span>' + childCount + '</span></div>', \n         className: 'marker-cluster' + c + '-precisandoCluster', iconSize: new L.Point(40, 40) });\n        };\n\n  const markerclusterOptionsAnjos = (cluster) => {\n    var childCount = cluster.getChildCount();\n    var c = ' marker-cluster-';\n    if (childCount < 10) {\n      c += 'small';\n    } \n    else if (childCount < 100) {\n      c += 'medium';\n    } \n    else {\n      c += 'large';\n    }\n   \n    return new L.DivIcon({ html: '<div><span>' + childCount + '</span></div>', \n     className: 'marker-cluster' + c +'-anjosCluster', iconSize: new L.Point(40, 40) });\n    };\n\n    const markerclusterOptionsEntrega = (cluster) => {       \n        return new L.DivIcon({ html: '<div><span>' + cluster.getChildCount() + '</span></div>', \n         className: 'redHub marker-cluster', iconSize: new L.Point(40, 40) });\n    };\n\n\nclass CoffeeMap extends Component {\n\n    // Initial state\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            dataMaps: [],\n            center: props.location,\n        }\n    }\n\n    render() {\n\n        // Render map default zoom based on mobile breakpoint\n        const isMobile = window.innerWidth < 480;\n        const screensizeZoom = isMobile ? 7.25 : 8.5*1.2;\n\n        return (\n            <div>\n                <MapContainer\n                    style={{ height: \"89vh\", width: \"100%\" }}\n                    zoom={screensizeZoom}\n                    maxZoom={18}\n                    center={this.state.center}\n                    attributionControl={false}>\n\n\n{/* https://github.com/dhis2-club-tanzania/function-maintenance/blob/0dadaa96955156b6ddefc0fcf9dd54e45ffb9458/src/app/shared/modules/ngx-dhis2-visualization/modules/map/constants/tile-layer.constant.ts */}\n{/* https://www.arcgis.com/apps/mapviewer/index.html */}\n                    {/* <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n                     {/* <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n                    {/* <TileLayer url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n\n                    \n                     {/* {this.state.tileMapOption ? \n                     <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                     attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                 />\n                    :\n                    <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />\n                } */}\n\n                     {/* <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n                    {/* <TileLayer url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />  */}\n                    {/* <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />  */}\n                    <LayersControl position=\"bottomleft\">\n                    <LayersControl.BaseLayer checked name=\"Waze\">\n                    <TileLayer url=\"https://worldtiles1.waze.com/tiles/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer  name=\"Mapa\">\n                    <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                     attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OSM</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n\n                    <LayersControl.BaseLayer name=\"Satelite\">\n                    <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='https://www.arcgis.com/apps/mapviewer/index.html' target='_blank' rel='noreferrer'>Esri</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n\n                    \n                    </LayersControl>\n\n\n\n                    <AttributionControl\n                        position=\"bottomleft\"\n                        prefix={false}\n                    />\n                    \n                    <Marker\n                            icon= {CurrentLocation} \n                            key={\"currentPosition\"}\n                            center={this.state.center}\n                            position={this.state.center}\n\n                            eventHandlers={{\n                                click: (e) => { \n                                    e.preventDefault();\n                                }\n                            }}\n\n                            interactive={false}\n                        >\n                            \n                    {/* <Popup\n                        direction=\"auto\"\n                        offset={[2, 0]}\n                        opacity={1}>\n                        <span>você está aqui</span>\n                    </Popup> */}\n                        </Marker>\n\n                    <MarkerClusterGroup\n                    // grupo de onde pode ajudar\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                        iconCreateFunction={markerclusterOptionsAnjos}\n                    >                        \n                        {this.props.dataMapsProp.filter(x => { return x.Coordinates; }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Horario } = dataItem;\n                            let googleDirection = `https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`;\n                            \n                            let dateMarked;\n                            if(DateISO) dateMarked = timeAgo.format(Date.now() - (Date.now() - new Date(DateISO).getTime()) );\n                            if(Telefone) Telefone=\"contato:\"+Telefone;\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            switch(Roaster){\n                                case \"Doador\":\n                                    precisandoMsg = \"Recebendo alimento para distribuir\"+URL;\n                                    CurrentIcon = hubIcon;\n                                    break;\n                                case \"PrecisandoBuscar\":\n                                    precisandoMsg = `Precisando de pessoas para buscar `+DiaSemana + \" pela \"+Horario;\n                                    CurrentIcon = greenIcon;\n                                    break;                                \n                                \n                                default:\n                                    return (<div></div>);\n                                    break;\n                            }\n                            \n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`); \n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                    <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {Telefone}\n                                    </Popup>\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n\n                    \n                    <MarkerClusterGroup\n                    // grupo dos que precisam\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                        iconCreateFunction={markerclusterOptionsPrecisando}\n                    >                        \n                        {this.props.dataMapsProp.filter(x => { return x.Coordinates; }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana } = dataItem;\n                            let googleDirection = `https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`;\n                            \n                            let dateMarked;\n                            if(DateISO) dateMarked = timeAgo.format(Date.now() - (Date.now() - new Date(DateISO).getTime()) );\n                            if(Telefone) Telefone=\"contato:\"+Telefone;\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            switch(Roaster){                                \n                                case \"Alimento de cesta básica\":\n                                case \"Alimento pronto\":\n                                    precisandoMsg = `Precisando de ${Roaster}`+URL;\n                                    CurrentIcon = myIcon;\n                                    break;\n                                \n                                default:\n                                    return (<div></div>);\n                                    break;\n                            }\n                            \n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`); \n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                    <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {Telefone}\n                                    </Popup>\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n\n                    <MarkerClusterGroup\n                    // grupo de entrega de alimentos prontos\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                        iconCreateFunction={markerclusterOptionsEntrega}\n                    >                        \n                        {this.props.dataMapsProp.filter(x => { return x.Coordinates; }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Horario } = dataItem;\n                            let googleDirection = `https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`;\n                            \n                            let dateMarked;\n                            if(DateISO) dateMarked = timeAgo.format(Date.now() - (Date.now() - new Date(DateISO).getTime()) );\n                            if(Telefone) Telefone=\"contato:\"+Telefone;\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            switch(Roaster){\n                                case \"EntregaAlimentoPronto\":\n                                    precisandoMsg = `Entregando refeições prontas `+DiaSemana+\" pela \"+Horario;\n                                    CurrentIcon = redIcon;\n                                    break;\n                                \n                                default:\n                                    return (<div></div>);\n                                    break;\n                            }\n                            \n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`); \n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                    <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {Telefone}\n                                    </Popup>\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n\n                    \n                </MapContainer>\n            </div>\n        );\n    }\n}\n\nexport default CoffeeMap;","export default __webpack_public_path__ + \"static/media/qr.20154bbf.svg\";","\r\nimport React, { Component } from 'react';\r\n\r\nimport TimeAgo from 'javascript-time-ago';\r\n\r\nimport pt from 'javascript-time-ago/locale/pt.json';\r\nTimeAgo.addDefaultLocale(pt);\r\n\r\nconst timeAgo = new TimeAgo();\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass CleanOld extends Component {\r\n\r\n    componentDidMount() {\r\n        \r\n        (async function main() {\r\n            // Use service account creds\r\n            await doc.useServiceAccountAuth({\r\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n            });\r\n    \r\n            await doc.loadInfo(); // Loads document properties and worksheets\r\n    \r\n            const sheet = doc.sheetsByIndex[0];\r\n            const rows = await sheet.getRows();\r\n            rows.forEach((x) => { \r\n                let dateMarked;\r\n                if(x.DateISO) dateMarked = timeAgo.format(Date.now() - (Date.now() - new Date(x.DateISO).getTime()) );\r\n                \r\n                //filtrar datas antigas\r\n                if(\r\n                    dateMarked.includes(\"semana\") \r\n                    || dateMarked.includes(\"mes\") \r\n                //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\r\n                ) { x.delete(); } });\r\n\r\n        })();\r\n    }\r\n    render(){\r\n        return <div></div>;\r\n    }\r\n}\r\n\r\nexport default CleanOld;","import React, { Component } from 'react';\nimport './App.css';\nimport { OpenStreetMapProvider } from 'leaflet-geosearch';\nimport Header from './components/header';\n\nimport InserirEndereco from './components/googlesheets/endereco';\nimport MyLocationButton from './components/googlesheets/mylocation';\nimport Sugestao from './components/googlesheets/sugestao';\n\nimport CoffeeMap from './components/map.js';\n// import CoffeeTable from './components/table';\nimport ReactGA from 'react-ga';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nimport qr from './images/qr.svg';\n\n// Material-UI\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport CleanOld from './components/googlesheets/cleanold';\n\n\nimport coffeeBean from './images/bean.svg';\nimport hub from './images/hub.svg';\nimport green from './images/green.svg';\nimport red from './images/red.svg';\n\nimport AesEncryption from \"aes-encryption\";\n\nconst aes = new AesEncryption();\n\n// Google Analytics\nfunction initializeReactGA() {\n  ReactGA.initialize('UA-172868315-1');\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\ninitializeReactGA();\n\naes.setSecretKey(process.env.REACT_APP_CRYPTSEED+\"F\");\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\n\n// Google Sheets Document ID -- PROD\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\n\n// Google Sheets Document ID -- DEV\n// const doc = new GoogleSpreadsheet('1jQI6PstbEArW_3xDnGgPJR6_37r_KjLoa765bOgMBhk');\n\n// Provider for leaflet-geosearch plugin\nconst provider = new OpenStreetMapProvider();\n//limit osm https://operations.osmfoundation.org/policies/nominatim/\n\nclass App extends Component {\n\n  // Initial state\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      dataMaps: [],\n      dataHeader: [{ label: \"Índice\" }, { label: \"Lugar\" }],\n      rowCount: '',\n      center:[-8.0671132,-34.8766719],\n      alimento:'Alimento de cesta básica',\n      telefone:'',\n      telefoneEncryptado:'',\n      diaSemana:'',\n      horario:'',\n\n    }\n\n    this.dropDownMenuSemana = React.createRef();\n    this.dropDownMenuHorario = React.createRef();\n    this.setTipoAlimento = this.setTipoAlimento.bind(this);\n    this.handleChangeTelefone = this.handleChangeTelefone.bind(this);\n    this.setDiaSemana = this.setDiaSemana.bind(this);\n    this.setHorario = this.setHorario.bind(this);\n  }\n\n  setTipoAlimento(event){\n    this.setState({\n      alimento: event.target.value\n    });\n\n    if(event.target.value === 'PrecisandoBuscar' || event.target.value === 'EntregaAlimentoPronto'){\n      this.setState({\n        diaSemana: this.dropDownMenuSemana.current.value,\n        horario: this.dropDownMenuHorario.current.value\n      });\n\n    }else{\n      this.setState({\n        diaSemana: '',\n        horario: ''\n      });\n\n    }\n\n  }\n\n  setDiaSemana(event){\n    this.setState({\n      diaSemana: event.target.selectedOptions[0].value\n    });\n    // console.log(this.dropDownMenuSemana.current.value);\n    // console.log(event.target.selectedOptions[0].value);\n    // console.log(this.state.diaSemana);\n  }\n\n  \n  setHorario(event){\n    this.setState({\n      horario: event.target.selectedOptions[0].value\n    });\n    // console.log(this.dropDownMenuSemana.current.value);\n    // console.log(event.target.selectedOptions[0].value);\n    // console.log(this.state.diaSemana);\n  }\n\n  handleChangeTelefone(event) {\n    let telefoneValue = event.target.value.replace(/[^0-9]/g,'');\n    if(telefoneValue.length >= 8){\n      this.setState({telefoneEncryptado: aes.encrypt(telefoneValue)});\n    }\n    this.setState({telefone: telefoneValue});\n  }\n\n  componentDidMount() {\n\n    // Google Sheets API\n    // Based on https://github.com/theoephraim/node-google-spreadsheet\n\n    var self = this;\n\n    //current location    \n    navigator.geolocation.getCurrentPosition(function(position) {\n      self.setState({center: [position.coords.latitude, position.coords.longitude]}) \n    });\n\n    (async function main() {\n      // Use service account creds\n      await doc.useServiceAccountAuth({\n        client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n        private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n      });\n\n      await doc.loadInfo(); // Loads document properties and worksheets\n\n      const sheet = doc.sheetsByIndex[0];\n      const rows = await sheet.getRows();\n      // Total row count\n      self.setState({ rowCount: rows.length });\n\n      rows.forEach((x) => { \n        if (x.Coordinates) { x.mapCoords = JSON.parse(x.Coordinates); \n          if(x.Telefone) {\n            try{\n              x.Telefone = aes.decrypt(x.Telefone);\n            }catch(e){\n              //problema ao decriptar, string nao esta no formato hex\n            }\n          } \n        } \n      });\n\n      self.setState({ dataMaps: rows });\n\n      var needsUpdates = rows.filter((x) => { return !x.Coordinates; });\n      if(needsUpdates.length === 0) console.log(\"nao precisa atualizar\");\n      if (needsUpdates && needsUpdates.length > 0) {\n          for (let index in needsUpdates) {\n            // if(needsUpdates[index]._rawData.length===0) needsUpdates[index].delete(); //se deixar rows vazias na planilha\n              let city = needsUpdates[index].City;\n              setTimeout(() => \n                  {\n                      (async function main() {\n                          try{\n                              let providerResult = await provider.search({ query: city.replace('-',\",\") + ', Brazil' });\n                      \n                              if(providerResult.length !== 0 ){\n                                  // throw new Error(\"endereco-nao-encontrado\");\n                      \n                                  console.log(providerResult);\n                                  let latlon = [providerResult[0].y, providerResult[0].x];\n                                  needsUpdates[index].Coordinates = JSON.stringify(latlon); // Convert obj to string\n                                  //needsUpdates[index].mapCoords = latlon;\n                                  await needsUpdates[index].save(); // Save to remote Google Sheet\n                              }\n                          }catch(e){\n                              console.log(\"ERRO\");\n                              console.log(e);\n                          }\n                      })();\n                  \n                  },1300                        \n              );\n              \n          }\n        self.setState({ dataMaps: rows });\n      }\n\n      // Loading message \n      self.setState({ isLoading: false })\n\n    })();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header rowCountProp={this.state.rowCount} />\n        {/* <InserirEndereco/>\n        <MyLocationButton location={this.state.center}/> */}\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={8}>\n            <Paper id=\"CoffeeMap\" className=\"fadeIn\">\n              {this.state.isLoading\n                ? <div className=\"flexLoading\"><div className=\"loading\">Carregando...</div></div>\n                : <CoffeeMap dataMapsProp={this.state.dataMaps} location={this.state.center} tileMapOption={this.state.tileMapOption}/>\n              }\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Paper id=\"CoffeeTable\">\n              {this.state.isLoading\n                ? <div className=\"flexLoading\"><div className=\"loading\"><CircularProgress /></div></div>\n                // : <CoffeeTable dataMapsProp={this.state.dataMaps} dataHeaderProp={this.state.dataHeader} />\n              : <div>\n                Mapeados: {this.state.rowCount}<br></br>No mapa clique na bolinha para saber como ajudar.<br></br> Você pode se marcar ou marcar alguém, <br></br>selecione a situação e confirme o local (mais informações no final da página):\n        {/* RADIO BUTTON */}\n        <ul>\n          <li>\n            <label className='yellowHub'>\n              <input\n                type=\"radio\"\n                value=\"Alimento de cesta básica\"\n                checked={this.state.alimento === \"Alimento de cesta básica\"}\n                onChange={this.setTipoAlimento}\n              />\n              Preciso de Alimento de cesta básica <img width=\"30px\" height=\"30px\" src={coffeeBean}></img>\n            </label>\n          </li>\n          \n          <li>\n            <label className='yellowHub'>\n              <input\n                type=\"radio\"\n                value=\"Alimento pronto\"\n                checked={this.state.alimento === \"Alimento pronto\"}\n                onChange={this.setTipoAlimento}\n              />\n              Preciso de Alimento pronto <img width=\"30px\" height=\"30px\" src={coffeeBean}></img>\n            </label>\n          </li>\n\n          \n          <li>\n            <label className='blueHub'>\n              <input\n                type=\"radio\"\n                value=\"Doador\"\n                checked={this.state.alimento === \"Doador\"}\n                onChange={this.setTipoAlimento}\n              />\n              Recebo para doar <img width=\"30px\" height=\"30px\" src={hub}></img>\n            </label>\n          </li>\n\n          <li>\n          <label className='redHub'>\n              <input\n                type=\"radio\"\n                value=\"EntregaAlimentoPronto\"\n                checked={this.state.alimento === \"EntregaAlimentoPronto\"}\n                onChange={this.setTipoAlimento}\n              />\n              Entrego refeições em ponto fixo <img width=\"30px\" height=\"30px\" src={red}></img>\n            </label>\n            <select ref= {this.dropDownMenuSemana} id=\"dia\" onChange={this.setDiaSemana}>\n              <option value=\"toda Segunda\">toda Segunda</option>\n              <option value=\"toda Terça\">toda Terça</option>\n              <option value=\"toda Quarta\">toda Quarta</option>\n              <option value=\"toda Quinta\">toda Quinta</option>\n              <option value=\"toda Sexta\">toda Sexta</option>\n              <option value=\"todo Sábado\">todo Sábado</option>\n              <option value=\"todo Domingo\">todo Domingo</option>\n            </select>\n            <select ref= {this.dropDownMenuHorario} id=\"horario\" onChange={this.setHorario}>\n              <option value=\"manhã 05:30\">manhã 05:30</option>\n              <option value=\"manhã 06:30\">manhã 06:30</option>\n              <option value=\"tarde 13:30\">tarde 13:30</option>\n              <option value=\"tarde 16:30\">tarde 16:30</option>\n              <option value=\"noite 18:30\">noite 18:30</option>\n              <option value=\"noite 19:30\">noite 19:30</option>\n            </select>\n          </li>\n\n\n          <br></br>\n          <li>\n            <label className='greenHub'>\n              <input\n                type=\"radio\"\n                value=\"PrecisandoBuscar\"\n                checked={this.state.alimento === \"PrecisandoBuscar\"}\n                onChange={this.setTipoAlimento}\n              />\n              Tenho alimento perto de se perder  <img width=\"30px\" height=\"30px\" src={green}></img>\n            </label>\n            <select ref= {this.dropDownMenuSemana} id=\"dia\" onChange={this.setDiaSemana}>\n              <option value=\"Hoje\">Hoje</option>\n              <option value=\"toda Segunda\">toda Segunda</option>\n              <option value=\"toda Terça\">toda Terça</option>\n              <option value=\"toda Quarta\">toda Quarta</option>\n              <option value=\"toda Quinta\">toda Quinta</option>\n              <option value=\"toda Sexta\">toda Sexta</option>\n              <option value=\"todo Sábado\">todo Sábado</option>\n              <option value=\"todo Domingo\">todo Domingo</option>\n            </select>\n            <select ref= {this.dropDownMenuHorario} id=\"horario\" onChange={this.setHorario}>\n              <option value=\"manhã 05:30\">manhã 05:30</option>\n              <option value=\"manhã 06:30\">manhã 06:30</option>\n              <option value=\"tarde 13:30\">tarde 13:30</option>\n              <option value=\"tarde 16:30\">tarde 16:30</option>\n              <option value=\"noite 18:30\">noite 18:30</option>\n              <option value=\"noite 19:30\">noite 19:30</option>\n            </select>\n\n            \n          </li>\n\n        \n        </ul>\n        {/* FIM RADIO BUTTON */}\n        <input className=\"TextField\" type=\"text\" placeholder='Insira telefone se quiser' value={this.state.telefone} onChange={this.handleChangeTelefone} />\n                <MyLocationButton \n                location={this.state.center} \n                alimento={this.state.alimento} \n                telefone={this.state.telefoneEncryptado}\n                diaSemana={this.state.diaSemana}\n                horario={this.state.horario}\n                /> \n                <InserirEndereco \n                alimento={this.state.alimento} \n                telefone={this.state.telefoneEncryptado}\n                diaSemana={this.state.diaSemana}\n                horario={this.state.horario}\n                /> \n\n                <a className=\"wpbtn\" title=\"share to whatsapp\" href=\"whatsapp://send?text=Para marcar no mapa e alimentar quem tem fome, achei esse site: https://rslgp.github.io/mapafome\"> <img className=\"wp\" src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/>\n                Compartilhar no Whatsapp</a>\n                <a target='_blank' rel=\"noreferrer\" href=\"https://t.me/share?url=https%3A%2F%2Frslgp.github.io%2Fmapafome&amp;text=Para%20marcar%20no%20mapa%20e%20alimentar%20quem%20tem%20fome%2C%20achei%20esse%20site%3A\" className=\"tgme_widget_share_btn\"><img className=\"telegram\" src=\"https://telegram.org/img/WidgetButton_LogoSmall.png\" alt=\"\"></img></a>\n\n                {/* <img src={qr} alt=\"\"/> */}\n                {/* <CleanOld></CleanOld> */}\n                No Mapa da Fome todos podem ser ponte entre as cores ou contribuir, nele existem as<span className=\"yellowHub\">  pessoas </span> que  estão passando necessidade e fome (pedindo comida pronta ou de cesta básica),as<span className=\"blueHub\">  pessoas </span>que fazem sopão solidário, alimenta quem tem fome, ongs, voluntários que realizam distribuição de alimentos e as<span className=\"greenHub\"> pessoas </span>que trabalham com alimentos onde acontece desperdício, e<span className=\"redHub\">  pessoas </span>que entregam alimentação em ponto fixo em certo dia na semana cada um tem sua cor no mapa.\n                <Sugestao/>\n\n              </div>\n               \n              \n              }\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}