{"version":3,"sources":["components/twemoji.js","components/header.js","components/tableCount.js","components/googlesheets/form.js","components/googlesheets/mylocation.js","images/bean.svg","images/hub.svg","components/map.js","images/qr.svg","App.js","index.js"],"names":["Twemoji","emoji","dangerouslySetInnerHTML","__html","twemoji","parse","folder","ext","memo","Header","Component","this","props","rowCountProp","id","AppBar","position","Toolbar","Typography","variant","className","GoogleSpreadsheet","require","provider","OpenStreetMapProvider","doc","process","NameForm","state","value","alimento","isLoading","handleChange","bind","handleSubmit","event","setState","target","self","a","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsByIndex","row","Roaster","URL","replace","City","DateISO","Date","toISOString","search","query","providerResult","length","console","log","latlon","y","x","Coordinates","JSON","stringify","addRow","window","location","reload","preventDefault","CircularProgress","onSubmit","type","placeholder","onChange","nextProps","loadCells","getCell","saveUpdatedCells","getRows","result","onClick","TimeAgo","addDefaultLocale","pt","timeAgo","myIcon","L","Icon","iconUrl","coffeeBean","iconSize","Point","hubIcon","hub","CoffeeMap","dataMaps","center","screensizeZoom","innerWidth","MapContainer","style","height","width","zoom","maxZoom","attributionControl","TileLayer","url","attribution","AttributionControl","prefix","spiderfyDistanceMultiplier","showCoverageOnHover","maxClusterRadius","dataMapsProp","filter","map","dataItem","k","dateMarked","precisandoMsg","CurrentIcon","mapCoords","googleDirection","format","now","getTime","Marker","eventHandlers","click","e","icon","Popup","href","rel","ReactGA","initialize","pageview","pathname","App","dataHeader","label","rowCount","setTipoAlimento","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","rows","forEach","needsUpdates","index","city","setTimeout","save","Grid","container","spacing","item","xs","sm","Paper","checked","title","src","alt","qr","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e17cb2d0.chunk.js","sourcesContent":["import React, { memo } from 'react'\nimport twemoji from 'twemoji'\n\n// Using the official https://github.com/twitter/twemoji from Twitter\n// With an excellent example from https://gist.github.com/chibicode/fe195d792270910226c928b69a468206\n\nconst Twemoji = ({ emoji }) => (\n    <span\n        dangerouslySetInnerHTML={{\n            __html: twemoji.parse(emoji, {\n                folder: 'svg',\n                ext: '.svg'\n            })\n        }}\n    />\n)\n\nexport default memo(Twemoji)","import React, { Component } from 'react';\nimport Twemoji from './twemoji';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import github_mark from '../images/github_mark.png';\nimport TableCount from './tableCount';\n\nclass Header extends Component {\n\n    render() {\n\n        const { rowCountProp } = this.props;\n\n        return (\n            <div id=\"header\">\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" id=\"logo\">\n                            <Twemoji emoji=\"☕\" /> MAPA da FOME <span className=\"beta\">(beta)</span> \n                        </Typography>\n                        {/* <TableCount rowCountProp={rowCountProp} /> */}\n                        {/* <a href=\"https://docs.google.com/spreadsheets/d/1u7jiqY1qM0jYWugn1dFiW3plQrvWysJqm8xXhO35zuU/edit?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Button\n                                variant=\"contained\"\n                                size=\"small\">\n                                Add<span id=\"RoasterButtonMobile\">&nbsp;Roaster</span>\n                            </Button>\n                        </a>\n                        <a href=\"https://github.com/hdehal/coffee-maps\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <IconButton\n                                className=\"GitHub\"\n                                variant=\"outlined\"\n                                size=\"small\">\n                                <img className=\"GitHub\" src={github_mark} alt=\"Hosted on GitHub\" />\n                            </IconButton>\n                        </a> */}\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass TableCount extends Component {\n    render() {\n        return (\n            <Typography className=\"TableCount\">\n                TOTAL: {this.props.rowCountProp}\n            </Typography>\n        );\n    }\n}\n\nexport default TableCount;","import React, { Component } from 'react';\r\n\r\nimport { \r\n  OpenStreetMapProvider,\r\n  // BingProvider \r\n} from 'leaflet-geosearch';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\nconst provider = new OpenStreetMapProvider();\r\n\r\n// = new BingProvider({\r\n//   params: {\r\n//     key: process.env.REACT_APP_BING_MAPS_API_KEY\r\n//   },\r\n// });\r\n//\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass NameForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: '', alimento: props.alimento, isLoading:false};\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    //ATUALIZAR PROPS VINDAS DO PAI\r\n    static getDerivedStateFromProps(nextProps, state) {\r\n      if (state && nextProps.alimento !== state.alimento){ \r\n        state.alimento=nextProps.alimento;\r\n      }\r\n      return state;\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      //alert('Um endereço foi enviado: ' + this.state.value);\r\n      if(this.state.value === '') {event.preventDefault();return;}\r\n      \r\n      this.setState({isLoading: true});\r\n\r\n      (async function main(self) {\r\n        await doc.useServiceAccountAuth({\r\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n        });\r\n\r\n        await doc.loadInfo(); // Loads document properties and worksheets\r\n\r\n        const sheet = doc.sheetsByIndex[0];\r\n        //row = { Name: \"new name\", Value: \"new value\" };\r\n        \r\n        // Total row count\r\n        const row = { Roaster:  self.state.alimento, URL:self.state.value.replace(/[^0-9]/g,''), City: self.state.value, DateISO: new Date().toISOString() };\r\n        \r\n        try{\r\n          let providerResult = await provider.search({ query: self.state.value.replace('-',\",\") + ', Brazil' });\r\n  \r\n          if(providerResult.length !== 0 ){\r\n              // throw new Error(\"endereco-nao-encontrado\");\r\n  \r\n              console.log(providerResult);\r\n              let latlon = [providerResult[0].y, providerResult[0].x];\r\n              row.Coordinates = JSON.stringify(latlon); // Convert obj to string\r\n              //needsUpdates[index].mapCoords = latlon;\r\n          }\r\n        }catch(e){\r\n            console.log(\"ERRO\");\r\n            console.log(e);\r\n        }\r\n        await sheet.addRow(row);\r\n       \r\n        self.setState({isLoading: false});\r\n        window.location.reload();\r\n      })(this);\r\n      event.preventDefault();\r\n    }\r\n\r\n    \r\n  \r\n    render() {\r\n      return (\r\n        this.state.isLoading ?\r\n        <div><CircularProgress /></div>\r\n        :\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <input className=\"TextField\" type=\"text\" placeholder='Insira rua,bairro,cidade,estado' value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input className=\"SubmitButton\" type=\"submit\" value=\"Enviar Endereço\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\nexport default NameForm; ","import React, { Component } from 'react';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass NameForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: '', location: props.location, alimento: props.alimento, isLoading:props.isLoading};\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    \r\n  componentDidMount() {\r\n      \r\n    //salvar acesso  \r\n      \r\n    (async function main(self) {\r\n      try{\r\n        await doc.useServiceAccountAuth({\r\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n        });\r\n    \r\n        await doc.loadInfo(); // Loads document properties and worksheets\r\n    \r\n        const sheet = doc.sheetsByIndex[1];\r\n        \r\n        await sheet.loadCells('A2');\r\n        const a1 = sheet.getCell(1, 0);\r\n        a1.value+=1;\r\n        await sheet.saveUpdatedCells();\r\n      }catch(e){\r\n        \r\n      }\r\n      \r\n    })(this);\r\n\r\n  }\r\n\r\n    //ATUALIZAR PROPS VINDAS DO PAI\r\n    static getDerivedStateFromProps(nextProps, state) {\r\n      if (state && nextProps.alimento !== state.alimento){ \r\n        state.alimento=nextProps.alimento;\r\n      }\r\n      return state;\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) { \r\n        //navigator.geolocation.getCurrentPosition(function(position) {\r\n        this.setState({isLoading: true});\r\n            (async function main(self) {\r\n                await doc.useServiceAccountAuth({\r\n                    client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n                    private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n                });\r\n        \r\n                await doc.loadInfo(); // Loads document properties and worksheets\r\n        \r\n                const sheet = doc.sheetsByIndex[0];\r\n                const rows = await sheet.getRows();\r\n                // Total row count\r\n                const row = { Roaster: self.state.alimento, URL:\"\", City: \"\", Coordinates:JSON.stringify([self.props.location[0], self.props.location[1]]), DateISO: new Date().toISOString() };\r\n                \r\n                const result = await sheet.addRow(row);\r\n                console.log(result);\r\n                window.location.reload();\r\n            })(this);\r\n        //});\r\n      event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n          this.state.isLoading ?\r\n          <div><CircularProgress /></div>\r\n          :\r\n          <button className=\"SubmitButton\" onClick={this.handleSubmit}>\r\n            Marcar Minha Localização Atual\r\n          </button>\r\n        \r\n      );\r\n    }\r\n  }\r\nexport default NameForm; ","export default __webpack_public_path__ + \"static/media/bean.59d85c01.svg\";","export default __webpack_public_path__ + \"static/media/hub.c055cf20.svg\";","import React, { Component } from 'react';\nimport { MapContainer, Marker, TileLayer, Tooltip, AttributionControl, Popup } from \"react-leaflet\";\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport \"react-leaflet-markercluster/dist/styles.min.css\";\nimport coffeeBean from '../images/bean.svg';\nimport hub from '../images/hub.svg';\nimport TimeAgo from 'javascript-time-ago';\n\nimport pt from 'javascript-time-ago/locale/pt.json';\nTimeAgo.addDefaultLocale(pt);\n\nconst timeAgo = new TimeAgo();\n\n// Leaflet custom marker\nconst myIcon = new L.Icon({\n    // Coffee bean attribution -- Thanks! https://commons.wikimedia.org/wiki/File:Coffee_bean_symbol.svg\n    iconUrl: coffeeBean,\n    iconSize: new L.Point(20, 20),\n    className: 'leaflet-bean-icon',\n});\n\n\n// Leaflet custom marker\nconst hubIcon = new L.Icon({\n    // Coffee bean attribution -- Thanks! https://commons.wikimedia.org/wiki/File:Coffee_bean_symbol.svg\n    iconUrl: hub,\n    iconSize: new L.Point(30, 30),\n    className: 'leaflet-bean-icon',\n});\n\nclass CoffeeMap extends Component {\n\n    // Initial state\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            dataMaps: [],\n            center: props.location\n        }\n    }\n\n    render() {\n\n        // Render map default zoom based on mobile breakpoint\n        const isMobile = window.innerWidth < 480;\n        const screensizeZoom = isMobile ? 7.25 : 8.5*1.2;\n\n        return (\n            <div>\n                <MapContainer\n                    style={{ height: \"89vh\", width: \"100%\" }}\n                    zoom={screensizeZoom}\n                    maxZoom={20}\n                    center={this.state.center}\n                    attributionControl={false}>\n                    <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />\n\n                    <AttributionControl\n                        position=\"bottomleft\"\n                        prefix={false}\n                    />\n\n                    <MarkerClusterGroup\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                    >\n                        {this.props.dataMapsProp.filter(x => { return x.Coordinates; }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO } = dataItem;\n                            let googleDirection = `https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`;\n                            \n                            let dateMarked;\n                            if(DateISO) dateMarked = timeAgo.format(Date.now() - (Date.now() - new Date(DateISO).getTime()) );\n                            \n                            let precisandoMsg, CurrentIcon;\n                            if(Roaster === \"Doador\"){\n                                precisandoMsg = \"Recebendo alimento para distribuir\"+URL;\n                                CurrentIcon = hubIcon;\n                            }else{\n                                precisandoMsg = `Precisando de ${Roaster}`;\n                                CurrentIcon = myIcon;\n                            }\n                            \n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`); \n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                    <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked}\n                                    </Popup>\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n                </MapContainer>\n            </div>\n        );\n    }\n}\n\nexport default CoffeeMap;","export default __webpack_public_path__ + \"static/media/qr.20154bbf.svg\";","import React, { Component } from 'react';\nimport './App.css';\nimport { OpenStreetMapProvider } from 'leaflet-geosearch';\nimport Header from './components/header';\n\nimport NameForm from './components/googlesheets/form';\nimport MyLocationButton from './components/googlesheets/mylocation';\n\nimport CoffeeMap from './components/map.js';\n// import CoffeeTable from './components/table';\nimport ReactGA from 'react-ga';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nimport qr from './images/qr.svg';\n\n// Material-UI\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n// Google Analytics\nfunction initializeReactGA() {\n  ReactGA.initialize('UA-172868315-1');\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\ninitializeReactGA()\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\n\n// Google Sheets Document ID -- PROD\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\n\n// Google Sheets Document ID -- DEV\n// const doc = new GoogleSpreadsheet('1jQI6PstbEArW_3xDnGgPJR6_37r_KjLoa765bOgMBhk');\n\n// Provider for leaflet-geosearch plugin\nconst provider = new OpenStreetMapProvider();\n//limit osm https://operations.osmfoundation.org/policies/nominatim/\n\nclass App extends Component {\n\n  // Initial state\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      dataMaps: [],\n      dataHeader: [{ label: \"Índice\" }, { label: \"Lugar\" }],\n      rowCount: '',\n      center:[-8.0671132,-34.8766719],\n      alimento:'Alimento não perecível'\n    }\n\n    this.setTipoAlimento = this.setTipoAlimento.bind(this);\n  }\n\n  setTipoAlimento(event){\n    this.setState({\n      alimento: event.target.value\n    });\n\n  }\n\n  componentDidMount() {\n\n    // Google Sheets API\n    // Based on https://github.com/theoephraim/node-google-spreadsheet\n\n    var self = this;\n\n    //current location    \n    navigator.geolocation.getCurrentPosition(function(position) {\n      self.setState({center: [position.coords.latitude, position.coords.longitude]}) \n    });\n\n    (async function main() {\n      // Use service account creds\n      await doc.useServiceAccountAuth({\n        client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n        private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n      });\n\n      await doc.loadInfo(); // Loads document properties and worksheets\n\n      const sheet = doc.sheetsByIndex[0];\n      const rows = await sheet.getRows();\n      // Total row count\n      self.setState({ rowCount: rows.length });\n\n      rows.forEach((x) => { if (x.Coordinates) { x.mapCoords = JSON.parse(x.Coordinates); } });\n\n      self.setState({ dataMaps: rows });\n\n      var needsUpdates = rows.filter((x) => { return !x.Coordinates; });\n      if(needsUpdates.length === 0) console.log(\"nao precisa atualizar\");\n      if (needsUpdates && needsUpdates.length > 0) {\n          for (let index in needsUpdates) {\n            // if(needsUpdates[index]._rawData.length===0) needsUpdates[index].delete(); //se deixar rows vazias na planilha\n              let city = needsUpdates[index].City;\n              setTimeout(() => \n                  {\n                      (async function main() {\n                          try{\n                              let providerResult = await provider.search({ query: city.replace('-',\",\") + ', Brazil' });\n                      \n                              if(providerResult.length !== 0 ){\n                                  // throw new Error(\"endereco-nao-encontrado\");\n                      \n                                  console.log(providerResult);\n                                  let latlon = [providerResult[0].y, providerResult[0].x];\n                                  needsUpdates[index].Coordinates = JSON.stringify(latlon); // Convert obj to string\n                                  //needsUpdates[index].mapCoords = latlon;\n                                  await needsUpdates[index].save(); // Save to remote Google Sheet\n                              }\n                          }catch(e){\n                              console.log(\"ERRO\");\n                              console.log(e);\n                          }\n                      })();\n                  \n                  },1300                        \n              );\n              \n          }\n        self.setState({ dataMaps: rows });\n      }\n\n      // Loading message \n      self.setState({ isLoading: false })\n\n    })();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header rowCountProp={this.state.rowCount} />\n        {/* <NameForm/>\n        <MyLocationButton location={this.state.center}/> */}\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={8}>\n            <Paper id=\"CoffeeMap\" className=\"fadeIn\">\n              {this.state.isLoading\n                ? <div className=\"flexLoading\"><div className=\"loading\">Carregando...</div></div>\n                : <CoffeeMap dataMapsProp={this.state.dataMaps} location={this.state.center}/>\n              }\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Paper id=\"CoffeeTable\">\n              {this.state.isLoading\n                ? <div className=\"flexLoading\"><div className=\"loading\"><CircularProgress /></div></div>\n                // : <CoffeeTable dataMapsProp={this.state.dataMaps} dataHeaderProp={this.state.dataHeader} />\n              : <div>\n                Mapeados: {this.state.rowCount}<br></br>Insira o endereço de quem está sem dinheiro e com fome e o selecione tipo de alimento:\n        {/* RADIO BUTTON */}\n        <ul>\n          <li>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"Alimento não perecível\"\n                checked={this.state.alimento === \"Alimento não perecível\"}\n                onChange={this.setTipoAlimento}\n              />\n              Alimento não perecível\n            </label>\n          </li>\n          \n          <li>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"Alimento pronto\"\n                checked={this.state.alimento === \"Alimento pronto\"}\n                onChange={this.setTipoAlimento}\n              />\n              Alimento pronto\n            </label>\n          </li>\n\n          \n          <li>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"Doador\"\n                checked={this.state.alimento === \"Doador\"}\n                onChange={this.setTipoAlimento}\n              />\n              Recebo para doar\n            </label>\n          </li>\n        </ul>\n        {/* FIM RADIO BUTTON */}\n                <MyLocationButton location={this.state.center}  alimento={this.state.alimento}/> \n                <NameForm alimento={this.state.alimento}/> \n                <a className=\"wpbtn\" title=\"share to whatsapp\" href=\"whatsapp://send?text=Para marcar no mapa e alimentar quem tem fome, achei esse site: https://rslgp.github.io/mapafome\"> <img className=\"wp\" src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/>\n                Compartilhar no Whatsapp</a>\n                <a target='_blank' rel=\"noreferrer\" href=\"https://t.me/share?url=https%3A%2F%2Frslgp.github.io%2Fmapafome&amp;text=Para%20marcar%20no%20mapa%20e%20alimentar%20quem%20tem%20fome%2C%20achei%20esse%20site%3A\" className=\"tgme_widget_share_btn\"><img className=\"telegram\" src=\"https://telegram.org/img/WidgetButton_LogoSmall.png\" alt=\"\"></img></a>\n\n                <img src={qr} alt=\"\"/>\n\n              </div>\n               \n              \n              }\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}