{"version":3,"sources":["components/twemoji.js","components/tableCount.js","components/header.js","components/googlesheets/form.js","components/googlesheets/mylocation.js","images/bean.svg","components/map.js","App.js","index.js"],"names":["Twemoji","emoji","dangerouslySetInnerHTML","__html","twemoji","parse","folder","ext","memo","TableCount","Typography","className","this","props","rowCountProp","Component","Header","id","AppBar","position","Toolbar","variant","GoogleSpreadsheet","require","provider","OpenStreetMapProvider","doc","process","NameForm","state","value","alimento","handleChange","bind","handleSubmit","nextProps","setState","event","target","self","a","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsByIndex","getRows","rows","row","Roaster","URL","City","Date","toISOString","addRow","result","console","log","forEach","x","Coordinates","mapCoords","JSON","needsUpdates","filter","length","index","city","search","query","replace","providerResult","latlon","y","stringify","save","window","location","reload","preventDefault","onSubmit","type","placeholder","onChange","onClick","myIcon","L","Icon","iconUrl","coffeeBean","iconSize","Point","CoffeeMap","dataMaps","center","screensizeZoom","innerWidth","MapContainer","style","height","width","zoom","maxZoom","attributionControl","TileLayer","url","attribution","AttributionControl","prefix","spiderfyDistanceMultiplier","showCoverageOnHover","maxClusterRadius","dataMapsProp","map","dataItem","k","Marker","eventHandlers","click","e","open","icon","Tooltip","direction","offset","opacity","href","ReactGA","initialize","pageview","pathname","App","isLoading","dataHeader","label","rowCount","setTipoAlimento","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","Grid","container","spacing","item","xs","sm","Paper","CircularProgress","checked","class","title","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98224bb5.chunk.js","sourcesContent":["import React, { memo } from 'react'\nimport twemoji from 'twemoji'\n\n// Using the official https://github.com/twitter/twemoji from Twitter\n// With an excellent example from https://gist.github.com/chibicode/fe195d792270910226c928b69a468206\n\nconst Twemoji = ({ emoji }) => (\n    <span\n        dangerouslySetInnerHTML={{\n            __html: twemoji.parse(emoji, {\n                folder: 'svg',\n                ext: '.svg'\n            })\n        }}\n    />\n)\n\nexport default memo(Twemoji)","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass TableCount extends Component {\n    render() {\n        return (\n            <Typography className=\"TableCount\">\n                TOTAL: {this.props.rowCountProp}\n            </Typography>\n        );\n    }\n}\n\nexport default TableCount;","import React, { Component } from 'react';\nimport Twemoji from './twemoji';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import github_mark from '../images/github_mark.png';\nimport TableCount from './tableCount';\n\nclass Header extends Component {\n\n    render() {\n\n        const { rowCountProp } = this.props;\n\n        return (\n            <div id=\"header\">\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" id=\"logo\">\n                            <Twemoji emoji=\"☕\" /> MAPA da FOME\n                        </Typography>\n                        <TableCount rowCountProp={rowCountProp} />\n                        {/* <a href=\"https://docs.google.com/spreadsheets/d/1u7jiqY1qM0jYWugn1dFiW3plQrvWysJqm8xXhO35zuU/edit?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Button\n                                variant=\"contained\"\n                                size=\"small\">\n                                Add<span id=\"RoasterButtonMobile\">&nbsp;Roaster</span>\n                            </Button>\n                        </a>\n                        <a href=\"https://github.com/hdehal/coffee-maps\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <IconButton\n                                className=\"GitHub\"\n                                variant=\"outlined\"\n                                size=\"small\">\n                                <img className=\"GitHub\" src={github_mark} alt=\"Hosted on GitHub\" />\n                            </IconButton>\n                        </a> */}\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\r\n\r\nimport { OpenStreetMapProvider } from 'leaflet-geosearch';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\nconst provider = new OpenStreetMapProvider();\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass NameForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: '', alimento: props.alimento};\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n      if (nextProps.alimento !== this.state.alimento) {\r\n        this.setState({ alimento: nextProps.alimento });\r\n      }\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      //alert('Um endereço foi enviado: ' + this.state.value);\r\n      (async function main(self) {\r\n        await doc.useServiceAccountAuth({\r\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n        });\r\n\r\n        await doc.loadInfo(); // Loads document properties and worksheets\r\n\r\n        const sheet = doc.sheetsByIndex[0];\r\n        //row = { Name: \"new name\", Value: \"new value\" };\r\n        const rows = await sheet.getRows();\r\n        // Total row count\r\n        const row = { Roaster:  self.state.alimento, URL:\"\", City: self.state.value, Date: new Date().toISOString() };\r\n        const result = await sheet.addRow(row);\r\n        console.log(result);\r\n       \r\n\r\n        rows.forEach((x) => { if (x.Coordinates) { x.mapCoords = JSON.parse(x.Coordinates); } });\r\n\r\n        var needsUpdates = rows.filter((x) => { return !x.Coordinates; });\r\n\r\n        if (needsUpdates && needsUpdates.length > 0) {\r\n            for (let index in needsUpdates) {\r\n            let city = needsUpdates[index].City;\r\n                console.log(city);\r\n                try {\r\n                    let providerResult = await provider.search({ query: city.replace('-',\",\") + ', Brazil' });\r\n                    console.log(providerResult);\r\n                    let latlon = [providerResult[0].y, providerResult[0].x];\r\n                    needsUpdates[index].Coordinates = JSON.stringify(latlon); // Convert obj to string\r\n                    needsUpdates[index].mapCoords = latlon;\r\n                    await needsUpdates[index].save(); // Save to remote Google Sheet\r\n                    \r\n                    window.location.reload();\r\n                }\r\n                catch (e) {\r\n                    console.log(e);\r\n                }\r\n            }\r\n        }\r\n    })(this);\r\n      event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <input className=\"TextField\" type=\"text\" placeholder='Insira o endereço' value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input className=\"SubmitButton\" type=\"submit\" value=\"Enviar Endereço\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\nexport default NameForm; ","import React, { Component } from 'react';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass NameForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: '', location: props.location, alimento: props.alimento};\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps) {\r\n      if (nextProps.alimento !== this.state.alimento) {\r\n        this.setState({ alimento: nextProps.alimento });\r\n      }\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) { \r\n        //navigator.geolocation.getCurrentPosition(function(position) {\r\n            \r\n            (async function main(self) {\r\n                await doc.useServiceAccountAuth({\r\n                    client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n                    private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n                });\r\n        \r\n                await doc.loadInfo(); // Loads document properties and worksheets\r\n        \r\n                const sheet = doc.sheetsByIndex[0];\r\n                const rows = await sheet.getRows();\r\n                // Total row count\r\n                const row = { Roaster: self.state.alimento, URL:\"\", City: \"\", Coordinates:JSON.stringify([self.props.location[0], self.props.location[1]]), Date: new Date().toISOString() };\r\n                \r\n                const result = await sheet.addRow(row);\r\n                console.log(result);\r\n                window.location.reload();\r\n            })(this);\r\n        //});\r\n      event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <button className=\"SubmitButton\" onClick={this.handleSubmit}>\r\n          Marcar Minha Localização Atual\r\n        </button>\r\n      );\r\n    }\r\n  }\r\nexport default NameForm; ","export default __webpack_public_path__ + \"static/media/bean.f4ec17ff.svg\";","import React, { Component } from 'react';\nimport { MapContainer, Marker, TileLayer, Tooltip, AttributionControl } from \"react-leaflet\";\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport \"react-leaflet-markercluster/dist/styles.min.css\";\nimport coffeeBean from '../images/bean.svg'\n\n// Leaflet custom marker\nconst myIcon = new L.Icon({\n    // Coffee bean attribution -- Thanks! https://commons.wikimedia.org/wiki/File:Coffee_bean_symbol.svg\n    iconUrl: coffeeBean,\n    iconSize: new L.Point(25, 25),\n    className: 'leaflet-bean-icon',\n});\n\nclass CoffeeMap extends Component {\n\n    // Initial state\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            dataMaps: [],\n            center: props.location\n        }\n    }\n\n    render() {\n\n        // Render map default zoom based on mobile breakpoint\n        const isMobile = window.innerWidth < 480;\n        const screensizeZoom = isMobile ? 7.25 : 8.5*1.2;\n\n        return (\n            <div>\n                <MapContainer\n                    style={{ height: \"89vh\", width: \"100%\" }}\n                    zoom={screensizeZoom}\n                    maxZoom={20}\n                    center={this.state.center}\n                    attributionControl={false}>\n                    <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank'>OpenStreetMap</a>\"\n                    />\n\n                    <AttributionControl\n                        position=\"bottomleft\"\n                        prefix={false}\n                    />\n\n                    <MarkerClusterGroup\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                    >\n                        {this.props.dataMapsProp.filter(x => { return x.Coordinates; }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL } = dataItem;\n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) }\n                                    }}\n                                    icon={myIcon}\n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                    <Tooltip\n                                        direction=\"auto\"\n                                        offset={[15, 0]}\n                                        opacity={1}>\n                                        <span><a href={URL}>{Roaster}</a></span>\n                                        {/* <span>{City}, BR</span> */}\n                                    </Tooltip>\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n                </MapContainer>\n            </div>\n        );\n    }\n}\n\nexport default CoffeeMap;","import React, { Component } from 'react';\nimport './App.css';\nimport { OpenStreetMapProvider } from 'leaflet-geosearch';\nimport Header from './components/header';\nimport NameForm from './components/googlesheets/form';\nimport MyLocationButton from './components/googlesheets/mylocation';\nimport CoffeeMap from './components/map.js';\n// import CoffeeTable from './components/table';\nimport ReactGA from 'react-ga';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Material-UI\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n// Google Analytics\nfunction initializeReactGA() {\n  ReactGA.initialize('UA-159568942-2');\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\ninitializeReactGA()\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\n\n// Google Sheets Document ID -- PROD\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\n\n// Google Sheets Document ID -- DEV\n// const doc = new GoogleSpreadsheet('1jQI6PstbEArW_3xDnGgPJR6_37r_KjLoa765bOgMBhk');\n\n// Provider for leaflet-geosearch plugin\nconst provider = new OpenStreetMapProvider();\n\nclass App extends Component {\n\n  // Initial state\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      dataMaps: [],\n      dataHeader: [{ label: \"Índice\" }, { label: \"Lugar\" }],\n      rowCount: '',\n      center:[-8.0671132,-34.8766719],\n      alimento:'Alimento não perecível'\n    }\n\n    this.setTipoAlimento = this.setTipoAlimento.bind(this);\n  }\n\n  setTipoAlimento(event){\n    this.setState({\n      alimento: event.target.value\n    });\n\n  }\n\n  componentDidMount() {\n\n    // Google Sheets API\n    // Based on https://github.com/theoephraim/node-google-spreadsheet\n\n    var self = this;\n\n    //current location    \n    navigator.geolocation.getCurrentPosition(function(position) {\n      self.setState({center: [position.coords.latitude, position.coords.longitude]}) \n    });\n\n    (async function main() {\n      // Use service account creds\n      await doc.useServiceAccountAuth({\n        client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n        private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n      });\n\n      await doc.loadInfo(); // Loads document properties and worksheets\n\n      const sheet = doc.sheetsByIndex[0];\n      const rows = await sheet.getRows();\n      // Total row count\n      self.setState({ rowCount: rows.length });\n\n      rows.forEach((x) => { if (x.Coordinates) { x.mapCoords = JSON.parse(x.Coordinates); } });\n\n      self.setState({ dataMaps: rows });\n\n      var needsUpdates = rows.filter((x) => { return !x.Coordinates; });\n\n      if (needsUpdates && needsUpdates.length > 0) {\n        for (let index in needsUpdates) {\n          let city = needsUpdates[index].City;\n\n          try {\n            console.log(city);\n            let providerResult = await provider.search({ query: city.replace('-',\",\") + ', Brazil' });\n            let latlon = [providerResult[0].y, providerResult[0].x];\n            needsUpdates[index].Coordinates = JSON.stringify(latlon); // Convert obj to string\n            needsUpdates[index].mapCoords = latlon;\n            await needsUpdates[index].save(); // Save to remote Google Sheet\n          }\n          catch (e) {\n            console.log(e);\n          }\n        }\n\n        self.setState({ dataMaps: rows });\n      }\n\n      // Loading message \n      self.setState({ isLoading: false })\n\n    })();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header rowCountProp={this.state.rowCount} />\n        {/* <NameForm/>\n        <MyLocationButton location={this.state.center}/> */}\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={8}>\n            <Paper id=\"CoffeeMap\" className=\"fadeIn\">\n              {this.state.isLoading\n                ? <div className=\"flexLoading\"><div className=\"loading\">Brewing...</div></div>\n                : <CoffeeMap dataMapsProp={this.state.dataMaps} location={this.state.center}/>\n              }\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Paper id=\"CoffeeTable\">\n              {this.state.isLoading\n                ? <div className=\"flexLoading\"><div className=\"loading\"><CircularProgress /></div></div>\n                // : <CoffeeTable dataMapsProp={this.state.dataMaps} dataHeaderProp={this.state.dataHeader} />\n              : <div>\n                Mapeados: {this.state.rowCount}<br></br>Insira o endereço que está sem dinheiro e com fome e o tipo de alimento que precisa:\n        <ul>\n          <li>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"Alimento não perecível\"\n                checked={this.state.alimento === \"Alimento não perecível\"}\n                onChange={this.setTipoAlimento}\n              />\n              Alimento não perecível\n            </label>\n          </li>\n          \n          <li>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"Alimento pronto\"\n                checked={this.state.alimento === \"Alimento pronto\"}\n                onChange={this.setTipoAlimento}\n              />\n              Alimento pronto\n            </label>\n          </li>\n        </ul>\n\n                  <NameForm alimento={this.state.alimento}/> \n                  <MyLocationButton location={this.state.center}  alimento={this.state.alimento}/>  \n                  <br></br>\n                  <a class=\"wpbtn\" title=\"share to whatsapp\" href=\"whatsapp://send?text=Para marcar no mapa quem tem fome, achei esse site: https://rslgp.github.io/mapafome\"> <img class=\"wp\" src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/>\n                  Compartilhar no Whatsapp</a>\n\n              </div>\n               \n              \n              }\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}