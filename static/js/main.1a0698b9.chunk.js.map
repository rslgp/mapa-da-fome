{"version":3,"sources":["components/variaveisAmbiente.js","components/map.js","images/currentLocation.svg","components/twemoji.js","components/header.js","components/tableCount.js","components/googlesheets/endereco.js","components/googlesheets/mylocation.js","components/googlesheets/sugestao.js","images/qr.svg","components/googlesheets/cleanold.js","App.js","index.js","images/bean.svg","images/hub.svg","images/green.svg","images/red.svg"],"names":["envVariables","undefined","localizacao","mapArea","teto","chao","paredeEsquerda","paredeDireita","TimeAgo","addDefaultLocale","pt","timeAgo","global","lastMarked","lastMarkedCoords","myIcon","L","Icon","iconUrl","coffeeBean","iconSize","Point","className","hubIcon","hub","greenIcon","green","redIcon","red","CurrentLocation","CurrentLocationSVG","interactive","TestIcon","markerclusterOptionsPrecisando","cluster","childCount","getChildCount","c","DivIcon","html","markerclusterOptionsAnjos","markerclusterOptionsEntrega","CoffeeMap","props","state","dataMaps","center","location","filtro","screensizeZoom","window","innerWidth","style","height","width","zoom","maxZoom","this","attributionControl","whenReady","map","target","on","e","latlng","lat","lng","remove","marker","icon","draggable","addTo","position","BaseLayer","checked","name","url","attribution","prefix","eventHandlers","click","preventDefault","renderSwitch","renderTestes","mapCoords","DateISO","Telefone","googleDirection","dateMarked","format","Date","now","getTime","length","replace","precisandoMsg","contato","AlimentoEntregue","Roaster","href","rel","src","onClick","removerPonto","entregarAlimento","spiderfyDistanceMultiplier","showCoverageOnHover","maxClusterRadius","iconCreateFunction","dataMapsProp","filter","x","Coordinates","dataItem","k","City","CurrentIcon","URL","DiaSemana","Horario","setupVariables","telefoneFilter","console","log","configPopup","msec","mins","Math","floor","param","renderDoadoresAzul","renderDoadoresVerde","renderNecessitados","renderDoadoresVermelho","nextProps","Component","Twemoji","emoji","dangerouslySetInnerHTML","__html","twemoji","parse","folder","ext","memo","Header","rowCountProp","id","AppBar","Toolbar","Typography","variant","GoogleSpreadsheet","require","provider","OpenStreetMapProvider","doc","process","NameForm","value","alimento","isLoading","telefone","diaSemana","horario","handleChange","bind","handleSubmit","event","setState","self","a","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsByIndex","numero","alert","dadosJSON","toISOString","row","Dados","JSON","stringify","search","query","providerResult","latlon","y","Error","addRow","reload","CircularProgress","onSubmit","type","placeholder","onChange","loadCells","getCell","saveUpdatedCells","dentroLimites","regiao","result","Sugestoes","Sugestao","aes","AesEncryption","ReactGA","initialize","pageview","pathname","setSecretKey","App","dataHeader","label","rowCount","telefoneEncryptado","telefoneFilterLocal","dropDownMenuSemana","React","createRef","dropDownMenuHorario","dropDownMenuFiltro","handleChangeNumero","setTipoAlimento","handleChangeTelefone","setDiaSemana","setHorario","setFiltro","handleClickMap","telefoneFilterChange","coords","categoriaPonto","motivo","prompt","Motivo","Ponto","CategoriaPonto","getRows","rows","rowEncontrada","dadosNovos","save","current","selectedOptions","telefoneValue","encrypt","getLatLng","navigator","geolocation","getCurrentPosition","latitude","longitude","forEach","dados","decrypt","fixarPonto","endereco","includes","Grid","container","spacing","item","xs","sm","Paper","tileMapOption","ref","Checkbox","inputProps","title","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a0698b9.chunk.js","sourcesContent":["const envVariables = {\r\n    \"mapArea\": {\r\n        \"teto\":2.20,\r\n        \"chao\":-14.09,\r\n        \"paredeEsquerda\":-52.42,\r\n        \"paredeDireita\":-34.32\r\n    },\r\n    \"lastMarked\":undefined,\r\n    \"dentroLimites\": (localizacao) => {\r\n        let permissao = false;\r\n        permissao = \r\n            //cima baixo\r\n            (localizacao[0]< envVariables.mapArea.teto && localizacao[0] > envVariables.mapArea.chao\r\n            &&\r\n            //esquerda direita\r\n            localizacao[1]>envVariables.mapArea.paredeEsquerda && localizacao[1] < envVariables.mapArea.paredeDireita        \r\n            ) || (\r\n              //cima baixo\r\n              localizacao[0]<-14.18 && localizacao[0] > -32.66\r\n              &&\r\n              //esquerda direita\r\n              localizacao[1]>-55.55 && localizacao[1] < -38.06        \r\n            );\r\n        return permissao;\r\n    },\r\n    \"telefoneFilter\":false\r\n}\r\n\r\nexport default envVariables;","import React, { Component } from 'react';\nimport { MapContainer, Marker, TileLayer, Tooltip, AttributionControl, Popup, LayersControl } from \"react-leaflet\";\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport \"react-leaflet-markercluster/dist/styles.min.css\";\nimport coffeeBean from '../images/bean.svg';\nimport hub from '../images/hub.svg';\nimport green from '../images/green.svg';\nimport red from '../images/red.svg';\nimport CurrentLocationSVG from '../images/currentLocation.svg';\nimport TimeAgo from 'javascript-time-ago';\n\nimport envVariables from './variaveisAmbiente';\n\nimport pt from 'javascript-time-ago/locale/pt.json';\nTimeAgo.addDefaultLocale(pt);\n\nconst timeAgo = new TimeAgo();\n\nglobal.lastMarked = undefined;\nglobal.lastMarkedCoords = undefined;\n\n// Leaflet custom marker\nconst myIcon = new L.Icon({\n    // Coffee bean attribution -- Thanks! https://commons.wikimedia.org/wiki/File:Coffee_bean_symbol.svg\n    iconUrl: coffeeBean,\n    iconSize: new L.Point(20, 20),\n    className: 'leaflet-bean-icon',\n});\n\n\n// Leaflet custom marker\nconst hubIcon = new L.Icon({\n    iconUrl: hub,\n    iconSize: new L.Point(30, 30),\n    className: 'leaflet-bean-icon',\n});\n\n// Leaflet custom marker\nconst greenIcon = new L.Icon({\n    iconUrl: green,\n    iconSize: new L.Point(35, 35),\n    className: 'leaflet-bean-icon',\n});\nconst redIcon = new L.Icon({\n    iconUrl: red,\n    iconSize: new L.Point(35, 35),\n    className: 'leaflet-bean-icon',\n});\n\nconst CurrentLocation = new L.Icon({\n    iconUrl: CurrentLocationSVG,\n    iconSize: new L.Point(150, 150),\n    className: 'leaflet-bean-icon',\n    interactive: false\n});\n\nconst TestIcon = new L.Icon({\n    iconUrl: 'https://maps.gstatic.com/tactile/reveal/close_1x_16dp.png',\n    iconSize: new L.Point(10, 10),\n    className: 'leaflet-bean-icon',\n    interactive: false\n});\n\n\nconst markerclusterOptionsPrecisando = function (cluster) {\n        var childCount = cluster.getChildCount();\n        var c = ' marker-cluster-';\n        if (childCount < 10) {\n          c += 'small';\n        } \n        else if (childCount < 100) {\n          c += 'medium';\n        } \n        else {\n          c += 'large';\n        }\n       \n        return new L.DivIcon({ html: '<div><span>' + childCount + '</span></div>', \n         className: 'marker-cluster' + c + '-precisandoCluster', iconSize: new L.Point(40, 40) });\n        };\n\n  const markerclusterOptionsAnjos = (cluster) => {\n    var childCount = cluster.getChildCount();\n    var c = ' marker-cluster-';\n    if (childCount < 10) {\n      c += 'small';\n    } \n    else if (childCount < 100) {\n      c += 'medium';\n    } \n    else {\n      c += 'large';\n    }\n   \n    return new L.DivIcon({ html: '<div><span>' + childCount + '</span></div>', \n     className: 'marker-cluster' + c +'-anjosCluster', iconSize: new L.Point(40, 40) });\n    };\n\n    const markerclusterOptionsEntrega = (cluster) => {       \n        return new L.DivIcon({ html: '<div><span>' + cluster.getChildCount() + '</span></div>', \n         className: 'redHub marker-cluster', iconSize: new L.Point(40, 40) });\n    };\n\n\nclass CoffeeMap extends Component {\n\n    // Initial state\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            dataMaps: [],\n            center: props.location,\n            filtro: props.filtro,\n        }\n    }\n\n     //ATUALIZAR PROPS VINDAS DO PAI\n     static getDerivedStateFromProps(nextProps, state) {\n        if(state){\n          if (nextProps.filtro !== state.filtro){ \n            state.filtro=nextProps.filtro;\n          }\n        }\n        return state;\n      }\n\n    render() {\n\n        // Render map default zoom based on mobile breakpoint\n        const isMobile = window.innerWidth < 480;\n        const screensizeZoom = isMobile ? 7.25 : 8.5*1.2;\n\n        return (\n            <div>\n                <MapContainer\n                    style={{ height: \"89vh\", width: \"100%\" }}\n                    zoom={screensizeZoom}\n                    maxZoom={18}\n                    center={this.state.center}\n                    attributionControl={false}\n                    whenReady={(map) => {\n                        //console.log(map);\n                        map.target.on(\"click\", function (e) {\n                          //if(e.originalEvent.detail>=2)alert(e.originalEvent.detail);\n                          const { lat, lng } = e.latlng;\n                          //envVariables.lastMarked.latlng = [lat,lng];\n                        //   console.log(this);\n                        //   this.props.onClickMap([lat,lng]);\n                          if(envVariables.lastMarked) envVariables.lastMarked.remove();\n                          envVariables.lastMarked = L.marker([lat, lng], {icon:CurrentLocation, draggable: false}).addTo(map.target);\n                        });\n                      }}\n                    >\n\n\n{/* https://github.com/dhis2-club-tanzania/function-maintenance/blob/0dadaa96955156b6ddefc0fcf9dd54e45ffb9458/src/app/shared/modules/ngx-dhis2-visualization/modules/map/constants/tile-layer.constant.ts */}\n{/* https://www.arcgis.com/apps/mapviewer/index.html */}\n                    {/* <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n                     {/* <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n                    {/* <TileLayer url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n\n                    \n                     {/* {this.state.tileMapOption ? \n                     <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                     attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                 />\n                    :\n                    <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />\n                } */}\n\n                     {/* <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n                    {/* <TileLayer url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />  */}\n                    {/* <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />  */}\n                    <LayersControl position=\"bottomleft\">\n                    <LayersControl.BaseLayer checked name=\"Waze\">\n                    <TileLayer url=\"https://worldtiles1.waze.com/tiles/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer  name=\"Mapa\">\n                    <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                     attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OSM</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n\n                    <LayersControl.BaseLayer name=\"Satelite\">\n                    <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='https://www.arcgis.com/apps/mapviewer/index.html' target='_blank' rel='noreferrer'>Esri</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n\n                    \n                    </LayersControl>\n\n\n\n                    <AttributionControl\n                        position=\"bottomleft\"\n                        prefix={false}\n                    />\n                    \n                    <Marker\n                            icon= {CurrentLocation} \n                            key={\"currentPosition\"}\n                            center={this.state.center}\n                            position={this.state.center}\n\n                            eventHandlers={{\n                                click: (e) => { \n                                    e.preventDefault();\n                                }\n                            }}\n\n                            interactive={false}\n                        >\n                            \n                    {/* <Popup\n                        direction=\"auto\"\n                        offset={[2, 0]}\n                        opacity={1}>\n                        <span>você está aqui</span>\n                    </Popup> */}\n                        </Marker>\n\n                        {/* {(() => {\n                            switch(this.state.filtro) {\n                                case \"Todos\":\n                                    return ([\n                                        this.renderDoadoresAzul(),\n                                        this.renderDoadoresVerde(),\n                                        this.renderNecessitados(),\n                                        this.renderDoadoresVermelho()]\n                                    )\n                                    break;\n                                case \"Necessitados\":\n                                    return ([\n                                        this.renderNecessitados()]\n                                    )\n                                    break;\n                                case \"Doadores\":\n                                    return ([\n                                        this.renderDoadoresAzul(),\n                                        this.renderDoadoresVerde(),\n                                        this.renderDoadoresVermelho()]\n                                    )\n                                    break;\n                                case \"Refeição Pronta\":\n                                    return ([\n                                        this.renderDoadoresVerde(),\n                                        this.renderDoadoresVermelho()]\n                                    )\n                                    break;\n                            }\n                        })()} */}\n                        {this.renderSwitch(this.state.filtro)}\n                        {this.renderTestes()}\n\n                    \n                </MapContainer>\n            </div>\n        );\n    }\n\n    \n    setupVariables(mapCoords,DateISO,Telefone){\n        let googleDirection = `https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`;\n                            \n        let dateMarked = timeAgo.format(Date.now() - (Date.now() - new Date(DateISO).getTime()) );\n         //if(DateISO) dateMarked\n        if(Telefone){\n            switch(Telefone.length){\n                case 8:\n                    Telefone=\"contato:\"+Telefone.replace(/(\\d{4})(\\d{4})/g, \"$1-$2\");\n                    break;\n                case 9:\n                    Telefone=\"contato:\"+Telefone.replace(/(\\d{5})(\\d{4})/g, \"$1-$2\");\n                    break;\n                default:\n                    Telefone=\"contato:\"+Telefone.replace(/(\\d{2})(\\d{5})(\\d{4})/g, \"($1) $2-$3\");\n                    break;\n            }\n        }\n        return {googleDirection, dateMarked, Telefone};\n    }\n\n    configPopup(googleDirection, precisandoMsg, dateMarked, contato, \n        AlimentoEntregue, mapCoords, Roaster){\n        return <Popup>\n            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n            <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n            <br/>\n            {precisandoMsg}\n            <br/>\n            {dateMarked} {contato} \n            <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n            <br/>\n            <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n            <span>    </span>\n            <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                    \n        </Popup>\n    }\n\n    renderDoadoresAzul(){\n        return <MarkerClusterGroup\n                    // grupo de onde pode ajudar\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                        iconCreateFunction={markerclusterOptionsAnjos}\n                    >                        \n                        {this.props.dataMapsProp.filter(x => { return x.Coordinates; }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Horario, AlimentoEntregue} = dataItem;\n                            \n                            let {googleDirection, dateMarked, Telefone: contato} = this.setupVariables(mapCoords,DateISO,Telefone);\n                            \n                            if(envVariables.telefoneFilter && contato===\"\") return (<div></div>);\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            switch(Roaster){\n                                case \"Doador\":\n                                    precisandoMsg = \"Recebendo alimento para distribuir\"+URL;\n                                    CurrentIcon = hubIcon;\n                                    break;                               \n                                \n                                default:\n                                    return (<div></div>);\n                                    break;\n                            }\n                            \n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`); \n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                   {this.configPopup(googleDirection,precisandoMsg,dateMarked,contato,AlimentoEntregue,mapCoords,Roaster)}\n                                    \n                                    {/* <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n                                        <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {contato} \n                                        <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n                                        <br/>\n                                        <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                        <span>    </span>\n                                        <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                \n                                    </Popup> */}\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n    }\n\n    renderDoadoresVerde(){\n        return <MarkerClusterGroup\n                    // grupo de onde pode ajudar\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                        iconCreateFunction={markerclusterOptionsAnjos}\n                    >                        \n                        {this.props.dataMapsProp.filter(x => { return x.Coordinates; }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Horario, AlimentoEntregue} = dataItem;\n                            \n                            let {googleDirection, dateMarked, Telefone: contato} = this.setupVariables(mapCoords,DateISO,Telefone);\n                            \n                            if(envVariables.telefoneFilter && contato===\"\") return (<div></div>);\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            switch(Roaster){\n                                case \"PrecisandoBuscar\":\n                                    precisandoMsg = `Precisando de pessoas para buscar `+DiaSemana + \" pela \"+Horario;\n                                    CurrentIcon = greenIcon;\n                                    break;                                \n                                \n                                default:\n                                    return (<div></div>);\n                                    break;\n                            }\n                            \n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`); \n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                   {this.configPopup(googleDirection,precisandoMsg,dateMarked,contato,AlimentoEntregue,mapCoords,Roaster)}\n                                    \n                                    {/* <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n                                        <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {contato} \n                                        <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n                                        <br/>\n                                        <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                        <span>    </span>\n                                        <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                \n                                    </Popup> */}\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n    }\n\n    renderDoadoresVermelho(){\n        return <MarkerClusterGroup\n        // grupo de entrega de alimentos prontos\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n            iconCreateFunction={markerclusterOptionsEntrega}\n        >                        \n            {this.props.dataMapsProp.filter(x => { return x.Coordinates; }).map((dataItem, k) => {\n                let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Horario, AlimentoEntregue } = dataItem;\n                \n                let {googleDirection, dateMarked, Telefone: contato} = this.setupVariables(mapCoords,DateISO,Telefone);\n                \n                if(envVariables.telefoneFilter && contato===\"\") return (<div></div>);\n                //filtrar datas antigas\n                // if(\n                //     dateMarked.includes(\"semana\") \n                // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                // ) return (<div></div>);\n                \n                let precisandoMsg, CurrentIcon;\n                switch(Roaster){\n                    case \"EntregaAlimentoPronto\":\n                        precisandoMsg = `Entregando refeições prontas `+DiaSemana+\" pela \"+Horario;\n                        CurrentIcon = redIcon;\n                        break;\n                    \n                    default:\n                        return (<div></div>);\n                        break;\n                }\n                \n                return (\n                    <Marker\n                        eventHandlers={{\n                            click: (e) => { \n                                // alert(`Precisando de ${Roaster}`); \n                                console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                            }\n                        }}\n                        icon= {CurrentIcon} \n                        key={k}\n                        center={[mapCoords[0], mapCoords[1]]}\n                        position={[mapCoords[0], mapCoords[1]]}\n                    >\n                        {this.configPopup(googleDirection,precisandoMsg,dateMarked,contato,AlimentoEntregue,mapCoords,Roaster)}\n                                    \n                        {/* <Popup>\n                            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                            <br/>\n                            {precisandoMsg}\n                            <br/>\n                            {dateMarked} {contato} \n                            <br/>{\" (Qtde entregue:\"+AlimentoEntregue+\")\"}\n                            <br/>\n                            <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                            <span>    </span>\n                            <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                        </Popup> */}\n                        {/* <Tooltip\n                            // direction=\"auto\"\n                            // offset={[15, 0]}\n                            // opacity={1}>\n                            // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                            // <span>{City}, BR</span>\n                        </Tooltip> */}\n                    </Marker>);\n            })}\n        </MarkerClusterGroup>\n    }\n\n    renderNecessitados(){\n        return <MarkerClusterGroup\n        // grupo dos que precisam\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n            iconCreateFunction={markerclusterOptionsPrecisando}\n        >                        \n            {this.props.dataMapsProp.filter(x => { return x.Coordinates; }).map((dataItem, k) => {\n                let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, AlimentoEntregue} = dataItem;\n                let {googleDirection, dateMarked, Telefone: contato} = this.setupVariables(mapCoords,DateISO,Telefone);\n        \n                if(envVariables.telefoneFilter && contato===\"\") return (<div></div>);\n                //filtrar datas antigas\n                // if(\n                //     dateMarked.includes(\"semana\") \n                // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                // ) return (<div></div>);\n                \n                let precisandoMsg, CurrentIcon;\n                switch(Roaster){                                \n                    case \"Alimento de cesta básica\":\n                    case \"Alimento pronto\":\n                        precisandoMsg = `Precisando de ${Roaster}`+URL;\n                        CurrentIcon = myIcon;\n                        break;\n                    \n                    default:\n                        return (<div></div>);\n                        break;\n                }\n                \n                return (\n                    <Marker\n                        eventHandlers={{\n                            click: (e) => { \n                                // alert(`Precisando de ${Roaster}`); \n                                console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                            }\n                        }}\n                        icon= {CurrentIcon} \n                        key={k}\n                        center={[mapCoords[0], mapCoords[1]]}\n                        position={[mapCoords[0], mapCoords[1]]}\n                    >\n                        {this.configPopup(googleDirection,precisandoMsg,dateMarked,contato,AlimentoEntregue,mapCoords,Roaster)}\n                                    \n                        {/* <Popup>\n                            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                            <br/>\n                            {precisandoMsg}\n                            <br/>\n                            {dateMarked} {contato} \n                            <br/>{\" (Qtde entregue:\"+AlimentoEntregue+\")\"}\n                            <br/>\n                            <div className='buttonsSidebySide'>\n                                <button className='buttonsSidebySide' onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                <span>    </span>\n                                <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                            </div>\n                        </Popup> */}\n                        {/* <Tooltip\n                            // direction=\"auto\"\n                            // offset={[15, 0]}\n                            // opacity={1}>\n                            // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                            // <span>{City}, BR</span>\n                        </Tooltip> */}\n                    </Marker>);\n            })}\n        </MarkerClusterGroup>\n    }\n\n    renderTestes(){\n        return <MarkerClusterGroup\n        // grupo dos que precisam\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n            iconCreateFunction={markerclusterOptionsPrecisando}\n        >                        \n            {this.props.dataMapsProp.filter(x => { return x.Coordinates; }).map((dataItem, k) => {\n                let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, AlimentoEntregue} = dataItem;\n                let {googleDirection, dateMarked, Telefone: contato} = this.setupVariables(mapCoords,DateISO,Telefone);\n        //filtrar datas antigas\n\n                var msec = Date.now() - (new Date(DateISO)).getTime();\n                var mins = Math.floor(msec / 60000);\n                var hrs = Math.floor(mins / 60);\n                if(\n                    hrs > 3\n                ) return (<div></div>);\n                \n                \n                let precisandoMsg, CurrentIcon;\n                switch(Roaster){                                \n                    case \"Teste\":\n                        CurrentIcon = TestIcon;\n                        break;\n                    \n                    default:\n                        return (<div></div>);\n                        break;\n                }\n                \n                return (\n                    <Marker\n                        eventHandlers={{\n                            click: (e) => { \n                                // alert(`Precisando de ${Roaster}`); \n                                console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                            }\n                        }}\n                        icon= {CurrentIcon} \n                        key={k}\n                        center={[mapCoords[0], mapCoords[1]]}\n                        position={[mapCoords[0], mapCoords[1]]}\n                    >\n                        {/* {this.configPopup(googleDirection,precisandoMsg,dateMarked,contato,AlimentoEntregue,mapCoords,Roaster)} */}\n                                    \n                        {/* <Popup>\n                            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                            <br/>\n                            {precisandoMsg}\n                            <br/>\n                            {dateMarked} {contato} \n                            <br/>{\" (Qtde entregue:\"+AlimentoEntregue+\")\"}\n                            <br/>\n                            <div className='buttonsSidebySide'>\n                                <button className='buttonsSidebySide' onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                <span>    </span>\n                                <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                            </div>\n                        </Popup> */}\n                        {/* <Tooltip\n                            // direction=\"auto\"\n                            // offset={[15, 0]}\n                            // opacity={1}>\n                            // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                            // <span>{City}, BR</span>\n                        </Tooltip> */}\n                    </Marker>);\n            })}\n        </MarkerClusterGroup>\n    }\n\n    renderSwitch(param){\n        switch(this.state.filtro) {\n            case \"Todos\":\n                return ([\n                    this.renderDoadoresAzul(),\n                    this.renderDoadoresVerde(),\n                    this.renderNecessitados(),\n                    this.renderDoadoresVermelho()]\n                )\n                break;\n            case \"Necessitados\":\n                return ([\n                    this.renderNecessitados()]\n                )\n                break;\n            case \"Doadores\":\n                return ([\n                    this.renderDoadoresAzul(),\n                    this.renderDoadoresVerde(),\n                    this.renderDoadoresVermelho()]\n                )\n                break;\n            case \"Refeição Pronta\":\n                return ([\n                    this.renderDoadoresVerde(),\n                    this.renderDoadoresVermelho()]\n                )\n                break;\n        }\n    }\n\n}\n\nexport default CoffeeMap;","export default __webpack_public_path__ + \"static/media/currentLocation.bd009424.svg\";","import React, { memo } from 'react'\nimport twemoji from 'twemoji'\n\n// Using the official https://github.com/twitter/twemoji from Twitter\n// With an excellent example from https://gist.github.com/chibicode/fe195d792270910226c928b69a468206\n\nconst Twemoji = ({ emoji }) => (\n    <span\n        dangerouslySetInnerHTML={{\n            __html: twemoji.parse(emoji, {\n                folder: 'svg',\n                ext: '.svg'\n            })\n        }}\n    />\n)\n\nexport default memo(Twemoji)","import React, { Component } from 'react';\nimport Twemoji from './twemoji';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import github_mark from '../images/github_mark.png';\nimport TableCount from './tableCount';\n\nclass Header extends Component {\n\n    render() {\n\n        const { rowCountProp } = this.props;\n\n        return (\n            <div id=\"header\">\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" id=\"logo\">\n                            <Twemoji emoji=\"☕\" /> MAPA da FOME <span className=\"beta\">(beta) site:</span> www.mapafome.com.br \n                        </Typography>\n                        {/* <TableCount rowCountProp={rowCountProp} /> */}\n                        {/* <a href=\"https://docs.google.com/spreadsheets/d/1u7jiqY1qM0jYWugn1dFiW3plQrvWysJqm8xXhO35zuU/edit?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Button\n                                variant=\"contained\"\n                                size=\"small\">\n                                Add<span id=\"RoasterButtonMobile\">&nbsp;Roaster</span>\n                            </Button>\n                        </a>\n                        <a href=\"https://github.com/hdehal/coffee-maps\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <IconButton\n                                className=\"GitHub\"\n                                variant=\"outlined\"\n                                size=\"small\">\n                                <img className=\"GitHub\" src={github_mark} alt=\"Hosted on GitHub\" />\n                            </IconButton>\n                        </a> */}\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass TableCount extends Component {\n    render() {\n        return (\n            <Typography className=\"TableCount\">\n                TOTAL: {this.props.rowCountProp}\n            </Typography>\n        );\n    }\n}\n\nexport default TableCount;","import React, { Component } from 'react';\r\n\r\nimport { \r\n  OpenStreetMapProvider,\r\n  // BingProvider \r\n} from 'leaflet-geosearch';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\nconst provider = new OpenStreetMapProvider();\r\n\r\n// = new BingProvider({\r\n//   params: {\r\n//     key: process.env.REACT_APP_BING_MAPS_API_KEY\r\n//   },\r\n// });\r\n//\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass NameForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '', \r\n        alimento: props.alimento, \r\n        isLoading:false,\r\n        telefone:props.telefone,\r\n        diaSemana:props.diaSemana,\r\n        horario:props.horario,\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    //ATUALIZAR PROPS VINDAS DO PAI\r\n    static getDerivedStateFromProps(nextProps, state) {\r\n      if(state){\r\n        if (nextProps.alimento !== state.alimento){ \r\n          state.alimento=nextProps.alimento;\r\n        }\r\n        if (nextProps.telefone !== state.telefone){ \r\n          state.telefone=nextProps.telefone;\r\n        }\r\n        if (nextProps.diaSemana !== state.diaSemana){ \r\n          state.diaSemana=nextProps.diaSemana;\r\n        }\r\n        if (nextProps.horario !== state.horario){ \r\n          state.horario=nextProps.horario;\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n  \r\n    handleChange(event) {\r\n      if(event.target.value.length > 100) return; \r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      //alert('Um endereço foi enviado: ' + this.state.value);\r\n      if(this.state.value === '') {event.preventDefault();return;}\r\n      \r\n      this.setState({isLoading: true});\r\n\r\n      (async function main(self) {\r\n        await doc.useServiceAccountAuth({\r\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n        });\r\n\r\n        await doc.loadInfo(); // Loads document properties and worksheets\r\n\r\n        const sheet = doc.sheetsByIndex[0];\r\n        //row = { Name: \"new name\", Value: \"new value\" };\r\n        \r\n        // Total row count\r\n        let numero = self.state.value.replace(/[^0-9]/g,'');\r\n        if(numero !== ''){\r\n          numero = \", nº\"+numero;\r\n        }else{\r\n          alert(\"faltou colocar o número\");\r\n          \r\n          event.preventDefault();\r\n          self.setState({isLoading: false});\r\n          return;\r\n        }\r\n        // const row = { \r\n        //   Roaster:  self.state.alimento, \r\n        //   URL:numero, City: self.state.value,\r\n        //   DateISO: new Date().toISOString(), \r\n        //   Telefone: self.state.telefone, \r\n        //   DiaSemana: self.state.diaSemana, \r\n        //   Horario: self.state.horario,\r\n        //   AlimentoEntregue:0,\r\n        // };\r\n\r\n        let dadosJSON = { \r\n          \"Roaster\":  self.state.alimento, \r\n          \"URL\":numero, \r\n          \"City\": self.state.value,\r\n          \"DateISO\": new Date().toISOString(), \r\n          \"Telefone\": self.state.telefone, \r\n          \"DiaSemana\": self.state.diaSemana, \r\n          \"Horario\": self.state.horario,\r\n          \"AlimentoEntregue\":0,\r\n        };\r\n        const row = {\r\n          Dados: JSON.stringify(\r\n            dadosJSON\r\n          )\r\n        };\r\n\r\n        \r\n        try{\r\n          let providerResult = await provider.search({ query: self.state.value.replace('-',\",\") + ', Brazil' });\r\n  \r\n          if(providerResult.length !== 0 ){\r\n              // throw new Error(\"endereco-nao-encontrado\");\r\n  \r\n              console.log(providerResult);\r\n              let latlon = [providerResult[0].y, providerResult[0].x];\r\n              dadosJSON.Coordinates = JSON.stringify(latlon);\r\n              row.Dados = JSON.stringify(dadosJSON); // Convert obj to string\r\n              //needsUpdates[index].mapCoords = latlon;\r\n          }else{\r\n             throw new Error(\"endereco-nao-encontrado\");\r\n          }\r\n        }catch(e){\r\n            console.log(\"ERRO\");\r\n            console.log(e);\r\n            alert(\"Houve um problema ao cadastrar endereço, porfavor clique no mapa e depois confirme o no botão marcar Local tocado.\\nou use o botão marcar Localização Atual\");\r\n        }\r\n        await sheet.addRow(row);\r\n       \r\n        self.setState({isLoading: false});\r\n        window.location.reload();\r\n      })(this);\r\n      event.preventDefault();\r\n    }\r\n\r\n    \r\n  \r\n    render() {\r\n      return (\r\n        this.state.isLoading ?\r\n        <div><CircularProgress /></div>\r\n        :\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <input className=\"TextField\" type=\"text\" placeholder='Insira rua,nº,bairro,cidade,estado' value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input className=\"SubmitButton\" type=\"submit\" value=\"Enviar Endereço\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\nexport default NameForm; ","import React, { Component } from 'react';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport envVariables from '../variaveisAmbiente';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass NameForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '', \r\n        location: props.location, \r\n        alimento: props.alimento, \r\n        isLoading:false,\r\n        telefone:props.telefone,\r\n        diaSemana:props.diaSemana,\r\n        numero:props.numero,\r\n      };\r\n  \r\n      // this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n\r\n    }\r\n\r\n  componentDidMount() {\r\n      \r\n    //salvar acesso  \r\n      \r\n    (async function main(self) {\r\n      try{\r\n        await doc.useServiceAccountAuth({\r\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n        });\r\n    \r\n        await doc.loadInfo(); // Loads document properties and worksheets\r\n    \r\n        const sheet = doc.sheetsByIndex[1];\r\n        \r\n        await sheet.loadCells('A2');\r\n        const a1 = sheet.getCell(1, 0);\r\n        a1.value+=1;\r\n        await sheet.saveUpdatedCells();\r\n      }catch(e){\r\n        \r\n      }\r\n      \r\n    })(this);\r\n\r\n  }\r\n\r\n    //ATUALIZAR PROPS VINDAS DO PAI\r\n    static getDerivedStateFromProps(nextProps, state) {\r\n      if(state){\r\n\r\n        if (nextProps.alimento !== state.alimento){ \r\n          state.alimento=nextProps.alimento;\r\n        }\r\n        if (nextProps.telefone !== state.telefone){ \r\n          state.telefone=nextProps.telefone;\r\n        }\r\n        if (nextProps.diaSemana !== state.diaSemana){ \r\n          state.diaSemana=nextProps.diaSemana;\r\n        }\r\n        if (nextProps.horario !== state.horario){ \r\n          state.horario=nextProps.horario;\r\n        }\r\n        if (nextProps.numero !== state.numero){ \r\n          state.numero=nextProps.numero;\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n  \r\n    // handleChange(event) {\r\n    //   this.setState({value: event.target.value});\r\n    // }\r\n  \r\n    handleSubmit(event) { \r\n        //navigator.geolocation.getCurrentPosition(function(position) {\r\n        if(this.state.location[0]===-8.0671132 && this.state.location[1]===-34.8766719){\r\n          alert(\"Localização do celular está desativada, ative, recarregue a página e tente novamente com a localização ativa, se mesmo assim não conseguir insira o endereço completo e clique enviar endereço\");\r\n          event.preventDefault();\r\n          return;\r\n        }\r\n        this.setState({isLoading: true});\r\n            (async function main(self) {\r\n                await doc.useServiceAccountAuth({\r\n                    client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n                    private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n                });\r\n        \r\n                await doc.loadInfo(); // Loads document properties and worksheets\r\n                \r\n                let regiao;\r\n                if(envVariables.dentroLimites(self.state.location)){\r\n                  regiao=0;\r\n                }\r\n                else{\r\n                  alert(\"Região não suportada\");\r\n                  return;\r\n                }\r\n                const sheet = doc.sheetsByIndex[regiao];\r\n                // const rows = await sheet.getRows();\r\n                // Total row count\r\n\r\n                if(self.state.numero !== ''){\r\n                  self.state.numero = \", nº\"+self.state.numero;\r\n                }\r\n                \r\n                // const row = { \r\n                //   Roaster: self.state.alimento, \r\n                //   URL:self.state.numero, \r\n                //   City: \"\", \r\n                //   Coordinates:JSON.stringify([self.props.location[0], self.props.location[1]]), \r\n                //   DateISO: new Date().toISOString(), \r\n                //   Telefone: self.props.telefone, \r\n                //   DiaSemana:self.props.diaSemana,\r\n                //   Horario:self.props.horario,\r\n                //   AlimentoEntregue:0,\r\n                // };\r\n\r\n                \r\n            const row = {\r\n              Dados: JSON.stringify(\r\n                { \r\n                  \"Roaster\": self.state.alimento, \r\n                  \"URL\":self.state.numero, \r\n                  \"City\": \"\", \r\n                  \"Coordinates\":JSON.stringify([self.props.location[0], self.props.location[1]]), \r\n                  \"DateISO\": new Date().toISOString(), \r\n                  \"Telefone\": self.props.telefone, \r\n                  \"DiaSemana\":self.props.diaSemana,\r\n                  \"Horario\":self.props.horario,\r\n                  \"AlimentoEntregue\":0\r\n                }\r\n\r\n              )\r\n            };\r\n                \r\n                const result = await sheet.addRow(row);\r\n                console.log(result);\r\n                window.location.reload();\r\n            })(this);\r\n        //});\r\n      event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n          this.state.isLoading ?\r\n          <div><CircularProgress /></div>\r\n          : \r\n            <button className=\"SubmitButton buttonsSidebySide\" onClick={this.handleSubmit}>\r\n              marcar Localização Atual\r\n            </button>\r\n        \r\n      );\r\n    }\r\n  }\r\nexport default NameForm; ","import React, { Component } from 'react';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass Sugestoes extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '',\r\n        isLoading:false\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n  \r\n    handleChange(event) {\r\n      if(event.target.value.length > 1000) return;\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      //alert('Um endereço foi enviado: ' + this.state.value);\r\n      if(this.state.value === '') {event.preventDefault();return;}\r\n      \r\n      this.setState({isLoading: true});\r\n      \r\n      (async function main(self) {\r\n        try{\r\n          await doc.useServiceAccountAuth({\r\n              client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n              private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n          });\r\n\r\n          await doc.loadInfo(); // Loads document properties and worksheets\r\n\r\n          const sheet = doc.sheetsByIndex[2];\r\n          //row = { Name: \"new name\", Value: \"new value\" };\r\n          \r\n          const row = { Sugestao: self.state.value, DateISO: new Date().toISOString()};\r\n          \r\n          await sheet.addRow(row);\r\n        \r\n          self.setState({isLoading: false});\r\n          alert(\"sugestão enviada com sucesso\");\r\n        }catch(e){\r\n          alert(\"Erro, tente novamente\");\r\n        }\r\n        \r\n      })(this);\r\n      event.preventDefault();\r\n    }\r\n\r\n    \r\n  \r\n    render() {\r\n      return (\r\n        this.state.isLoading ?\r\n        <div><CircularProgress /></div>\r\n        :\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <textarea className=\"TextField\" type=\"text\" placeholder='Insira sua sugestão, depoimento e contato em caso de dúvida' value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input className=\"SubmitButton\" type=\"submit\" value=\"Enviar sugestão\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\nexport default Sugestoes; ","export default __webpack_public_path__ + \"static/media/qr.20154bbf.svg\";","\r\nimport React, { Component } from 'react';\r\n\r\nimport TimeAgo from 'javascript-time-ago';\r\n\r\nimport pt from 'javascript-time-ago/locale/pt.json';\r\nTimeAgo.addDefaultLocale(pt);\r\n\r\nconst timeAgo = new TimeAgo();\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass CleanOld extends Component {\r\n\r\n    componentDidMount() {\r\n        \r\n        (async function main() {\r\n            // Use service account creds\r\n            await doc.useServiceAccountAuth({\r\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n            });\r\n    \r\n            await doc.loadInfo(); // Loads document properties and worksheets\r\n    \r\n            const sheet = doc.sheetsByIndex[0];\r\n            const rows = await sheet.getRows();\r\n            rows.forEach((x) => { \r\n                let dateMarked;\r\n                if(x.DateISO) dateMarked = timeAgo.format(Date.now() - (Date.now() - new Date(x.DateISO).getTime()) );\r\n                \r\n                //filtrar datas antigas\r\n                if(\r\n                    dateMarked.includes(\"semana\") \r\n                    || dateMarked.includes(\"mes\") \r\n                //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\r\n                ) { x.delete(); } });\r\n\r\n        })();\r\n    }\r\n    render(){\r\n        return <div></div>;\r\n    }\r\n}\r\n\r\nexport default CleanOld;","import React, { Component } from 'react';\nimport './App.css';\nimport { OpenStreetMapProvider } from 'leaflet-geosearch';\nimport Header from './components/header';\n\nimport InserirEndereco from './components/googlesheets/endereco';\nimport MyLocationButton from './components/googlesheets/mylocation';\nimport Sugestao from './components/googlesheets/sugestao';\n\nimport CoffeeMap from './components/map.js';\n// import CoffeeTable from './components/table';\nimport ReactGA from 'react-ga';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Checkbox } from '@material-ui/core';\n\n\nimport envVariables from './components/variaveisAmbiente';\n\nimport qr from './images/qr.svg';\n\n// Material-UI\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport CleanOld from './components/googlesheets/cleanold';\n\n\nimport coffeeBean from './images/bean.svg';\nimport hub from './images/hub.svg';\nimport green from './images/green.svg';\nimport red from './images/red.svg';\n\nimport AesEncryption from \"aes-encryption\";\n\nconst aes = new AesEncryption();\n\n// Google Analytics\nfunction initializeReactGA() {\n  ReactGA.initialize('UA-172868315-1');\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\ninitializeReactGA();\n\naes.setSecretKey(process.env.REACT_APP_CRYPTSEED+\"F\");\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\n\n// Google Sheets Document ID -- PROD\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\n\n// Google Sheets Document ID -- DEV\n// const doc = new GoogleSpreadsheet('1jQI6PstbEArW_3xDnGgPJR6_37r_KjLoa765bOgMBhk');\n\n// Provider for leaflet-geosearch plugin\nconst provider = new OpenStreetMapProvider();\n//limit osm https://operations.osmfoundation.org/policies/nominatim/\n\n\n\n\nclass App extends Component {\n\n  // Initial state\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      dataMaps: [],\n      dataHeader: [{ label: \"Índice\" }, { label: \"Lugar\" }],\n      rowCount: '',\n      center:[-8.0671132,-34.8766719],\n      alimento:'Alimento pronto',\n      telefone:'',\n      telefoneEncryptado:'',\n      diaSemana:'',\n      horario:'',\n      filtro:\"Todos\",\n      lastMarkedCoords:[],\n      numero:'',\n      telefoneFilterLocal:false\n\n    }\n\n    this.dropDownMenuSemana = React.createRef();\n    this.dropDownMenuHorario = React.createRef();\n    this.dropDownMenuFiltro = React.createRef();\n  \n    \n    this.handleChangeNumero = this.handleChangeNumero.bind(this);\n\n    this.setTipoAlimento = this.setTipoAlimento.bind(this);\n    this.handleChangeTelefone = this.handleChangeTelefone.bind(this);\n    this.setDiaSemana = this.setDiaSemana.bind(this);\n    this.setHorario = this.setHorario.bind(this);\n    this.setFiltro = this.setFiltro.bind(this);\n    this.removerPonto = this.removerPonto.bind(this);\n    this.handleClickMap = this.handleClickMap.bind(this);\n    this.telefoneFilterChange = this.telefoneFilterChange.bind(this);\n  }\n\n  telefoneFilterChange(event){\n    envVariables.telefoneFilter = !envVariables.telefoneFilter;\n    this.setState({\n      telefoneFilterLocal: envVariables.telefoneFilter\n    });\n  }\n\n  removerPonto(coords, categoriaPonto){\n    console.log(\"remover \"+coords);\n    let motivo = prompt(\"por qual motivo (em resumo) gostaria de deletar esse ponto?\");\n    if(motivo !== null){\n      (async function main(self) {\n        try{\n          await doc.useServiceAccountAuth({\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n            });\n\n            await doc.loadInfo(); // Loads document properties and worksheets\n\n            const sheet = doc.sheetsByIndex[4];\n            //row = { Name: \"new name\", Value: \"new value\" };\n            \n            const row = { Motivo: motivo, Ponto: JSON.stringify(coords), DateISO: new Date().toISOString(), CategoriaPonto:categoriaPonto};\n            \n            await sheet.addRow(row);\n          \n            alert(\"pedido de deletar enviado com sucesso\");\n        }catch(e){\n          alert(\"ERRO, tente novamente\");\n          //console.log(e);\n\n        }\n        \n      })(motivo, coords);\n    }\n  }\n\n  entregarAlimento(coords){\n    (async function main(self) {\n      try{\n        await doc.useServiceAccountAuth({\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n\n          await doc.loadInfo(); // Loads document properties and worksheets\n\n          const sheet = doc.sheetsByIndex[0];\n          //row = { Name: \"new name\", Value: \"new value\" };\n          \n          const rows = await sheet.getRows();\n          let rowEncontrada = rows.filter((x) => { \n            //x.Coordinates\n            //console.log(JSON.parse(x.Dados).Coordinates);\n            return JSON.parse(x.Dados).Coordinates === JSON.stringify(coords); });\n          \n          //console.log(rowEncontrada[0].City);\n          let dadosNovos = JSON.parse(rowEncontrada[0].Dados);\n          dadosNovos.AlimentoEntregue++;\n          rowEncontrada[0].Dados = JSON.stringify(dadosNovos);\n          await rowEncontrada[0].save();\n          \n          window.location.reload();\n      }catch(e){\n        //console.log(e);\n\n      }\n      \n    })(coords);\n  }\n\n  setFiltro(event){\n    this.setState({\n      filtro: event.target.value\n    });\n  }\n  setTipoAlimento(event){\n    this.setState({\n      alimento: event.target.value\n    });\n\n    if(event.target.value === 'PrecisandoBuscar' || event.target.value === 'EntregaAlimentoPronto'){\n      this.setState({\n        diaSemana: this.dropDownMenuSemana.current.value,\n        horario: this.dropDownMenuHorario.current.value\n      });\n\n    }else{\n      this.setState({\n        diaSemana: '',\n        horario: ''\n      });\n\n    }\n\n  }\n\n  setDiaSemana(event){\n    this.setState({\n      diaSemana: event.target.selectedOptions[0].value\n    });\n    // console.log(this.dropDownMenuSemana.current.value);\n    // console.log(event.target.selectedOptions[0].value);\n    // console.log(this.state.diaSemana);\n  }\n\n  \n  setHorario(event){\n    this.setState({\n      horario: event.target.selectedOptions[0].value\n    });\n    // console.log(this.dropDownMenuSemana.current.value);\n    // console.log(event.target.selectedOptions[0].value);\n    // console.log(this.state.diaSemana);\n  }\n\n  handleChangeTelefone(event) {\n    if(event.target.value.length>15) return;\n    let telefoneValue = event.target.value.replace(/[^0-9]/g,'');\n    if(telefoneValue.length >= 8){\n      this.setState({telefoneEncryptado: aes.encrypt(telefoneValue)});\n    }\n    this.setState({telefone: telefoneValue});\n  }\n  \n    \n  handleChangeNumero(event) {\n    if(event.target.value.length > 10) return;\n    let numero = event.target.value.replace(/[^0-9]/g,'');\n    this.setState({numero: numero});\n  }\n\n  handleClickMap(){\n    // this.setState({lastMarkedCoords: coords});\n    if(envVariables.lastMarked === undefined) return;\n    this.setState({isLoading: true});\n    (async function main(self) {\n      await doc.useServiceAccountAuth({\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n      });\n\n      await doc.loadInfo(); // Loads document properties and worksheets\n      let {lat, lng} = envVariables.lastMarked.getLatLng();\n      envVariables.lastMarked.latlng = [lat,lng];\n      let regiao;\n      if(envVariables.dentroLimites(envVariables.lastMarked.latlng)){\n        regiao=0;\n      }\n      else{\n        alert(\"Região não suportada\");\n        return;\n      }\n      const sheet = doc.sheetsByIndex[regiao];\n      // const rows = await sheet.getRows();\n      // Total row count\n\n      // if(this.state.numero !== ''){\n      //   this.state.numero = \", nº\"+this.state.numero;\n      // }\n      \n      // const row = { \n      //   Roaster: self.state.alimento, \n      //   URL:self.state.numero, \n      //   City: \"\", \n      //   Coordinates:JSON.stringify([self.props.location[0], self.props.location[1]]), \n      //   DateISO: new Date().toISOString(), \n      //   Telefone: self.props.telefone, \n      //   DiaSemana:self.props.diaSemana,\n      //   Horario:self.props.horario,\n      //   AlimentoEntregue:0,\n      // };\n      let row;\n      if(self.state.numero !== ''){\n        self.state.numero = \", nº\"+self.state.numero;\n      }\n      let dadosJSON = {\n        \"Roaster\": self.state.alimento, \n        \"Coordinates\":JSON.stringify(envVariables.lastMarked.latlng), \n        \"DateISO\": new Date().toISOString(), \n        \"Telefone\": self.state.telefoneEncryptado, \n        \"AlimentoEntregue\":0,\n        \"URL\":self.state.numero\n      };\n\n      if(self.state.alimento==='EntregaAlimentoPronto' || self.state.alimento==='PrecisandoBuscar')\n      {\n        dadosJSON.DiaSemana=self.state.diaSemana;\n        dadosJSON.Horario=self.state.horario;\n        \n      }\n      row = { Dados: JSON.stringify(dadosJSON) };\n      \n      const result = await sheet.addRow(row);\n      // console.log(result);\n      window.location.reload();\n  })(this);\n  }\n\n  componentDidMount() {\n\n    // Google Sheets API\n    // Based on https://github.com/theoephraim/node-google-spreadsheet\n\n    var self = this;\n\n    //current location    \n    navigator.geolocation.getCurrentPosition(function(position) {\n      self.setState({center: [position.coords.latitude, position.coords.longitude]}) \n    });\n\n    (async function main(self) {\n      // Use service account creds\n      await doc.useServiceAccountAuth({\n        client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n        private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n      });\n\n      await doc.loadInfo(); // Loads document properties and worksheets\n      \n      /*https://www.keene.edu/campus/maps/tool/\n        long, lat\n        x, y\n        -52.2070313, 2.20\n        -52.4267578, -13.9234039\n        -34.3212891, -14.0939572\n        -34.3212891, 1.6696855\n0: -8.0256189\n1: -34.9175702\n        -55.4589844, -32.6578757\n        -55.5468750, -14.1791861\n        -38.1445313, -14.1791861\n        -38.0566406, -32.8426736\n      */\n     //limitar regiao\n      let regiao;\n      if(envVariables.dentroLimites(self.state.center)){\n        regiao=0;\n      }     \n      else{\n        alert(\"Região ainda não suportada\");\n        return;\n      }\n      const sheet = doc.sheetsByIndex[regiao];\n      const rows = await sheet.getRows();\n      // Total row count\n      self.setState({ rowCount: rows.length });\n      \n      // rows.filter( (x) => { return !x.Data}).map( (x) => {\n      //   x.Dados = JSON.stringify(\n      //     { \n      //       \"Roaster\": x.Roaster, \n      //       \"URL\": x.URL, \n      //       \"City\": x.City, \n      //       \"Coordinates\": x.Coordinates, \n      //       \"DateISO\": x.DateISO, \n      //       \"Telefone\": x.Telefone, \n      //       \"DiaSemana\": x.DiaSemana,\n      //       \"Horario\": x.Horario,\n      //       \"AlimentoEntregue\": x.AlimentoEntregue\n      //     }\n      //   );\n      //   (async function main(x){\n          \n      //   await x.save();\n      //   })(x);\n\n      // })\n      rows.forEach((x) => {\n        let dados = JSON.parse(x.Dados);\n        x.Roaster = dados.Roaster;\n        x.URL = dados.URL;\n        x.City = dados.City;\n        x.Coordinates = dados.Coordinates;\n        x.DateISO = dados.DateISO;\n        x.Telefone = dados.Telefone;\n        x.DiaSemana = dados.DiaSemana;\n        x.Horario = dados.Horario;\n        x.AlimentoEntregue = dados.AlimentoEntregue;\n        \n        if (dados.Coordinates) { x.mapCoords = JSON.parse(x.Coordinates); \n          if(dados.Telefone) {\n            try{\n              x.Telefone = aes.decrypt(x.Telefone);\n            }catch(e){\n              //problema ao decriptar, string nao esta no formato hex\n            }\n          } \n        }\n       \n      });\n      self.setState({ dataMaps: rows });\n\n      // var needsUpdates = rows.filter((x) => { x = JSON.parse(x); return !x.Coordinates; });\n      // if(needsUpdates.length === 0) console.log(\"nao precisa atualizar\");\n      // if (needsUpdates && needsUpdates.length > 0) {\n      //     for (let index in needsUpdates) {\n      //       // if(needsUpdates[index]._rawData.length===0) needsUpdates[index].delete(); //se deixar rows vazias na planilha\n      //         let city = needsUpdates[index].City;\n      //         setTimeout(() => \n      //             {\n      //                 (async function main() {\n      //                     try{\n      //                         let providerResult = await provider.search({ query: city.replace('-',\",\") + ', Brazil' });\n                      \n      //                         if(providerResult.length !== 0 ){\n      //                             // throw new Error(\"endereco-nao-encontrado\");\n                      \n      //                             console.log(providerResult);\n      //                             let latlon = [providerResult[0].y, providerResult[0].x];\n      //                             needsUpdates[index].Coordinates = JSON.stringify(latlon); // Convert obj to string\n      //                             //needsUpdates[index].mapCoords = latlon;\n      //                             await needsUpdates[index].save(); // Save to remote Google Sheet\n      //                         }\n      //                     }catch(e){\n      //                         console.log(\"ERRO\");\n      //                         console.log(e);\n      //                     }\n      //                 })();\n                  \n      //             },1300                        \n      //         );\n              \n      //     }\n      //   self.setState({ dataMaps: rows });\n      // }\n\n      // Loading message \n      self.setState({ isLoading: false })\n\n    })(self);\n\n    window.fixarPonto = function (endereco, coords){\n      (async function main(endereco, coords) {\n        try{\n          await doc.useServiceAccountAuth({\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n      \n          await doc.loadInfo(); // Loads document properties and worksheets\n      \n          const sheet = doc.sheetsByIndex[0];\n          \n          const rows = await sheet.getRows();\n\n          let rowEncontrada = rows.filter( (x) => \n          {\n            return JSON.parse(x.Dados).City.includes(endereco);\n          }\n          );\n\n          rowEncontrada.forEach( (x) => \n          {\n            let dadosNovos = JSON.parse(x.Dados);\n            dadosNovos.Coordinates = JSON.stringify(coords);\n            x.Dados = JSON.stringify(dadosNovos);\n          });\n\n          for(let x of rowEncontrada) await x.save();\n\n        }catch(e){\n          \n        }\n        \n      })(endereco, coords);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header rowCountProp={this.state.rowCount} />\n        {/* <InserirEndereco/>\n        <MyLocationButton location={this.state.center}/> */}\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={8}>\n            <Paper id=\"CoffeeMap\" className=\"fadeIn\">\n              {this.state.isLoading\n                ? <div className=\"flexLoading\"><div className=\"loading\">Carregando...</div></div>\n                : <CoffeeMap \n                dataMapsProp={this.state.dataMaps} \n                location={this.state.center} \n                tileMapOption={this.state.tileMapOption} \n                removerPonto={this.removerPonto} \n                entregarAlimento={this.entregarAlimento}\n                filtro={this.state.filtro}\n                />\n              }\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Paper id=\"CoffeeTable\"  className=\"toolPanel\">\n              {this.state.isLoading\n                ? <div className=\"flexLoading\"><div className=\"loading\"><CircularProgress /></div></div>\n                // : <CoffeeTable dataMapsProp={this.state.dataMaps} dataHeaderProp={this.state.dataHeader} />\n              : \n              \n    <div className='relativePosition'>\n                Mapeados: {this.state.rowCount} filtro: \n              <select ref= {this.dropDownMenuFiltro} id=\"filtro\" onChange={this.setFiltro}>\n                <option value=\"Todos\">Todos</option>\n                <option value=\"Doadores\">Doadores</option>\n                <option value=\"Necessitados\">Necessitados</option>\n                <option value=\"Refeição Pronta\">Refeição Pronta</option>\n              </select>\n              <Checkbox\n                checked={this.state.telefoneFilterLocal}\n                onChange={this.telefoneFilterChange}\n                inputProps={{ 'aria-label': 'controlled' }}\n              /> Telefone\n              <br></br>No mapa clique na bolinha para saber como ajudar.<br></br> Você pode se incluir ou incluir outra pessoa, <br></br>selecione a situação e confirme o local (mais informações no final da página ou <a target='_blank' rel=\"noreferrer\" href=\"https://g1.globo.com/pe/pernambuco/noticia/2022/02/10/site-criado-por-estudante-da-ufpe-aproxima-pessoas-que-estao-passando-fome-e-doadores-de-comida.ghtml\">na matéria da Globo</a>):\n        {/* RADIO BUTTON */}\n        <div className='relativePosition'>\n          <ul>\n            \n          <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Teste\"\n                  checked={this.state.alimento === \"Teste\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span> Opção para testar a ferramenta </span>\n              </label>\n            </li>\n          <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Alimento pronto\"\n                  checked={this.state.alimento === \"Alimento pronto\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='yellowHub'> Pessoa precisando de Alimento pronto <img width=\"30px\" height=\"30px\" src={coffeeBean}></img></span>\n              </label>\n            </li>\n\n            <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Alimento de cesta básica\"\n                  checked={this.state.alimento === \"Alimento de cesta básica\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='yellowHub'> Preciso de Alimento de cesta básica <img width=\"30px\" height=\"30px\" src={coffeeBean}></img></span>\n              </label>\n            </li>\n                        \n            <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Doador\"\n                  checked={this.state.alimento === \"Doador\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='blueHub'> Recebo para doar <img width=\"30px\" height=\"30px\" src={hub}></img></span>\n              </label>\n            </li>\n\n            <li>\n            <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"EntregaAlimentoPronto\"\n                  checked={this.state.alimento === \"EntregaAlimentoPronto\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='redHub'> Entrego refeições em ponto fixo <img width=\"30px\" height=\"30px\" src={red}></img></span>\n              \n                <br></br>\n                <select ref= {this.dropDownMenuSemana} id=\"dia\" onChange={this.setDiaSemana}>\n                <option value=\"toda Segunda\">toda Segunda</option>\n                <option value=\"toda Terça\">toda Terça</option>\n                <option value=\"toda Quarta\">toda Quarta</option>\n                <option value=\"toda Quinta\">toda Quinta</option>\n                <option value=\"toda Sexta\">toda Sexta</option>\n                <option value=\"todo Sábado\">todo Sábado</option>\n                <option value=\"todo Domingo\">todo Domingo</option>\n              </select>\n              <select ref= {this.dropDownMenuHorario} id=\"horario\" onChange={this.setHorario}>\n                <option value=\"manhã 05:30\">manhã 05:30</option>\n                <option value=\"manhã 06:30\">manhã 06:30</option>\n                <option value=\"tarde 13:30\">tarde 13:30</option>\n                <option value=\"tarde 16:30\">tarde 16:30</option>\n                <option value=\"noite 18:30\">noite 18:30</option>\n                <option value=\"noite 19:30\">noite 19:30</option>\n              </select>\n              </label>\n            </li>\n\n            <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"PrecisandoBuscar\"\n                  checked={this.state.alimento === \"PrecisandoBuscar\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='greenHub'> Tenho alimento perto de se perder  <img width=\"30px\" height=\"30px\" src={green}></img></span>\n              \n              <br></br>\n              <select ref= {this.dropDownMenuSemana} id=\"dia\" onChange={this.setDiaSemana}>\n                <option value=\"Hoje\">Hoje</option>\n                <option value=\"toda Segunda\">toda Segunda</option>\n                <option value=\"toda Terça\">toda Terça</option>\n                <option value=\"toda Quarta\">toda Quarta</option>\n                <option value=\"toda Quinta\">toda Quinta</option>\n                <option value=\"toda Sexta\">toda Sexta</option>\n                <option value=\"todo Sábado\">todo Sábado</option>\n                <option value=\"todo Domingo\">todo Domingo</option>\n              </select>\n              <select ref= {this.dropDownMenuHorario} id=\"horario\" onChange={this.setHorario}>\n                <option value=\"manhã 05:30\">manhã 05:30</option>\n                <option value=\"manhã 06:30\">manhã 06:30</option>\n                <option value=\"tarde 13:30\">tarde 13:30</option>\n                <option value=\"tarde 16:30\">tarde 16:30</option>\n                <option value=\"noite 18:30\">noite 18:30</option>\n                <option value=\"noite 19:30\">noite 19:30</option>\n              </select>\n              </label>\n              \n            </li>\n\n          \n          </ul>\n    </div>\n        {/* FIM RADIO BUTTON */}\n            <div className='relativePosition'>\n                \n                <input className=\"TextField tfMarginUp\" type=\"text\" placeholder='Insira telefone se quiser' value={this.state.telefone} onChange={this.handleChangeTelefone} />\n                <input className='nLocal' type=\"text\" placeholder='nº' value={this.state.numero} onChange={this.handleChangeNumero} />\n                <br></br>\n                <div className='buttonsSidebySide'>\n                  <MyLocationButton\n                  location={this.state.center} \n                  alimento={this.state.alimento} \n                  telefone={this.state.telefoneEncryptado}\n                  diaSemana={this.state.diaSemana}\n                  horario={this.state.horario}\n                  numero={this.state.numero}\n                  /> \n\n                  {this.state.isLoading?\n                  <CircularProgress/>\n                  :<button className=\"SubmitButton buttonsSidebySide\" onClick={this.handleClickMap}>marcar Local Tocado</button>}\n                </div>\n                \n                <InserirEndereco \n                alimento={this.state.alimento} \n                telefone={this.state.telefoneEncryptado}\n                diaSemana={this.state.diaSemana}\n                horario={this.state.horario}\n                /> \n\n\n                <a className=\"wpbtn\" title=\"share to whatsapp\" href=\"whatsapp://send?text=Para marcar no mapa e alimentar quem tem fome, achei esse site: https://rslgp.github.io/mapafome\"> <img className=\"wp\" src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/>\n                Compartilhar no Whatsapp</a>\n                <a target='_blank' rel=\"noreferrer\" href=\"https://t.me/share?url=https%3A%2F%2Frslgp.github.io%2Fmapafome&amp;text=Para%20marcar%20no%20mapa%20e%20alimentar%20quem%20tem%20fome%2C%20achei%20esse%20site%3A\" className=\"tgme_widget_share_btn\"><img className=\"telegram\" src=\"https://telegram.org/img/WidgetButton_LogoSmall.png\" alt=\"\"></img></a>\n\n                {/* <img src={qr} alt=\"\"/> */}\n                {/* <CleanOld></CleanOld> */}\n                <img className=\"ods\" alt=\"\" src=\"https://brasil.un.org/profiles/undg_country/themes/custom/undg/images/SDGs/pt-br/SDG-2.svg\"></img> No Mapa da Fome você pode encontrar a quem ajudar e fazer novas marcações, caso uma opção represente você ou outra pessoa, selecione, coloque número para contato se quiser, e confirme com localização atual ou endereço e número\n                <br></br><span className=\"yellowHub\">  em amarelo são pessoas <img width=\"30px\" height=\"30px\" src={coffeeBean}></img></span>em vulnerabilidade social e insegurança alimentar que estão com fome em casa ou na rua, --precisam de alimento\n                <br></br><span className=\"blueHub\">  em azul são pessoas <img width=\"30px\" height=\"30px\" src={hub}></img></span>que recebem alimentos ou recursos para distribuir alimento ou refeições na comunidade (exemplo: sopão solidário, ongs, voluntários) --precisam de doações\n                <br></br><span className=\"redHub\">  em vermelho são pessoas <img width=\"30px\" height=\"30px\" src={red}></img></span>que entregam refeição em ponto fixo na rua em certo dia na semana. --ponto de entrega de alimento pronto\n                <br></br><span className=\"greenHub\">  em verde são pessoas <img width=\"30px\" height=\"30px\" src={green}></img></span>que trabalham com alimentos e precisam destinar os alimentos não comercializados ou não consumidos e não tem pessoas para buscar esses alimentos --precisam de voluntários para buscar \n              \n                \n                <br></br><br></br>serve para \n\n<br></br>-mapear pessoas que estão com fome na rua ou em casa\n<br></br>-mapear iniciativas que recebem recursos para fazer doação\n<br></br>-mostrar no mapa onde e quando tem alimento sendo distribuído\n<br></br>-mostrar no mapa lugares comerciais ou residenciais que precisam de voluntários ou necessitados para buscar alimentos não consumidos ou não comercializados\n<br></br> é possível traçar uma rota ao destino ao clicar Ir para o destino, e ser redirecionado para o Google Maps\n<br></br>\ncontato: <a target='_blank' rel=\"noreferrer\" href=\"https://mail.google.com/mail/u/0/?fs=1&to=rslgp@cin.ufpe.br&tf=cm\" >rslgp@cin.ufpe.br</a> <a target='_blank' rel=\"noreferrer\"  href='https://wa.me/5583996157234'>(83) 9.9615-7234</a>           \n<Sugestao/>\n              </div>\n          </div>\n               \n              \n              }\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","export default __webpack_public_path__ + \"static/media/bean.8d52f968.svg\";","export default __webpack_public_path__ + \"static/media/hub.4f920e1b.svg\";","export default __webpack_public_path__ + \"static/media/green.00533c2a.svg\";","export default __webpack_public_path__ + \"static/media/red.651e6e29.svg\";"],"sourceRoot":""}