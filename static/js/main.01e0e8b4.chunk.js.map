{"version":3,"sources":["images/hub.svg","images/green.svg","images/red.svg","components/variaveisAmbiente.js","components/map.js","images/currentLocation.svg","images/currentLocationSmall.svg","components/twemoji.js","components/header.js","components/tableCount.js","components/googlesheets/endereco.js","components/googlesheets/mylocation.js","components/googlesheets/sugestao.js","images/qr.svg","components/googlesheets/cleanold.js","images/insta.svg","App.js","index.js","images/bean.svg"],"names":["envVariables","undefined","localizacao","mapArea","teto","chao","paredeEsquerda","paredeDireita","lat1","lon1","lat2","lon2","dLat","Math","PI","dLon","a","sin","cos","atan2","sqrt","dadosRow","numero","dadosJSON","alimento","Date","toISOString","URL","coords","Coordinates","JSON","stringify","telefone","Telefone","diaSemana","DiaSemana","Horario","horario","redesocial","replace","RedeSocial","mes","Mes","Dados","TimeAgo","addDefaultLocale","pt","timeAgo","global","lastMarked","lastMarkedCoords","myIcon","L","Icon","iconUrl","coffeeBean","iconSize","Point","className","hubIcon","hub","greenIcon","green","redIcon","red","CurrentLocation","CurrentLocationSVG","interactive","CurrentLocationSmall","CurrentLocationSmallSVG","TestIcon","markerclusterOptionsPrecisando","cluster","childCount","getChildCount","c","DivIcon","html","markerclusterOptionsAnjos","markerclusterOptionsEntrega","CoffeeMap","props","state","dataMaps","center","location","filtro","screensizeZoom","window","innerWidth","style","height","width","zoom","maxZoom","this","attributionControl","whenReady","map","target","on","e","latlng","lat","lng","remove","marker","icon","draggable","addTo","opacity","position","BaseLayer","checked","name","url","attribution","prefix","eventHandlers","click","preventDefault","renderSwitch","renderTestes","mapCoords","DateISO","Avaliacao","googleDirection","dateMarked","format","now","getTime","urlTelefone","legivelTelefone","length","href","rel","AvaliacaoData","nota","totalClicks","round","dadosPopup","precisandoMsg","contato","AlimentoEntregue","Roaster","src","viewBox","focusable","d","value","onChange","event","newValue","avaliar","verificado","onClick","verificarPonto","removerPonto","entregarAlimento","spiderfyDistanceMultiplier","showCoverageOnHover","maxClusterRadius","iconCreateFunction","dataMapsProp","filter","x","dataItem","k","City","CurrentIcon","setupVariables","telefoneFilter","console","log","configPopup","msec","mins","floor","param","renderDoadoresAzul","renderDoadoresVerde","renderNecessitados","renderCestaBasica","renderDoadoresVermelho","renderRedeSocial","renderVerificados","nextProps","Component","Twemoji","emoji","dangerouslySetInnerHTML","__html","twemoji","parse","folder","ext","memo","Header","rowCountProp","id","AppBar","Toolbar","Typography","variant","GoogleSpreadsheet","require","provider","OpenStreetMapProvider","doc","process","NameForm","isLoading","handleChange","bind","handleSubmit","setState","self","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsByIndex","alert","endereco","row","criarRow","search","query","providerResult","latlon","y","Error","addRow","reload","CircularProgress","onSubmit","type","placeholder","loadCells","getCell","saveUpdatedCells","dentroLimites","regiao","Sugestoes","Sugestao","cookies","Cookies","aes","AesEncryption","ReactGA","initialize","pageview","pathname","setSecretKey","App","dataHeader","label","rowCount","telefoneEncryptado","telefoneFilterLocal","site","dropDownMenuSemanaEntregaAlimentoPronto","React","createRef","dropDownMenuHorarioEntregaAlimentoPronto","dropDownMenuSemanaPrecisandoBuscar","dropDownMenuHorarioPrecisandoBuscar","dropDownMenuFiltro","redesocialRef","dropDownMenuRedeSocial","dropDownMenuMesPrecisandoBuscar","dropDownMenuMesEntregaAlimentoPronto","handleChangeNumero","setTipoAlimento","handleChangeTelefone","setDiaSemana","setHorario","setMes","setFiltro","handleClickMap","telefoneFilterChange","handleChangeRedeSocial","categoriaPonto","motivo","prompt","Motivo","Ponto","CategoriaPonto","r","getRows","rows","rowEncontrada","dadosNovos","save","avaliacao","cookieName","pontos","get","coordsString","includes","cookieExpireDate","setDate","getDate","set","path","expires","isPrecisandoBuscar","isEntregaAlimentoPronto","isDoador","current","display","selectedOptions","telefoneValue","encrypt","getLatLng","navigator","geolocation","getCurrentPosition","currentLocation","latitude","longitude","forEach","dados","key","decrypt","fixarPonto","Grid","container","spacing","item","xs","sm","Paper","tileMapOption","ref","Checkbox","inputProps","insta","title","alt","float","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01e0e8b4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hub.4f920e1b.svg\";","export default __webpack_public_path__ + \"static/media/green.00533c2a.svg\";","export default __webpack_public_path__ + \"static/media/red.651e6e29.svg\";","const envVariables = {\r\n    \"mapArea\": {\r\n        \"teto\":2.20,\r\n        \"chao\":-14.09,\r\n        \"paredeEsquerda\":-52.42,\r\n        \"paredeDireita\":-34.32\r\n    },\r\n    \"lastMarked\":undefined,\r\n    \"dentroLimites\": (localizacao) => {\r\n        let permissao = false;\r\n        permissao = \r\n            //cima baixo\r\n            (localizacao[0]< envVariables.mapArea.teto && localizacao[0] > envVariables.mapArea.chao\r\n            &&\r\n            //esquerda direita\r\n            localizacao[1]>envVariables.mapArea.paredeEsquerda && localizacao[1] < envVariables.mapArea.paredeDireita        \r\n            ) || (\r\n              //cima baixo\r\n              localizacao[0]<-14.18 && localizacao[0] > -32.66\r\n              &&\r\n              //esquerda direita\r\n              localizacao[1]>-55.55 && localizacao[1] < -38.06        \r\n            );\r\n        return permissao;\r\n    },\r\n    \"telefoneFilter\":false,\r\n    \"distanceInKmBetweenEarthCoordinates\": ( lat1, lon1, lat2, lon2 ) => {\r\n        var earthRadiusKm = 6371;\r\n\r\n        var dLat =  (lat2-lat1) * Math.PI / 180;\r\n        var dLon =  (lon2-lon1) * Math.PI / 180;\r\n      \r\n        lat1 = lat1 * Math.PI / 180;\r\n        lat2 = lat2 * Math.PI / 180;\r\n      \r\n        var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n                Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2); \r\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n\r\n        return earthRadiusKm * c;\r\n    },\r\n    \"currentLocation\": [],\r\n    \"criarRow\": (dadosRow) => {\r\n\r\n        if(dadosRow.numero !== ''){\r\n            dadosRow.numero = \", nº\"+dadosRow.numero;\r\n        }\r\n        \r\n        \r\n        let dadosJSON = {\r\n            \"Roaster\": dadosRow.alimento, \r\n            \"DateISO\": new Date().toISOString(),\r\n            \"AlimentoEntregue\":0,\r\n            \"Avaliacao\": {\r\n                \"1\":0,\r\n                \"2\":0,\r\n                \"3\":0,\r\n                \"4\":0,\r\n                \"5\":0\r\n            },\r\n\r\n        };\r\n        if(dadosRow.numero!==\"\") dadosJSON.URL = dadosRow.numero;\r\n        if(dadosRow.coords!==\"\") dadosJSON.Coordinates = JSON.stringify(dadosRow.coords);\r\n        if(dadosRow.telefone!==\"\") dadosJSON.Telefone = dadosRow.telefone;\r\n        if(dadosRow.diaSemana!==\"\") {dadosJSON.DiaSemana = dadosRow.diaSemana; dadosJSON.Horario = dadosRow.horario}\r\n        if(dadosRow.redesocial!==\"\") {dadosRow.redesocial=dadosRow.redesocial.replace(\"@\",\"\");dadosJSON.RedeSocial = dadosRow.redesocial;}\r\n        if(dadosRow.mes!==\"\") dadosJSON.Mes = dadosRow.mes;\r\n        const row = {\r\n            Dados: JSON.stringify(dadosJSON)\r\n        };\r\n\r\n        return row;\r\n\r\n    }\r\n}\r\n\r\nexport default envVariables;","import React, { Component } from 'react';\nimport { MapContainer, Marker, TileLayer, Tooltip, AttributionControl, Popup, LayersControl } from \"react-leaflet\";\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport \"react-leaflet-markercluster/dist/styles.min.css\";\nimport coffeeBean from '../images/bean.svg';\nimport hub from '../images/hub.svg';\nimport green from '../images/green.svg';\nimport red from '../images/red.svg';\nimport CurrentLocationSVG from '../images/currentLocation.svg';\nimport CurrentLocationSmallSVG from '../images/currentLocationSmall.svg';\nimport TimeAgo from 'javascript-time-ago';\nimport Rating from '@mui/material/Rating';\n\nimport envVariables from './variaveisAmbiente';\n\nimport pt from 'javascript-time-ago/locale/pt.json';\nTimeAgo.addDefaultLocale(pt);\n\nconst timeAgo = new TimeAgo();\n\nglobal.lastMarked = undefined;\nglobal.lastMarkedCoords = undefined;\n\n// Leaflet custom marker\nconst myIcon = new L.Icon({\n    // Coffee bean attribution -- Thanks! https://commons.wikimedia.org/wiki/File:Coffee_bean_symbol.svg\n    iconUrl: coffeeBean,\n    iconSize: new L.Point(20, 20),\n    className: 'leaflet-bean-icon',\n});\n\n\n// Leaflet custom marker\nconst hubIcon = new L.Icon({\n    iconUrl: hub,\n    iconSize: new L.Point(30, 30),\n    className: 'leaflet-bean-icon',\n});\n\n// Leaflet custom marker\nconst greenIcon = new L.Icon({\n    iconUrl: green,\n    iconSize: new L.Point(35, 35),\n    className: 'leaflet-bean-icon',\n});\nconst redIcon = new L.Icon({\n    iconUrl: red,\n    iconSize: new L.Point(35, 35),\n    className: 'leaflet-bean-icon',\n});\n\nconst CurrentLocation = new L.Icon({\n    iconUrl: CurrentLocationSVG,\n    iconSize: new L.Point(150, 150),\n    className: 'leaflet-bean-icon',\n    interactive: false\n});\nconst CurrentLocationSmall = new L.Icon({\n    iconUrl: CurrentLocationSmallSVG,\n    iconSize: new L.Point(20, 20),\n    className: 'leaflet-bean-icon',\n    interactive: false\n});\n\nconst TestIcon = new L.Icon({\n    iconUrl: 'https://maps.gstatic.com/tactile/reveal/close_1x_16dp.png',\n    iconSize: new L.Point(10, 10),\n    className: 'leaflet-bean-icon',\n    interactive: false\n});\n\n\nconst markerclusterOptionsPrecisando = function (cluster) {\n        var childCount = cluster.getChildCount();\n        var c = ' marker-cluster-';\n        if (childCount < 10) {\n          c += 'small';\n        } \n        else if (childCount < 100) {\n          c += 'medium';\n        } \n        else {\n          c += 'large';\n        }\n       \n        return new L.DivIcon({ html: '<div><span>' + childCount + '</span></div>', \n         className: 'marker-cluster' + c + '-precisandoCluster', iconSize: new L.Point(40, 40) });\n        };\n\n  const markerclusterOptionsAnjos = (cluster) => {\n    var childCount = cluster.getChildCount();\n    var c = ' marker-cluster-';\n    if (childCount < 10) {\n      c += 'small';\n    } \n    else if (childCount < 100) {\n      c += 'medium';\n    } \n    else {\n      c += 'large';\n    }\n   \n    return new L.DivIcon({ html: '<div><span>' + childCount + '</span></div>', \n     className: 'marker-cluster' + c +'-anjosCluster', iconSize: new L.Point(40, 40) });\n    };\n\n    const markerclusterOptionsEntrega = (cluster) => {       \n        return new L.DivIcon({ html: '<div><span>' + cluster.getChildCount() + '</span></div>', \n         className: 'redHub marker-cluster', iconSize: new L.Point(40, 40) });\n    };\n\n\nclass CoffeeMap extends Component {\n\n    // Initial state\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            dataMaps: [],\n            center: props.location,\n            filtro: props.filtro,\n        }\n    }\n\n     //ATUALIZAR PROPS VINDAS DO PAI\n     static getDerivedStateFromProps(nextProps, state) {\n        if(state){\n          if (nextProps.filtro !== state.filtro){ \n            state.filtro=nextProps.filtro;\n          }\n        }\n        return state;\n      }\n\n    render() {\n\n        // Render map default zoom based on mobile breakpoint\n        const isMobile = window.innerWidth < 480;\n        const screensizeZoom = isMobile ? 7.25 : 8.5*1.2;\n\n        return (\n            <div>\n                <MapContainer \n                    style={{ height: \"89vh\", width: \"100%\" }}\n                    zoom={screensizeZoom}\n                    maxZoom={18}\n                    center={this.state.center}\n                    attributionControl={false}\n                    whenReady={(map) => {\n                        //console.log(map);\n                        map.target.on(\"click\", function (e) {\n                          //if(e.originalEvent.detail>=2)alert(e.originalEvent.detail);\n                          const { lat, lng } = e.latlng;\n                          //envVariables.lastMarked.latlng = [lat,lng];\n                        //   console.log(this);\n                        //   this.props.onClickMap([lat,lng]);\n                          if(envVariables.lastMarked) envVariables.lastMarked.remove();\n                          envVariables.lastMarked = L.marker([lat, lng], {icon:CurrentLocationSmall, draggable: false}).addTo(map.target);\n                        });\n                      }}\n                    >\n\n{/* https://leaflet-extras.github.io/leaflet-providers/preview/ */}\n{/* https://github.com/dhis2-club-tanzania/function-maintenance/blob/0dadaa96955156b6ddefc0fcf9dd54e45ffb9458/src/app/shared/modules/ngx-dhis2-visualization/modules/map/constants/tile-layer.constant.ts */}\n{/* https://www.arcgis.com/apps/mapviewer/index.html */}\n                    {/* <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n                     {/* <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n                    {/* <TileLayer url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n\n                    \n                     {/* {this.state.tileMapOption ? \n                     <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                     attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                 />\n                    :\n                    <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />\n                } */}\n\n                     {/* <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n                    {/* <TileLayer url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />  */}\n                    {/* <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />  */}\n                    <LayersControl style={{opacity:'0.5'}} position=\"bottomleft\">\n                    \n                    {/* <LayersControl.BaseLayer checked name=\"Esri\">\n                    <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}\"\n                        attribution='Tiles &copy; Esri'\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"Stamen-lite\">\n                    <TileLayer url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}{r}.png\"\n                        attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"Stamen-terrain\">\n                    <TileLayer url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/terrain/{z}/{x}/{y}{r}.png\"\n                        attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"4\">\n                    <TileLayer url=\"https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"3\">\n                    <TileLayer url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"2\">\n                    <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"1\">\n                    <TileLayer url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer> */}\n                    <LayersControl.BaseLayer checked name=\"Waze\">\n                    <TileLayer url=\"https://worldtiles1.waze.com/tiles/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer  name=\"Mapa\">\n                    <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                     attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OSM</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n\n                    <LayersControl.BaseLayer name=\"Satelite\">\n                    <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='https://www.arcgis.com/apps/mapviewer/index.html' target='_blank' rel='noreferrer'>Esri</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n\n                    \n                    </LayersControl>\n\n\n\n                    <AttributionControl\n                        position=\"bottomleft\"\n                        prefix={false}\n                    />\n                    \n                    <Marker\n                            icon= {CurrentLocation} \n                            key={\"currentPosition\"}\n                            center={this.state.center}\n                            position={this.state.center}\n\n                            eventHandlers={{\n                                click: (e) => { \n                                    e.preventDefault();\n                                }\n                            }}\n\n                            interactive={false}\n                        >\n                            \n                    {/* <Popup\n                        direction=\"auto\"\n                        offset={[2, 0]}\n                        opacity={1}>\n                        <span>você está aqui</span>\n                    </Popup> */}\n                        </Marker>\n\n                        {/* {(() => {\n                            switch(this.state.filtro) {\n                                case \"Todos\":\n                                    return ([\n                                        this.renderDoadoresAzul(),\n                                        this.renderDoadoresVerde(),\n                                        this.renderNecessitados(),\n                                        this.renderDoadoresVermelho()]\n                                    )\n                                    break;\n                                case \"Necessitados\":\n                                    return ([\n                                        this.renderNecessitados()]\n                                    )\n                                    break;\n                                case \"Doadores\":\n                                    return ([\n                                        this.renderDoadoresAzul(),\n                                        this.renderDoadoresVerde(),\n                                        this.renderDoadoresVermelho()]\n                                    )\n                                    break;\n                                case \"Refeição Pronta\":\n                                    return ([\n                                        this.renderDoadoresVerde(),\n                                        this.renderDoadoresVermelho()]\n                                    )\n                                    break;\n                            }\n                        })()} */}\n                        {this.renderSwitch(this.state.filtro)}\n                        {this.renderTestes()}\n\n                    \n                </MapContainer>\n            </div>\n        );\n    }\n\n    \n    setupVariables(mapCoords,DateISO,Telefone,Avaliacao){\n        let googleDirection = `https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`;\n                            \n        let dateMarked = timeAgo.format(Date.now() - (Date.now() - new Date(DateISO).getTime()) );\n         //if(DateISO) dateMarked\n        if(Telefone){\n            let urlTelefone = `whatsapp://send?phone=55${Telefone}`;\n            let legivelTelefone = Telefone.replace(/(\\d{2})(\\d{5})(\\d{4})/g, \"($1) $2-$3\");\n            let contato=\"contato:\";\n            switch(Telefone.length){\n                case 0:\n                    Telefone=\"\";\n                    break;\n                case 8:\n                    Telefone=\"contato:\"+Telefone.replace(/(\\d{4})(\\d{4})/g, \"$1-$2\");\n                    break;\n                case 9:\n                    Telefone=\"contato:\"+Telefone.replace(/(\\d{5})(\\d{4})/g, \"$1-$2\");\n                    break;\n                default:\n                    Telefone=<span>{contato}<a href={urlTelefone} target='_blank' rel='noreferrer'>{legivelTelefone}</a></span>;\n                    break;\n            }\n        }\n\n        let AvaliacaoData = {nota:0, totalClicks:0};\n        if(Avaliacao){\n            AvaliacaoData.totalClicks = (Avaliacao[\"5\"]+Avaliacao[\"4\"]+Avaliacao[\"3\"]+Avaliacao[\"2\"]+Avaliacao[\"1\"]);\n            if( AvaliacaoData.totalClicks === 0 ){\n                Avaliacao=\"Nenhuma\";\n            }else{\n                Avaliacao = (Avaliacao[\"5\"]*5 +\n                Avaliacao[\"4\"]*4 +\n                Avaliacao[\"3\"]*3 +\n                Avaliacao[\"2\"]*2 +\n                Avaliacao[\"1\"]*1)\n                /            \n                (AvaliacaoData.totalClicks);\n\n                Avaliacao = Math.round(Avaliacao * 100)/100;\n\n            }\n        }\n\n        AvaliacaoData.nota = Avaliacao;\n\n    \n        return {googleDirection, dateMarked, Telefone, AvaliacaoData};\n    }\n\n    configPopup(dadosPopup){\n        let {googleDirection, precisandoMsg, dateMarked, contato, \n            AlimentoEntregue, mapCoords, Roaster, Avaliacao, redesocial} = dadosPopup;\n        \n        if(Avaliacao===undefined) Avaliacao = {nota:\"Nenhuma\",totalClicks:0};\n\n        return <Popup>\n            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n            <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n            <br/>\n            <div style={{width:'80%'}}> {precisandoMsg} </div>\n            <br/>\n            {dateMarked} {contato} \n            {redesocial ? \n                <span><br></br><a href={\"https://\"+redesocial} target='_blank' rel='noreferrer'> RedeSocial</a></span>\n            : <span></span>\n            }\n            <br/> \n            (<svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" focusable=\"false\"><path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27z\"></path></svg>\n            {Avaliacao.nota})\n            <Rating\n                name=\"simple-controlled\"\n                value={Avaliacao.nota}\n                onChange={(event, newValue) => {\n                    this.props.avaliar([mapCoords[0], mapCoords[1]], newValue);\n                }}\n            />\n            ({Avaliacao.totalClicks})\n            \n            <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n            { (Roaster === \"Doador\" || Roaster === \"EntregaAlimentoPronto\") ? (dadosPopup.verificado===1 ? <img src=\"https://static.xx.fbcdn.net/assets/?revision=1174640696642832&amp;name=ig-verifiedbadge-shared&amp;density=1\"></img> : <button onClick={()=>this.props.verificarPonto([mapCoords[0], mapCoords[1]], Roaster)}>cnpj</button>) : <span></span>}\n            \n            <br/>\n            <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n            <span>    </span>\n            <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                    \n        </Popup>\n    }\n\n    renderRedeSocial(){\n        return <MarkerClusterGroup\n                    // grupo de onde pode ajudar\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                        iconCreateFunction={markerclusterOptionsAnjos}\n                    >                  \n                    {/* .filter(x => { return x.Coordinates; })       */}\n                        {this.props.dataMapsProp.filter(x => {\n                            return x.RedeSocial \n                        }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Mes, Horario, AlimentoEntregue, Avaliacao, RedeSocial} = dataItem;\n                            \n                            if(mapCoords === undefined) return; if(URL===undefined) URL = \"\"; if(RedeSocial===undefined) RedeSocial=\"\";\n                            \n                            let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone, Avaliacao);\n                            \n                            //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                            if(envVariables.telefoneFilter && contato===\"\") return (<div></div>);\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            switch(Roaster){\n                                case \"Doador\":\n                                    precisandoMsg = \"Recebendo alimento para distribuir\"+URL;\n                                    CurrentIcon = hubIcon;\n                                    break;                               \n                                \n                                case \"EntregaAlimentoPronto\":\n                                    precisandoMsg = `Entregando refeições prontas `+DiaSemana+\" pela \"+Horario+\" \"+Mes;\n                                    CurrentIcon = redIcon;\n                                    break;\n                                default:\n                                    return (<div></div>);\n                                    break;\n                            }\n                            \n                            let dadosPopup = {...dataItem};\n                            dadosPopup.precisandoMsg = precisandoMsg;\n                            dadosPopup.googleDirection = googleDirection;\n                            dadosPopup.dateMarked = dateMarked;\n                            dadosPopup.contato = contato;\n                            dadosPopup.Avaliacao = nota;\n\n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`); \n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                   {this.configPopup(dadosPopup)}\n                                    \n                                    {/* <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n                                        <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {contato} \n                                        <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n                                        <br/>\n                                        <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                        <span>    </span>\n                                        <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                \n                                    </Popup> */}\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n    }\n\n    renderVerificados(){\n        return <MarkerClusterGroup\n                    // grupo de onde pode ajudar\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                        iconCreateFunction={markerclusterOptionsAnjos}\n                    >                  \n                    {/* .filter(x => { return x.Coordinates; })       */}\n                        {this.props.dataMapsProp.filter(x => {return x.RedeSocial }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Mes, Horario, AlimentoEntregue, Avaliacao, RedeSocial} = dataItem;\n                            \n                            if(mapCoords === undefined) return; if(URL===undefined) URL = \"\"; if(RedeSocial===undefined) RedeSocial=\"\";\n                            \n                            let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone, Avaliacao);\n                            \n                            //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            if(dataItem.verificado !== 1) return (<div></div>);\n                            if(envVariables.telefoneFilter && contato===\"\") return (<div></div>);\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            switch(Roaster){\n                                case \"Doador\":\n                                    precisandoMsg = \"Recebendo alimento para distribuir\"+URL;\n                                    CurrentIcon = hubIcon;\n                                    break;                               \n                                \n                                case \"EntregaAlimentoPronto\":\n                                    precisandoMsg = `Entregando refeições prontas `+DiaSemana+\" pela \"+Horario+\" \"+Mes;\n                                    CurrentIcon = redIcon;\n                                    break;\n                                default:\n                                    return (<div></div>);\n                                    break;\n                            }\n                            \n                            let dadosPopup = {...dataItem};\n                            dadosPopup.precisandoMsg = precisandoMsg;\n                            dadosPopup.googleDirection = googleDirection;\n                            dadosPopup.dateMarked = dateMarked;\n                            dadosPopup.contato = contato;\n                            dadosPopup.Avaliacao = nota;\n\n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`); \n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                   {this.configPopup(dadosPopup)}\n                                    \n                                    {/* <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n                                        <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {contato} \n                                        <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n                                        <br/>\n                                        <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                        <span>    </span>\n                                        <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                \n                                    </Popup> */}\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n    }\n\n    renderDoadoresAzul(){\n        return <MarkerClusterGroup\n                    // grupo de onde pode ajudar\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                        iconCreateFunction={markerclusterOptionsAnjos}\n                    >                  \n                    {/* .filter(x => { return x.Coordinates; })       */}\n                        {this.props.dataMapsProp.filter(x => {return x.Roaster===\"Doador\" }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Horario, AlimentoEntregue, Avaliacao, RedeSocial} = dataItem;\n                            \n                            if(mapCoords === undefined) return; if(URL===undefined) URL = \"\"; if(RedeSocial===undefined) RedeSocial=\"\";\n                            \n                            let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone, Avaliacao);\n                            \n                            //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                            if(envVariables.telefoneFilter && contato===\"\") return (<div></div>);\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            // switch(Roaster){\n                            //     case \"Doador\":\n                                    precisandoMsg = \"Recebendo alimento para distribuir\"+URL;\n                                    CurrentIcon = hubIcon;\n                            //         break;                               \n                                \n                            //     default:\n                            //         return (<div></div>);\n                            //         break;\n                            // }\n                            \n                            let dadosPopup = {...dataItem};\n                            dadosPopup.precisandoMsg = precisandoMsg;\n                            dadosPopup.googleDirection = googleDirection;\n                            dadosPopup.dateMarked = dateMarked;\n                            dadosPopup.contato = contato;\n                            dadosPopup.Avaliacao = nota;\n                            \n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`); \n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                   {this.configPopup(dadosPopup)}\n                                    \n                                    {/* <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n                                        <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {contato} \n                                        <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n                                        <br/>\n                                        <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                        <span>    </span>\n                                        <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                \n                                    </Popup> */}\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n    }\n\n    renderDoadoresVerde(){\n        return <MarkerClusterGroup\n                    // grupo de onde pode ajudar\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                        iconCreateFunction={markerclusterOptionsAnjos}\n                    >                        \n                        {this.props.dataMapsProp.filter(x => {return x.Roaster===\"PrecisandoBuscar\" }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Horario, Mes, AlimentoEntregue, Avaliacao} = dataItem;\n                            \n                            if(mapCoords === undefined) return; if(URL===undefined) URL = \"\"; if(Mes===undefined) Mes=\"\";\n\n                            let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone,Avaliacao);\n                            \n                            //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                            if(envVariables.telefoneFilter && contato===\"\") return (<div></div>);\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            // switch(Roaster){\n                            //     case \"PrecisandoBuscar\":\n                                    precisandoMsg = `Precisando de pessoas para buscar `+DiaSemana + \" pela \"+Horario+\" \"+Mes;\n                                    CurrentIcon = greenIcon;\n                            //         break;                                \n                                \n                            //     default:\n                            //         return (<div></div>);\n                            //         break;\n                            // }\n                            \n                            let dadosPopup = {...dataItem};\n                            dadosPopup.precisandoMsg = precisandoMsg;\n                            dadosPopup.googleDirection = googleDirection;\n                            dadosPopup.dateMarked = dateMarked;\n                            dadosPopup.contato = contato;\n                            dadosPopup.Avaliacao = nota;\n\n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`); \n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                   {this.configPopup(dadosPopup)}\n                                    \n                                    {/* <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n                                        <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {contato} \n                                        <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n                                        <br/>\n                                        <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                        <span>    </span>\n                                        <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                \n                                    </Popup> */}\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n    }\n\n    renderDoadoresVermelho(){\n        return <MarkerClusterGroup\n        // grupo de entrega de alimentos prontos\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n            iconCreateFunction={markerclusterOptionsEntrega}\n        >                        \n            {this.props.dataMapsProp.filter(x => {return x.Roaster===\"EntregaAlimentoPronto\" }).map((dataItem, k) => {\n                let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Horario, Mes, AlimentoEntregue, Avaliacao, RedeSocial } = dataItem;\n                \n                if(mapCoords === undefined) return; if(URL===undefined) URL = \"\"; if(Mes===undefined) Mes=\"\";\n\n                let {googleDirection, dateMarked, Telefone: contato, redesocial, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone, Avaliacao);\n                \n                //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                if(envVariables.telefoneFilter && contato===\"\") return (<div></div>);\n                //filtrar datas antigas\n                // if(\n                //     dateMarked.includes(\"semana\") \n                // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                // ) return (<div></div>);\n                \n                let precisandoMsg, CurrentIcon;\n                // switch(Roaster){\n                //     case \"EntregaAlimentoPronto\":\n                        precisandoMsg = `Entregando refeições prontas `+DiaSemana+\" pela \"+Horario+\" \"+Mes;\n                        CurrentIcon = redIcon;\n                //         break;\n                    \n                //     default:\n                //         return (<div></div>);\n                //         break;\n                // }\n                \n                let dadosPopup = {...dataItem};\n                dadosPopup.precisandoMsg = precisandoMsg;\n                dadosPopup.googleDirection = googleDirection;\n                dadosPopup.dateMarked = dateMarked;\n                dadosPopup.contato = contato;\n                dadosPopup.Avaliacao = nota;\n\n                return (\n                    <Marker\n                        eventHandlers={{\n                            click: (e) => { \n                                // alert(`Precisando de ${Roaster}`); \n                                console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                            }\n                        }}\n                        icon= {CurrentIcon} \n                        key={k}\n                        center={[mapCoords[0], mapCoords[1]]}\n                        position={[mapCoords[0], mapCoords[1]]}\n                    >\n                        {this.configPopup(dadosPopup)}\n                                    \n                        {/* <Popup>\n                            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                            <br/>\n                            {precisandoMsg}\n                            <br/>\n                            {dateMarked} {contato} \n                            <br/>{\" (Qtde entregue:\"+AlimentoEntregue+\")\"}\n                            <br/>\n                            <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                            <span>    </span>\n                            <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                        </Popup> */}\n                        {/* <Tooltip\n                            // direction=\"auto\"\n                            // offset={[15, 0]}\n                            // opacity={1}>\n                            // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                            // <span>{City}, BR</span>\n                        </Tooltip> */}\n                    </Marker>);\n            })}\n        </MarkerClusterGroup>\n    }\n\n    renderNecessitados(){\n        return <MarkerClusterGroup\n        // grupo dos que precisam\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n            iconCreateFunction={markerclusterOptionsPrecisando}\n        >                        \n            {this.props.dataMapsProp.filter(x => {return x.Roaster===\"Alimento pronto\" }).map((dataItem, k) => {\n                let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, AlimentoEntregue, Avaliacao} = dataItem;\n                \n                if(mapCoords === undefined) return; if(URL===undefined) URL = \"\";\n                \n                let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone);\n        \n                //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                if(envVariables.telefoneFilter && contato===\"\") return (<div></div>);\n                //filtrar datas antigas\n                // if(\n                //     dateMarked.includes(\"semana\") \n                // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                // ) return (<div></div>);\n                \n                let precisandoMsg, CurrentIcon;\n                // switch(Roaster){                    \n                //     case \"Alimento pronto\":\n                        precisandoMsg = `Precisando de ${Roaster}`+URL;\n                        CurrentIcon = myIcon;\n                //         break;\n                    \n                //     default:\n                //         return (<div></div>);\n                //         break;\n                // }\n                \n                let dadosPopup = {...dataItem};\n                dadosPopup.precisandoMsg = precisandoMsg;\n                dadosPopup.googleDirection = googleDirection;\n                dadosPopup.dateMarked = dateMarked;\n                dadosPopup.contato = contato;\n                dadosPopup.Avaliacao = nota;\n\n                return (\n                    <Marker\n                        eventHandlers={{\n                            click: (e) => { \n                                // alert(`Precisando de ${Roaster}`); \n                                console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                            }\n                        }}\n                        icon= {CurrentIcon} \n                        key={k}\n                        center={[mapCoords[0], mapCoords[1]]}\n                        position={[mapCoords[0], mapCoords[1]]}\n                    >\n                        {this.configPopup(dadosPopup)}\n                                    \n                        {/* <Popup>\n                            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                            <br/>\n                            {precisandoMsg}\n                            <br/>\n                            {dateMarked} {contato} \n                            <br/>{\" (Qtde entregue:\"+AlimentoEntregue+\")\"}\n                            <br/>\n                            <div className='buttonsSidebySide'>\n                                <button className='buttonsSidebySide' onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                <span>    </span>\n                                <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                            </div>\n                        </Popup> */}\n                        {/* <Tooltip\n                            // direction=\"auto\"\n                            // offset={[15, 0]}\n                            // opacity={1}>\n                            // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                            // <span>{City}, BR</span>\n                        </Tooltip> */}\n                    </Marker>);\n            })}\n        </MarkerClusterGroup>\n    }\n\n    renderCestaBasica(){\n        return <MarkerClusterGroup\n        // grupo dos que precisam\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n            iconCreateFunction={markerclusterOptionsPrecisando}\n        >                        \n            {this.props.dataMapsProp.filter(x => {return x.Roaster===\"Alimento de cesta básica\" }).map((dataItem, k) => {\n                let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, AlimentoEntregue, Avaliacao} = dataItem;\n                \n                if(mapCoords === undefined) return; if(URL===undefined) URL = \"\";\n                \n                let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone);\n        \n                //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                if(envVariables.telefoneFilter && contato===\"\") return (<div></div>);\n                //filtrar datas antigas\n                // if(\n                //     dateMarked.includes(\"semana\") \n                // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                // ) return (<div></div>);\n                \n                let precisandoMsg, CurrentIcon;\n                // switch(Roaster){                                \n                //     case \"Alimento de cesta básica\":\n                        precisandoMsg = `Precisando de ${Roaster}`+URL;\n                        CurrentIcon = myIcon;\n                //         break;\n                    \n                //     default:\n                //         return (<div></div>);\n                //         break;\n                // }\n                \n                let dadosPopup = {...dataItem};\n                dadosPopup.precisandoMsg = precisandoMsg;\n                dadosPopup.googleDirection = googleDirection;\n                dadosPopup.dateMarked = dateMarked;\n                dadosPopup.contato = contato;\n                dadosPopup.Avaliacao = nota;\n\n                return (\n                    <Marker\n                        eventHandlers={{\n                            click: (e) => { \n                                // alert(`Precisando de ${Roaster}`); \n                                console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                            }\n                        }}\n                        icon= {CurrentIcon} \n                        key={k}\n                        center={[mapCoords[0], mapCoords[1]]}\n                        position={[mapCoords[0], mapCoords[1]]}\n                    >\n                        {this.configPopup(dadosPopup)}\n                                    \n                        {/* <Popup>\n                            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                            <br/>\n                            {precisandoMsg}\n                            <br/>\n                            {dateMarked} {contato} \n                            <br/>{\" (Qtde entregue:\"+AlimentoEntregue+\")\"}\n                            <br/>\n                            <div className='buttonsSidebySide'>\n                                <button className='buttonsSidebySide' onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                <span>    </span>\n                                <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                            </div>\n                        </Popup> */}\n                        {/* <Tooltip\n                            // direction=\"auto\"\n                            // offset={[15, 0]}\n                            // opacity={1}>\n                            // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                            // <span>{City}, BR</span>\n                        </Tooltip> */}\n                    </Marker>);\n            })}\n        </MarkerClusterGroup>\n    }\n\n    renderTestes(){\n        return <MarkerClusterGroup\n        // grupo dos que precisam\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n            iconCreateFunction={markerclusterOptionsPrecisando}\n        >                        \n            {this.props.dataMapsProp.filter(x => {return x.Roaster===\"Teste\" }).map((dataItem, k) => {\n                let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, AlimentoEntregue, Avaliacao} = dataItem;\n                \n                if(mapCoords === undefined) return; if(URL===undefined) URL = \"\";\n                \n                let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone);\n        //filtrar datas antigas\n\n                var msec = Date.now() - (new Date(DateISO)).getTime();\n                var mins = Math.floor(msec / 60000);\n                var hrs = Math.floor(mins / 60);\n                if(\n                    hrs > 3\n                ) return (<div></div>);\n                \n                \n                let precisandoMsg, CurrentIcon;\n                // switch(Roaster){                                \n                //     case \"Teste\":\n                        CurrentIcon = TestIcon;\n                //         break;\n                    \n                //     default:\n                //         return (<div></div>);\n                //         break;\n                // }\n                \n                return (\n                    <Marker\n                        eventHandlers={{\n                            click: (e) => { \n                                // alert(`Precisando de ${Roaster}`); \n                                console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                            }\n                        }}\n                        icon= {CurrentIcon} \n                        key={k}\n                        center={[mapCoords[0], mapCoords[1]]}\n                        position={[mapCoords[0], mapCoords[1]]}\n                    >\n                        {/* {this.configPopup(googleDirection,precisandoMsg,dateMarked,contato,AlimentoEntregue,mapCoords,Roaster)} */}\n                                    \n                        {/* <Popup>\n                            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                            <br/>\n                            {precisandoMsg}\n                            <br/>\n                            {dateMarked} {contato} \n                            <br/>{\" (Qtde entregue:\"+AlimentoEntregue+\")\"}\n                            <br/>\n                            <div className='buttonsSidebySide'>\n                                <button className='buttonsSidebySide' onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                <span>    </span>\n                                <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                            </div>\n                        </Popup> */}\n                        {/* <Tooltip\n                            // direction=\"auto\"\n                            // offset={[15, 0]}\n                            // opacity={1}>\n                            // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                            // <span>{City}, BR</span>\n                        </Tooltip> */}\n                    </Marker>);\n            })}\n        </MarkerClusterGroup>\n    }\n\n    renderSwitch(param){\n        switch(this.state.filtro) {\n            case \"Todos\":\n                return ([\n                    this.renderDoadoresAzul(),\n                    this.renderDoadoresVerde(),\n                    this.renderNecessitados(),\n                    this.renderCestaBasica(),\n                    this.renderDoadoresVermelho()]\n                )\n                break;\n            case \"CestaBasica\":\n                return ([\n                    this.renderCestaBasica()]\n                )\n                break;\n            case \"MoradorRua\":\n                return ([\n                    this.renderNecessitados()]\n                )\n                break;\n            case \"Doadores\":\n                return ([\n                    this.renderDoadoresAzul(),\n                    this.renderDoadoresVerde(),\n                    this.renderDoadoresVermelho()]\n                )\n                break;\n            case \"Refeição Pronta\":\n                return ([\n                    this.renderDoadoresVerde(),\n                    this.renderDoadoresVermelho()]\n                )\n                break;\n            case \"RedeSocial\":\n                return ([\n                    this.renderRedeSocial()]\n                )\n                break;\n            case \"Verificados\":\n                return ([\n                    this.renderVerificados()]\n                )\n                break;\n            case \"Nenhum\":\n                return (<div></div>);\n                break;\n        }\n    }\n\n}\n\nexport default CoffeeMap;","export default __webpack_public_path__ + \"static/media/currentLocation.bd009424.svg\";","export default __webpack_public_path__ + \"static/media/currentLocationSmall.1d7df3b6.svg\";","import React, { memo } from 'react'\nimport twemoji from 'twemoji'\n\n// Using the official https://github.com/twitter/twemoji from Twitter\n// With an excellent example from https://gist.github.com/chibicode/fe195d792270910226c928b69a468206\n\nconst Twemoji = ({ emoji }) => (\n    <span\n        dangerouslySetInnerHTML={{\n            __html: twemoji.parse(emoji, {\n                folder: 'svg',\n                ext: '.svg'\n            })\n        }}\n    />\n)\n\nexport default memo(Twemoji)","import React, { Component } from 'react';\nimport Twemoji from './twemoji';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import github_mark from '../images/github_mark.png';\nimport TableCount from './tableCount';\n\nclass Header extends Component {\n\n    render() {\n\n        const { rowCountProp } = this.props;\n\n        return (\n            <div id=\"header\">\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" id=\"logo\">\n                            <Twemoji emoji=\"☕\" /> MAPA da FOME <span className=\"beta\">(beta) site:</span> www.mapafome.com.br \n                        </Typography>\n                        {/* <TableCount rowCountProp={rowCountProp} /> */}\n                        {/* <a href=\"https://docs.google.com/spreadsheets/d/1u7jiqY1qM0jYWugn1dFiW3plQrvWysJqm8xXhO35zuU/edit?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Button\n                                variant=\"contained\"\n                                size=\"small\">\n                                Add<span id=\"RoasterButtonMobile\">&nbsp;Roaster</span>\n                            </Button>\n                        </a>\n                        <a href=\"https://github.com/hdehal/coffee-maps\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <IconButton\n                                className=\"GitHub\"\n                                variant=\"outlined\"\n                                size=\"small\">\n                                <img className=\"GitHub\" src={github_mark} alt=\"Hosted on GitHub\" />\n                            </IconButton>\n                        </a> */}\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Typography from '@mui/material/Typography';\n\nclass TableCount extends Component {\n    render() {\n        return (\n            <Typography className=\"TableCount\">\n                TOTAL: {this.props.rowCountProp}\n            </Typography>\n        );\n    }\n}\n\nexport default TableCount;","import React, { Component } from 'react';\r\n\r\nimport { \r\n  OpenStreetMapProvider,\r\n  // BingProvider \r\n} from 'leaflet-geosearch';\r\n\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport envVariables from '../variaveisAmbiente';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\nconst provider = new OpenStreetMapProvider();\r\n\r\n// = new BingProvider({\r\n//   params: {\r\n//     key: process.env.REACT_APP_BING_MAPS_API_KEY\r\n//   },\r\n// });\r\n//\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass NameForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '', \r\n        alimento: props.alimento, \r\n        isLoading:false,\r\n        telefone:props.telefone,\r\n        diaSemana:props.diaSemana,\r\n        horario:props.horario,\r\n        mes:props.mes,\r\n        redesocial:props.redesocial\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    //ATUALIZAR PROPS VINDAS DO PAI\r\n    static getDerivedStateFromProps(nextProps, state) {\r\n      if(state){\r\n        if (nextProps.alimento !== state.alimento){ \r\n          state.alimento=nextProps.alimento;\r\n        }\r\n        if (nextProps.telefone !== state.telefone){ \r\n          state.telefone=nextProps.telefone;\r\n        }\r\n        if (nextProps.diaSemana !== state.diaSemana){ \r\n          state.diaSemana=nextProps.diaSemana;\r\n        }\r\n        if (nextProps.horario !== state.horario){ \r\n          state.horario=nextProps.horario;\r\n        }\r\n        if (nextProps.mes !== state.mes){ \r\n          state.mes=nextProps.mes;\r\n        }\r\n        if (nextProps.redesocial !== state.redesocial){ \r\n          state.redesocial=nextProps.redesocial;\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n  \r\n    handleChange(event) {\r\n      if(event.target.value.length > 100) return; \r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      //alert('Um endereço foi enviado: ' + this.state.value);\r\n      if(this.state.value === '') {event.preventDefault();return;}\r\n      \r\n      this.setState({isLoading: true});\r\n\r\n      (async function main(self) {\r\n        await doc.useServiceAccountAuth({\r\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n        });\r\n\r\n        await doc.loadInfo(); // Loads document properties and worksheets\r\n\r\n        const sheet = doc.sheetsByIndex[0];\r\n        //row = { Name: \"new name\", Value: \"new value\" };\r\n        \r\n        // Total row count\r\n        let numero = self.state.value.replace(/[^0-9]/g,'');\r\n        if(numero === ''){\r\n          alert(\"faltou colocar o número\");\r\n          \r\n          event.preventDefault();\r\n          self.setState({isLoading: false});\r\n          return;\r\n        }\r\n        // const row = { \r\n        //   Roaster:  self.state.alimento, \r\n        //   URL:numero, City: self.state.value,\r\n        //   DateISO: new Date().toISOString(), \r\n        //   Telefone: self.state.telefone, \r\n        //   DiaSemana: self.state.diaSemana, \r\n        //   Horario: self.state.horario,\r\n        //   AlimentoEntregue:0,\r\n        // };\r\n\r\n        let dadosRow = {};\r\n        dadosRow.alimento = self.state.alimento;\r\n        dadosRow.numero = numero;\r\n        dadosRow.endereco = self.state.value;\r\n        dadosRow.coords = \"\";\r\n        dadosRow.telefone = self.state.telefone;\r\n        dadosRow.diaSemana = self.state.diaSemana;\r\n        dadosRow.horario = self.state.horario;\r\n        dadosRow.mes = self.state.mes;\r\n        dadosRow.redesocial = self.state.redesocial;\r\n        const row = envVariables.criarRow(dadosRow);\r\n        // let dadosJSON = { \r\n        //   \"Roaster\":  self.state.alimento, \r\n        //   \"URL\":numero, \r\n        //   \"City\": self.state.value,\r\n        //   \"DateISO\": new Date().toISOString(), \r\n        //   \"Telefone\": self.state.telefone, \r\n        //   \"DiaSemana\": self.state.diaSemana, \r\n        //   \"Horario\": self.state.horario,\r\n        //   \"AlimentoEntregue\":0,\r\n        //   \"RedeSocial\":\"\",\r\n        //   \"Avaliacao\": {\r\n        //     \"1\":0,\r\n        //     \"2\":0,\r\n        //     \"3\":0,\r\n        //     \"4\":0,\r\n        //     \"5\":0\r\n        //   },\r\n        // };\r\n\r\n        \r\n        try{\r\n          let dadosJSON = JSON.parse(row.Dados);\r\n          let providerResult = await provider.search({ query: self.state.value.replace('-',\",\") + ', Brazil' });\r\n  \r\n          if(providerResult.length !== 0 ){\r\n              // throw new Error(\"endereco-nao-encontrado\");\r\n  \r\n              // console.log(providerResult);\r\n              let latlon = [providerResult[0].y,providerResult[0].x];\r\n              dadosJSON.Coordinates = JSON.stringify(latlon).replace(\" \",\"\");\r\n              row.Dados = JSON.stringify(dadosJSON); // Convert obj to string\r\n              //needsUpdates[index].mapCoords = latlon;\r\n          }else{\r\n             throw new Error(\"endereco-nao-encontrado\");\r\n          }\r\n        }catch(e){\r\n            console.log(\"ERRO\");\r\n            console.log(e);\r\n            alert(\"Houve um problema ao cadastrar endereço, porfavor clique no mapa e depois confirme o no botão marcar Local tocado.\\nou use o botão marcar Localização Atual\");\r\n        }\r\n        await sheet.addRow(row);\r\n       \r\n        self.setState({isLoading: false});\r\n        window.location.reload();\r\n      })(this);\r\n      event.preventDefault();\r\n    }\r\n\r\n    \r\n  \r\n    render() {\r\n      return (\r\n        this.state.isLoading ?\r\n        <div><CircularProgress /></div>\r\n        :\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <input className=\"TextField\" type=\"text\" placeholder='Insira rua,nº,bairro,cidade,estado' value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input className=\"SubmitButton\" type=\"submit\" value=\"Enviar Endereço\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\nexport default NameForm; ","import React, { Component } from 'react';\r\n\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport envVariables from '../variaveisAmbiente';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass NameForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '', \r\n        location: props.location, \r\n        alimento: props.alimento, \r\n        isLoading:false,\r\n        telefone:props.telefone,\r\n        diaSemana:props.diaSemana,\r\n        mes:props.mes,\r\n        numero:props.numero,\r\n        redesocial:props.redesocial,\r\n      };\r\n  \r\n      // this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n\r\n    }\r\n\r\n  componentDidMount() {\r\n      \r\n    //salvar acesso  \r\n      \r\n    (async function main(self) {\r\n      try{\r\n        await doc.useServiceAccountAuth({\r\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n        });\r\n    \r\n        await doc.loadInfo(); // Loads document properties and worksheets\r\n    \r\n        const sheet = doc.sheetsByIndex[1];\r\n        \r\n        await sheet.loadCells('A2');\r\n        const a1 = sheet.getCell(1, 0);\r\n        a1.value+=1;\r\n        await sheet.saveUpdatedCells();\r\n      }catch(e){\r\n        \r\n      }\r\n      \r\n    })(this);\r\n\r\n  }\r\n\r\n    //ATUALIZAR PROPS VINDAS DO PAI\r\n    static getDerivedStateFromProps(nextProps, state) {\r\n      if(state){\r\n\r\n        if (nextProps.alimento !== state.alimento){ \r\n          state.alimento=nextProps.alimento;\r\n        }\r\n        if (nextProps.telefone !== state.telefone){ \r\n          state.telefone=nextProps.telefone;\r\n        }\r\n        if (nextProps.diaSemana !== state.diaSemana){ \r\n          state.diaSemana=nextProps.diaSemana;\r\n        }\r\n        if (nextProps.horario !== state.horario){ \r\n          state.horario=nextProps.horario;\r\n        }        \r\n        if (nextProps.mes !== state.mes){ \r\n          state.mes=nextProps.mes;\r\n        }\r\n        if (nextProps.numero !== state.numero){ \r\n          state.numero=nextProps.numero;\r\n        }\r\n        if (nextProps.redesocial !== state.redesocial){ \r\n          state.redesocial=nextProps.redesocial;\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n  \r\n    // handleChange(event) {\r\n    //   this.setState({value: event.target.value});\r\n    // }\r\n  \r\n    handleSubmit(event) { \r\n        //navigator.geolocation.getCurrentPosition(function(position) {\r\n        if(this.state.location[0]===-8.0671132 && this.state.location[1]===-34.8766719){\r\n          alert(\"Localização do celular está desativada, ative, recarregue a página e tente novamente com a localização ativa, se mesmo assim não conseguir insira o endereço completo e clique enviar endereço\");\r\n          event.preventDefault();\r\n          return;\r\n        }\r\n        this.setState({isLoading: true});\r\n            (async function main(self) {\r\n                await doc.useServiceAccountAuth({\r\n                    client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n                    private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n                });\r\n        \r\n                await doc.loadInfo(); // Loads document properties and worksheets\r\n                \r\n                let regiao;\r\n                if(envVariables.dentroLimites(self.state.location)){\r\n                  regiao=0;\r\n                }\r\n                else{\r\n                  alert(\"Região não suportada\");\r\n                  return;\r\n                }\r\n                const sheet = doc.sheetsByIndex[regiao];\r\n                // const rows = await sheet.getRows();\r\n                // Total row count\r\n\r\n                // const row = { \r\n                //   Roaster: self.state.alimento, \r\n                //   URL:self.state.numero, \r\n                //   City: \"\", \r\n                //   Coordinates:JSON.stringify([self.props.location[0], self.props.location[1]]), \r\n                //   DateISO: new Date().toISOString(), \r\n                //   Telefone: self.props.telefone, \r\n                //   DiaSemana:self.props.diaSemana,\r\n                //   Horario:self.props.horario,\r\n                //   AlimentoEntregue:0,\r\n                // };\r\n\r\n                let dadosRow = {};\r\n                dadosRow.alimento = self.state.alimento;\r\n                dadosRow.numero = self.state.numero;\r\n                dadosRow.endereco = \"\";\r\n                dadosRow.coords = self.state.location;\r\n                dadosRow.telefone = self.state.telefone;\r\n                dadosRow.diaSemana = self.state.diaSemana;\r\n                dadosRow.horario = self.state.horario;\r\n                dadosRow.mes = self.state.mes;\r\n                dadosRow.redesocial = self.state.redesocial;\r\n\r\n              const row = envVariables.criarRow(dadosRow);\r\n\r\n                \r\n            // {\r\n            //   Dados: JSON.stringify(\r\n            //     { \r\n            //       \"Roaster\": self.state.alimento, \r\n            //       \"URL\":self.state.numero, \r\n            //       \"City\": \"\", \r\n            //       \"Coordinates\":JSON.stringify([self.props.location[0], self.props.location[1]]), \r\n            //       \"DateISO\": new Date().toISOString(), \r\n            //       \"Telefone\": self.props.telefone, \r\n            //       \"DiaSemana\":self.props.diaSemana,\r\n            //       \"Horario\":self.props.horario,\r\n            //       \"AlimentoEntregue\":0,\r\n            //       \"RedeSocial\":self.state.redesocial.replace('@',''),\r\n            //       \"Avaliacao\": {\r\n            //         \"1\":0,\r\n            //         \"2\":0,\r\n            //         \"3\":0,\r\n            //         \"4\":0,\r\n            //         \"5\":0\r\n            //       },\r\n            //     }\r\n\r\n            //   )\r\n            // };\r\n                \r\n                const result = await sheet.addRow(row);\r\n                //console.log(result);\r\n                window.location.reload();\r\n            })(this);\r\n        //});\r\n      event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n          this.state.isLoading ?\r\n          <div><CircularProgress /></div>\r\n          : \r\n            <button className=\"SubmitButton buttonsSidebySide\" onClick={this.handleSubmit}>\r\n              marcar Localização Atual\r\n            </button>\r\n        \r\n      );\r\n    }\r\n  }\r\nexport default NameForm; ","import React, { Component } from 'react';\r\n\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass Sugestoes extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '',\r\n        isLoading:false\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n  \r\n    handleChange(event) {\r\n      if(event.target.value.length > 1000) return;\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      //alert('Um endereço foi enviado: ' + this.state.value);\r\n      if(this.state.value === '') {event.preventDefault();return;}\r\n      \r\n      this.setState({isLoading: true});\r\n      \r\n      (async function main(self) {\r\n        try{\r\n          await doc.useServiceAccountAuth({\r\n              client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n              private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n          });\r\n\r\n          await doc.loadInfo(); // Loads document properties and worksheets\r\n\r\n          const sheet = doc.sheetsByIndex[2];\r\n          //row = { Name: \"new name\", Value: \"new value\" };\r\n          \r\n          const row = { Sugestao: self.state.value, DateISO: new Date().toISOString()};\r\n          \r\n          await sheet.addRow(row);\r\n        \r\n          self.setState({isLoading: false});\r\n          alert(\"sugestão enviada com sucesso\");\r\n        }catch(e){\r\n          alert(\"Erro, tente novamente\");\r\n        }\r\n        \r\n      })(this);\r\n      event.preventDefault();\r\n    }\r\n\r\n    \r\n  \r\n    render() {\r\n      return (\r\n        this.state.isLoading ?\r\n        <div><CircularProgress /></div>\r\n        :\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <textarea className=\"TextField\" type=\"text\" placeholder='Insira sua sugestão, depoimento e contato em caso de dúvida' value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input className=\"SubmitButton\" type=\"submit\" value=\"Enviar sugestão\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\nexport default Sugestoes; ","export default __webpack_public_path__ + \"static/media/qr.20154bbf.svg\";","\r\nimport React, { Component } from 'react';\r\n\r\nimport TimeAgo from 'javascript-time-ago';\r\n\r\nimport pt from 'javascript-time-ago/locale/pt.json';\r\nTimeAgo.addDefaultLocale(pt);\r\n\r\nconst timeAgo = new TimeAgo();\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass CleanOld extends Component {\r\n\r\n    componentDidMount() {\r\n        \r\n        (async function main() {\r\n            // Use service account creds\r\n            await doc.useServiceAccountAuth({\r\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n            });\r\n    \r\n            await doc.loadInfo(); // Loads document properties and worksheets\r\n    \r\n            const sheet = doc.sheetsByIndex[0];\r\n            const rows = await sheet.getRows();\r\n            rows.forEach((x) => { \r\n                let dateMarked;\r\n                if(x.DateISO) dateMarked = timeAgo.format(Date.now() - (Date.now() - new Date(x.DateISO).getTime()) );\r\n                \r\n                //filtrar datas antigas\r\n                if(\r\n                    dateMarked.includes(\"semana\") \r\n                    || dateMarked.includes(\"mes\") \r\n                //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\r\n                ) { x.delete(); } });\r\n\r\n        })();\r\n    }\r\n    render(){\r\n        return <div></div>;\r\n    }\r\n}\r\n\r\nexport default CleanOld;","export default __webpack_public_path__ + \"static/media/insta.20ffff3e.svg\";","import React, { Component } from 'react';\nimport './App.css';\nimport { OpenStreetMapProvider } from 'leaflet-geosearch';\nimport Header from './components/header';\n\nimport InserirEndereco from './components/googlesheets/endereco';\nimport MyLocationButton from './components/googlesheets/mylocation';\nimport Sugestao from './components/googlesheets/sugestao';\n\nimport CoffeeMap from './components/map.js';\n// import CoffeeTable from './components/table';\nimport ReactGA from 'react-ga';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Checkbox } from '@mui/material';\n\nimport envVariables from './components/variaveisAmbiente';\n\nimport qr from './images/qr.svg';\n\n// Material-UI\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nimport CleanOld from './components/googlesheets/cleanold';\n\n\nimport coffeeBean from './images/bean.svg';\nimport hub from './images/hub.svg';\nimport green from './images/green.svg';\nimport red from './images/red.svg';\nimport insta from './images/insta.svg';\n\nimport AesEncryption from \"aes-encryption\";\n\nimport Cookies from 'universal-cookie';\n \nconst cookies = new Cookies();\nconst EXPIRE_DAY = 7;\n\nconst aes = new AesEncryption();\n\n// Google Analytics\nfunction initializeReactGA() {\n  ReactGA.initialize('UA-172868315-1');\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\ninitializeReactGA();\n\naes.setSecretKey(process.env.REACT_APP_CRYPTSEED+\"F\");\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\n\n// Google Sheets Document ID -- PROD\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\n\n// Google Sheets Document ID -- DEV\n// const doc = new GoogleSpreadsheet('1jQI6PstbEArW_3xDnGgPJR6_37r_KjLoa765bOgMBhk');\n\n// Provider for leaflet-geosearch plugin\nconst provider = new OpenStreetMapProvider();\n//limit osm https://operations.osmfoundation.org/policies/nominatim/\n\n\n\n\nclass App extends Component {\n\n  // Initial state\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      dataMaps: [],\n      dataHeader: [{ label: \"Índice\" }, { label: \"Lugar\" }],\n      rowCount: '',\n      center:[-8.0671132,-34.8766719],\n      alimento:'Alimento pronto',\n      telefone:'',\n      telefoneEncryptado:'',\n      diaSemana:'',\n      horario:'',\n      mes:'',\n      filtro:\"Todos\",\n      lastMarkedCoords:[],\n      numero:'',\n      telefoneFilterLocal:false,\n      site:'',\n      redesocial:'',\n\n    }\n\n    this.dropDownMenuSemanaEntregaAlimentoPronto = React.createRef();\n    this.dropDownMenuHorarioEntregaAlimentoPronto = React.createRef();\n    this.dropDownMenuSemanaPrecisandoBuscar = React.createRef();\n    this.dropDownMenuHorarioPrecisandoBuscar = React.createRef();\n    this.dropDownMenuFiltro = React.createRef();\n    this.redesocialRef = React.createRef();\n    this.dropDownMenuRedeSocial = React.createRef();\n    this.dropDownMenuMesPrecisandoBuscar = React.createRef();\n    this.dropDownMenuMesEntregaAlimentoPronto = React.createRef();\n  \n    \n    this.handleChangeNumero = this.handleChangeNumero.bind(this);\n\n    this.setTipoAlimento = this.setTipoAlimento.bind(this);\n    this.handleChangeTelefone = this.handleChangeTelefone.bind(this);\n    this.setDiaSemana = this.setDiaSemana.bind(this);\n    this.setHorario = this.setHorario.bind(this);\n    this.setMes = this.setMes.bind(this);\n    this.setFiltro = this.setFiltro.bind(this);\n    this.removerPonto = this.removerPonto.bind(this);\n    this.handleClickMap = this.handleClickMap.bind(this);\n    this.telefoneFilterChange = this.telefoneFilterChange.bind(this);\n    this.handleChangeRedeSocial = this.handleChangeRedeSocial.bind(this);\n  }\n\n  telefoneFilterChange(event){\n    envVariables.telefoneFilter = !envVariables.telefoneFilter;\n    this.setState({\n      telefoneFilterLocal: envVariables.telefoneFilter\n    });\n  }\n\n  removerPonto(coords, categoriaPonto){\n    console.log(\"remover \"+coords);\n    let motivo = prompt(\"por qual motivo (em resumo) gostaria de deletar esse ponto?\");\n    if(motivo !== null){\n      (async function main(self) {\n        try{\n          await doc.useServiceAccountAuth({\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n            });\n\n            await doc.loadInfo(); // Loads document properties and worksheets\n\n            const sheet = doc.sheetsByIndex[4];\n            //row = { Name: \"new name\", Value: \"new value\" };\n            \n            const row = { Motivo: motivo, Ponto: JSON.stringify(coords), DateISO: new Date().toISOString(), CategoriaPonto:categoriaPonto};\n            \n            let r = await sheet.addRow(row);\n            console.log(r);\n          \n            alert(\"pedido de deletar enviado com sucesso\");\n        }catch(e){\n          alert(\"ERRO, tente novamente\");\n          //console.log(e);\n\n        }\n        \n      })(motivo, coords);\n    }\n  }\n\n  verificarPonto(coords, categoriaPonto){\n    let motivo = prompt(\"Insira o CNPJ da entidade, nome da entidade, nome do responsável, email, telefone e se é credenciada para receber recurso do governo\");\n    if(motivo !== null){\n      (async function main(self) {\n        try{\n          await doc.useServiceAccountAuth({\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n            });\n\n            await doc.loadInfo(); // Loads document properties and worksheets\n\n            const sheet = doc.sheetsByIndex[3];\n            //row = { Name: \"new name\", Value: \"new value\" };\n            \n            const row = { Motivo: motivo, Ponto: JSON.stringify(coords), DateISO: new Date().toISOString(), CategoriaPonto:categoriaPonto};\n            \n            let r = await sheet.addRow(row);\n            console.log(r);\n          \n            alert(\"pedido de cnpj enviado com sucesso\");\n        }catch(e){\n          alert(\"ERRO, tente novamente\");\n          console.log(e);\n\n        }\n        \n      })(motivo, coords);\n    }\n  }\n\n  entregarAlimento(coords){\n    (async function main(self) {\n      try{\n        await doc.useServiceAccountAuth({\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n\n          await doc.loadInfo(); // Loads document properties and worksheets\n\n          const sheet = doc.sheetsByIndex[0];\n          //row = { Name: \"new name\", Value: \"new value\" };\n          \n          const rows = await sheet.getRows();\n          coords = JSON.stringify(coords);\n          let rowEncontrada = rows.filter((x) => { \n            //x.Coordinates\n            //console.log(JSON.parse(x.Dados).Coordinates);\n            return JSON.parse(x.Dados).Coordinates === coords; });\n          \n          //console.log(rowEncontrada[0].City);\n          let dadosNovos = JSON.parse(rowEncontrada[0].Dados);\n          dadosNovos.AlimentoEntregue++;\n          rowEncontrada[0].Dados = JSON.stringify(dadosNovos);\n          await rowEncontrada[0].save();\n          \n          window.location.reload();\n      }catch(e){\n        //console.log(e);\n\n      }\n      \n    })(coords);\n  }\n\n  avaliar(coords, avaliacao){\n    \n    (async function main(coords, avaliacao) {\n      try{\n        await doc.useServiceAccountAuth({\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n\n          await doc.loadInfo(); // Loads document properties and worksheets\n\n          const sheet = doc.sheetsByIndex[0];\n          //row = { Name: \"new name\", Value: \"new value\" };\n          \n          const rows = await sheet.getRows();\n          coords = JSON.stringify(coords);\n          let rowEncontrada = rows.filter((x) => { \n            //x.Coordinates\n            //console.log(JSON.parse(x.Dados).Coordinates);\n            return JSON.parse(x.Dados).Coordinates === coords; });\n          console.log(rowEncontrada);\n          \n          //console.log(rowEncontrada[0].City);\n          let dadosNovos = JSON.parse(rowEncontrada[0].Dados);\n          if(dadosNovos.Avaliacao == undefined){\n            dadosNovos.Avaliacao = {\n              \"1\":0,\n              \"2\":0,\n              \"3\":0,\n              \"4\":0,\n              \"5\":0\n            }\n          }\n          dadosNovos.Avaliacao[avaliacao]++;\n          rowEncontrada[0].Dados = JSON.stringify(dadosNovos);\n          await rowEncontrada[0].save();\n\n          \n          let cookieName='pontosAvaliados';\n          let pontos = cookies.get(cookieName) || \"\";\n          coords = JSON.parse(coords);\n          let coordsString = coords[0]+\"\"+coords[1];\n          //let pontosEntregues = JSON.parse(pontosEntreguesData);\n          if(pontos.includes(coordsString)) return;\n          pontos+=coordsString;\n\n          const cookieExpireDate = new Date();\n          cookieExpireDate.setDate(cookieExpireDate.getDate() + EXPIRE_DAY);\n\n          cookies.set(cookieName, pontos, { path: '/', expires: cookieExpireDate });\n          \n          window.location.reload();\n      }catch(e){\n        //console.log(e);\n\n      }\n      \n    })(coords, avaliacao);\n  }\n\n  setFiltro(event){\n    this.setState({\n      filtro: event.target.value\n    });\n  }\n  setTipoAlimento(event){\n    this.setState({\n      alimento: event.target.value\n    });\n    \n    let isPrecisandoBuscar = event.target.value === 'PrecisandoBuscar',\n    isEntregaAlimentoPronto = event.target.value === 'EntregaAlimentoPronto',\n    isDoador = event.target.value === 'Doador';\n\n    this.dropDownMenuSemanaPrecisandoBuscar.current.style.display=\"none\";\n    this.dropDownMenuHorarioPrecisandoBuscar.current.style.display=\"none\";\n    this.dropDownMenuMesPrecisandoBuscar.current.style.display=\"none\";\n    this.dropDownMenuSemanaEntregaAlimentoPronto.current.style.display=\"none\";\n    this.dropDownMenuHorarioEntregaAlimentoPronto.current.style.display=\"none\";\n    this.dropDownMenuMesEntregaAlimentoPronto.current.style.display=\"none\";\n\n    if( isPrecisandoBuscar ){\n      this.dropDownMenuSemanaPrecisandoBuscar.current.style.display=\"\";\n      this.dropDownMenuHorarioPrecisandoBuscar.current.style.display=\"\";\n      this.dropDownMenuMesPrecisandoBuscar.current.style.display=\"\";\n      this.setState({\n        diaSemana: this.dropDownMenuSemanaPrecisandoBuscar.current.value,\n        horario: this.dropDownMenuHorarioPrecisandoBuscar.current.value,\n        mes: this.dropDownMenuMesPrecisandoBuscar.current.value\n      });\n\n    }else    \n    if( isEntregaAlimentoPronto ){\n      this.dropDownMenuSemanaEntregaAlimentoPronto.current.style.display=\"\";\n      this.dropDownMenuHorarioEntregaAlimentoPronto.current.style.display=\"\";\n      this.dropDownMenuMesEntregaAlimentoPronto.current.style.display=\"\";\n      \n      this.setState({\n        diaSemana: this.dropDownMenuSemanaEntregaAlimentoPronto.current.value,\n        horario: this.dropDownMenuHorarioEntregaAlimentoPronto.current.value,\n        mes: this.dropDownMenuMesEntregaAlimentoPronto.current.value\n      });\n\n    }\n    else {\n      this.setState({\n        diaSemana: '',\n        horario: '',\n        mes: ''\n      });\n\n    }\n\n    if(isPrecisandoBuscar || isEntregaAlimentoPronto || isDoador){\n      this.redesocialRef.current.style.display=\"\";\n      this.dropDownMenuRedeSocial.current.style.display=\"\";\n    }else{\n      this.redesocialRef.current.style.display=\"none\";\n      this.dropDownMenuRedeSocial.current.style.display=\"none\";\n    }\n\n  }\n\n  setDiaSemana(event){\n    this.setState({\n      diaSemana: event.target.selectedOptions[0].value\n    });\n    // console.log(this.dropDownMenuSemana.current.value);\n    // console.log(event.target.selectedOptions[0].value);\n    // console.log(this.state.diaSemana);\n  }\n\n  \n  setHorario(event){\n    this.setState({\n      horario: event.target.selectedOptions[0].value\n    });\n    // console.log(this.dropDownMenuSemana.current.value);\n    // console.log(event.target.selectedOptions[0].value);\n    // console.log(this.state.diaSemana);\n  }\n\n  setMes(event){\n    this.setState({\n      mes: event.target.selectedOptions[0].value\n    });\n    // console.log(this.dropDownMenuSemana.current.value);\n    // console.log(event.target.selectedOptions[0].value);\n    // console.log(this.state.diaSemana);\n  }\n\n  handleChangeTelefone(event) {\n    if(event.target.value.length>15) return;\n    let telefoneValue = event.target.value.replace(/[^0-9]/g,'');\n    if(telefoneValue.length >= 8){\n      this.setState({telefoneEncryptado: aes.encrypt(telefoneValue)});\n    }\n    this.setState({telefone: telefoneValue});\n  }\n\n  handleChangeRedeSocial(event){\n    let site = event.target.value;\n    if(site.length>30) return;\n    this.setState({site: site, redesocial:this.dropDownMenuRedeSocial.current.value+site});\n\n  }\n  \n    \n  handleChangeNumero(event) {\n    if(event.target.value.length > 10) return;\n    let numero = event.target.value.replace(/[^0-9]/g,'');\n    this.setState({numero: numero});\n  }\n\n  handleClickMap(){\n    // this.setState({lastMarkedCoords: coords});\n    if(envVariables.lastMarked === undefined) return;\n    this.setState({isLoading: true});\n    (async function main(self) {\n      await doc.useServiceAccountAuth({\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n      });\n\n      await doc.loadInfo(); // Loads document properties and worksheets\n      let {lat, lng} = envVariables.lastMarked.getLatLng();\n      envVariables.lastMarked.latlng = [lat,lng];\n      let regiao;\n      if(envVariables.dentroLimites(envVariables.lastMarked.latlng)){\n        regiao=0;\n      }\n      else{\n        alert(\"Região não suportada\");\n        return;\n      }\n      const sheet = doc.sheetsByIndex[regiao];\n      // const rows = await sheet.getRows();\n      // Total row count\n\n      // if(this.state.numero !== ''){\n      //   this.state.numero = \", nº\"+this.state.numero;\n      // }\n      \n      // const row = { \n      //   Roaster: self.state.alimento, \n      //   URL:self.state.numero, \n      //   City: \"\", \n      //   Coordinates:JSON.stringify([self.props.location[0], self.props.location[1]]), \n      //   DateISO: new Date().toISOString(), \n      //   Telefone: self.props.telefone, \n      //   DiaSemana:self.props.diaSemana,\n      //   Horario:self.props.horario,\n      //   AlimentoEntregue:0,\n      // };\n\n      let dadosRow = {};\n      dadosRow.alimento = self.state.alimento;\n      dadosRow.numero = \"\";\n      dadosRow.endereco = \"\";\n      dadosRow.coords = envVariables.lastMarked.latlng;\n      dadosRow.telefone = self.state.telefoneEncryptado;\n      dadosRow.diaSemana = self.state.diaSemana;\n      dadosRow.horario = self.state.horario;\n      dadosRow.mes = self.state.mes;\n      dadosRow.redesocial = self.state.redesocial;\n\n      let row = envVariables.criarRow(dadosRow);\n      // if(self.state.numero !== ''){\n      //   self.state.numero = \", nº\"+self.state.numero;\n      // }\n      // let dadosJSON = {\n      //   \"Roaster\": self.state.alimento, \n      //   \"Coordinates\":JSON.stringify(envVariables.lastMarked.latlng), \n      //   \"DateISO\": new Date().toISOString(), \n      //   \"Telefone\": self.state.telefoneEncryptado, \n      //   \"AlimentoEntregue\":0,\n      //   \"URL\":self.state.numero\n      // };\n\n      // if(self.state.alimento==='EntregaAlimentoPronto' || self.state.alimento==='PrecisandoBuscar')\n      // {\n      //   dadosJSON.DiaSemana=self.state.diaSemana;\n      //   dadosJSON.Horario=self.state.horario;\n        \n      // }\n      // row = { Dados: JSON.stringify(dadosJSON) };\n      \n      const result = await sheet.addRow(row);\n      // console.log(result);\n      window.location.reload();\n  })(this);\n  }\n\n  componentDidMount() {\n\n    // Google Sheets API\n    // Based on https://github.com/theoephraim/node-google-spreadsheet\n\n    var self = this;\n\n    //current location    \n    navigator.geolocation.getCurrentPosition(function(position) {\n      envVariables.currentLocation = [position.coords.latitude, position.coords.longitude];\n      self.setState({center: [position.coords.latitude, position.coords.longitude]}) \n    });\n\n    (async function main(self) {\n      // Use service account creds\n      await doc.useServiceAccountAuth({\n        client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n        private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n      });\n\n      await doc.loadInfo(); // Loads document properties and worksheets\n      \n      /*https://www.keene.edu/campus/maps/tool/\n        long, lat\n        x, y\n        -52.2070313, 2.20\n        -52.4267578, -13.9234039\n        -34.3212891, -14.0939572\n        -34.3212891, 1.6696855\n0: -8.0256189\n1: -34.9175702\n        -55.4589844, -32.6578757\n        -55.5468750, -14.1791861\n        -38.1445313, -14.1791861\n        -38.0566406, -32.8426736\n      */\n     //limitar regiao\n      let regiao;\n      if(envVariables.dentroLimites(self.state.center)){\n        regiao=0;\n      }     \n      else{\n        alert(\"Região ainda não suportada\");\n        return;\n      }\n      const sheet = doc.sheetsByIndex[regiao];\n      const rows = await sheet.getRows();\n      // Total row count\n      self.setState({ rowCount: rows.length });\n      \n      // rows.filter( (x) => { return !x.Data}).map( (x) => {\n      //   x.Dados = JSON.stringify(\n      //     { \n      //       \"Roaster\": x.Roaster, \n      //       \"URL\": x.URL, \n      //       \"City\": x.City, \n      //       \"Coordinates\": x.Coordinates, \n      //       \"DateISO\": x.DateISO, \n      //       \"Telefone\": x.Telefone, \n      //       \"DiaSemana\": x.DiaSemana,\n      //       \"Horario\": x.Horario,\n      //       \"AlimentoEntregue\": x.AlimentoEntregue\n      //     }\n      //   );\n      //   (async function main(x){\n          \n      //   await x.save();\n      //   })(x);\n\n      // })\n      rows.forEach((x) => {\n        let dados = JSON.parse(x.Dados);\n        for(let key in dados){\n          x[key] = dados[key];\n        }\n        // x.Roaster = dados.Roaster;\n        // x.URL = dados.URL;\n        // x.City = dados.City;\n        // x.DateISO = dados.DateISO;\n        // x.DiaSemana = dados.DiaSemana;\n        // x.Horario = dados.Horario;\n        // x.Mes = dados.Mes;\n        // x.AlimentoEntregue = dados.AlimentoEntregue;\n        // x.RedeSocial = dados.RedeSocial;\n        // x.Avaliacao = dados.Avaliacao;\n        \n        if (dados.Coordinates) { x.mapCoords = JSON.parse(x.Coordinates); \n          if(dados.Telefone) {\n            try{\n              x.Telefone = aes.decrypt(x.Telefone);\n            }catch(e){\n              //problema ao decriptar, string nao esta no formato hex\n            }\n          } \n        }\n       \n      });\n      self.setState({ dataMaps: rows });\n\n      // var needsUpdates = rows.filter((x) => { x = JSON.parse(x); return !x.Coordinates; });\n      // if(needsUpdates.length === 0) console.log(\"nao precisa atualizar\");\n      // if (needsUpdates && needsUpdates.length > 0) {\n      //     for (let index in needsUpdates) {\n      //       // if(needsUpdates[index]._rawData.length===0) needsUpdates[index].delete(); //se deixar rows vazias na planilha\n      //         let city = needsUpdates[index].City;\n      //         setTimeout(() => \n      //             {\n      //                 (async function main() {\n      //                     try{\n      //                         let providerResult = await provider.search({ query: city.replace('-',\",\") + ', Brazil' });\n                      \n      //                         if(providerResult.length !== 0 ){\n      //                             // throw new Error(\"endereco-nao-encontrado\");\n                      \n      //                             console.log(providerResult);\n      //                             let latlon = [providerResult[0].y, providerResult[0].x];\n      //                             needsUpdates[index].Coordinates = JSON.stringify(latlon); // Convert obj to string\n      //                             //needsUpdates[index].mapCoords = latlon;\n      //                             await needsUpdates[index].save(); // Save to remote Google Sheet\n      //                         }\n      //                     }catch(e){\n      //                         console.log(\"ERRO\");\n      //                         console.log(e);\n      //                     }\n      //                 })();\n                  \n      //             },1300                        \n      //         );\n              \n      //     }\n      //   self.setState({ dataMaps: rows });\n      // }\n\n      // Loading message \n      self.setState({ isLoading: false })\n\n    })(self);\n\n    window.fixarPonto = function (endereco, coords){\n      (async function main(endereco, coords) {\n        try{\n          await doc.useServiceAccountAuth({\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n      \n          await doc.loadInfo(); // Loads document properties and worksheets\n      \n          const sheet = doc.sheetsByIndex[0];\n          \n          const rows = await sheet.getRows();\n\n          let rowEncontrada = rows.filter( (x) => \n          {\n            return JSON.parse(x.Dados).City.includes(endereco);\n          }\n          );\n\n          rowEncontrada.forEach( (x) => \n          {\n            let dadosNovos = JSON.parse(x.Dados);\n            dadosNovos.Coordinates = JSON.stringify(coords);\n            x.Dados = JSON.stringify(dadosNovos);\n          });\n\n          for(let x of rowEncontrada) await x.save();\n\n        }catch(e){\n          \n        }\n        \n      })(endereco, coords);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header rowCountProp={this.state.rowCount} />\n        {/* <InserirEndereco/>\n        <MyLocationButton location={this.state.center}/> */}\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={8}>\n            <Paper id=\"CoffeeMap\" className=\"fadeIn\">\n              {this.state.isLoading\n                ? <div className=\"flexLoading\"><div className=\"loading\">Carregando...</div></div>\n                : <CoffeeMap \n                dataMapsProp={this.state.dataMaps} \n                location={this.state.center} \n                tileMapOption={this.state.tileMapOption} \n                removerPonto={this.removerPonto} \n                verificarPonto={this.verificarPonto} \n                entregarAlimento={this.entregarAlimento}\n                avaliar={this.avaliar}\n                filtro={this.state.filtro}\n                />\n              }\n            </Paper>\n          </Grid>\n          \n          <Grid item xs={12} sm={4}>\n          {/* https://smartdevpreneur.com/setting-material-ui-grid-item-height/ */}\n            <Paper id=\"CoffeeTable\" style={{height:'100%'}} className=\"toolPanel2\">\n              {this.state.isLoading\n                ? <div className=\"flexLoading\"><div className=\"loading\"><CircularProgress /></div></div>\n                // : <CoffeeTable dataMapsProp={this.state.dataMaps} dataHeaderProp={this.state.dataHeader} />\n              : \n              \n    <div className='relativePosition'>\n      ver  \n              <select ref= {this.dropDownMenuFiltro} id=\"filtro\" onChange={this.setFiltro}>\n                <option value=\"Todos\">Todos</option>\n                <option value=\"Doadores\">Doadores</option>\n                <option value=\"CestaBasica\">Cesta básica</option>\n                <option value=\"MoradorRua\">Situação de rua</option>\n                <option value=\"Refeição Pronta\">Refeição Pronta</option>\n                <option value=\"RedeSocial\">Rede Social</option>\n                <option value=\"Verificados\">possui CNPJ</option>\n                <option value=\"Nenhum\">Nenhum</option>\n              </select>\n              <Checkbox\n                checked={this.state.telefoneFilterLocal}\n                onChange={this.telefoneFilterChange}\n                inputProps={{ 'aria-label': 'controlled' }}\n              /> Telefone\n                {/* RADIO BUTTON */}\n        <div className='relativePosition'>\n          <ul>\n            \n          <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Teste\"\n                  checked={this.state.alimento === \"Teste\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span> Opção para testar a ferramenta </span>\n              </label>\n            </li>\n          <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Alimento pronto\"\n                  checked={this.state.alimento === \"Alimento pronto\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='yellowHub'> Pessoa precisando de Alimento pronto <img width=\"30px\" height=\"30px\" src={coffeeBean}></img></span>\n              </label>\n            </li>\n\n            <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Alimento de cesta básica\"\n                  checked={this.state.alimento === \"Alimento de cesta básica\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='yellowHub'> Preciso de Alimento de cesta básica <img width=\"30px\" height=\"30px\" src={coffeeBean}></img></span>\n              </label>\n            </li>\n                        \n            <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Doador\"\n                  checked={this.state.alimento === \"Doador\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='blueHub'> Recebo para doar <img width=\"30px\" height=\"30px\" src={hub}></img></span>\n              </label>\n            </li>\n\n            <li>\n            <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"EntregaAlimentoPronto\"\n                  checked={this.state.alimento === \"EntregaAlimentoPronto\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='redHub'> Entrego refeições em ponto fixo <img width=\"30px\" height=\"30px\" src={red}></img></span>\n              \n                <br></br>\n                <select ref= {this.dropDownMenuSemanaEntregaAlimentoPronto} style={{\"display\":\"none\"}} id=\"dia\" onChange={this.setDiaSemana}>\n                <option value=\"nas Segundas\">nas Segundas</option>\n                <option value=\"nas Terças\">nas Terças</option>\n                <option value=\"nas Quartas\">nas Quartas</option>\n                <option value=\"nas Quintas\">nas Quintas</option>\n                <option value=\"nas Sextas\">nas Sextas</option>\n                <option value=\"nos Sábados\">nos Sábados</option>\n                <option value=\"nos Domingos\">nos Domingos</option>\n                <option value=\"todo dia\">todo dia</option>\n              </select>\n              <select ref= {this.dropDownMenuHorarioEntregaAlimentoPronto} style={{\"display\":\"none\"}} id=\"horario\" onChange={this.setHorario}>\n                <option value=\"manhã 05:30\">manhã 05:30</option>\n                <option value=\"manhã 06:30\">manhã 06:30</option>\n                <option value=\"manhã 09:30\">manhã 09:30</option>\n                <option value=\"tarde 13:30\">tarde 13:30</option>\n                <option value=\"tarde 16:30\">tarde 16:30</option>\n                <option value=\"noite 18:30\">noite 18:30</option>\n                <option value=\"noite 19:30\">noite 19:30</option>\n              </select>\n\n              \n              <select ref= {this.dropDownMenuMesEntregaAlimentoPronto} style={{\"display\":\"none\"}} id=\"mes2\" onChange={this.setMes}>\n                <option value=\"x4 por mês\">x4 por mês</option>\n                <option value=\"x3 por mês\">x3 por mês</option>\n                <option value=\"x2 por mês\">x2 por mês</option>\n                <option value=\"x1 por mês\">x1 por mês</option>\n              </select>\n              </label>\n            </li>\n\n            <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"PrecisandoBuscar\"\n                  checked={this.state.alimento === \"PrecisandoBuscar\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='greenHub'> Tenho alimento perto de se perder <a target='_blank' rel=\"noreferrer\" href=\"https://www.camara.leg.br/noticias/670937-nova-lei-incentiva-empresas-a-doarem-alimentos-e-refeicoes-para-pessoas-vulneraveis/\">(lei)</a>  <img width=\"30px\" height=\"30px\" src={green}></img></span>\n              \n              <br></br>\n              <select ref= {this.dropDownMenuSemanaPrecisandoBuscar} style={{\"display\":\"none\"}} id=\"dia2\" onChange={this.setDiaSemana}>\n                <option value=\"Hoje\">Hoje</option>\n                <option value=\"nas Segundas\">nas Segundas</option>\n                <option value=\"nas Terças\">nas Terças</option>\n                <option value=\"nas Quartas\">nas Quartas</option>\n                <option value=\"nas Quintas\">nas Quintas</option>\n                <option value=\"nas Sextas\">nas Sextas</option>\n                <option value=\"nos Sábados\">nos Sábados</option>\n                <option value=\"nos Domingos\">nos Domingos</option>\n              </select>\n              <select ref= {this.dropDownMenuHorarioPrecisandoBuscar} style={{\"display\":\"none\"}} id=\"horario2\" onChange={this.setHorario}>\n                <option value=\"manhã 05:30\">manhã 05:30</option>\n                <option value=\"manhã 06:30\">manhã 06:30</option>\n                <option value=\"manhã 09:30\">manhã 09:30</option>\n                <option value=\"tarde 13:30\">tarde 13:30</option>\n                <option value=\"tarde 16:30\">tarde 16:30</option>\n                <option value=\"noite 18:30\">noite 18:30</option>\n                <option value=\"noite 19:30\">noite 19:30</option>\n              </select>\n              \n              <select ref= {this.dropDownMenuMesPrecisandoBuscar} style={{\"display\":\"none\"}} id=\"mes2\" onChange={this.setMes}>\n                <option value=\"x4 por mês\">x4 por mês</option>\n                <option value=\"x3 por mês\">x3 por mês</option>\n                <option value=\"x2 por mês\">x2 por mês</option>\n                <option value=\"x1 por mês\">x1 por mês</option>\n              </select>\n              </label>\n              \n            </li>\n\n          \n          </ul>\n    </div>\n        {/* FIM RADIO BUTTON */}\n            <div className='relativePosition'>\n                \n                <input className=\"TextField tfMarginUp\" type=\"text\" placeholder='Insira telefone se quiser' value={this.state.telefone} onChange={this.handleChangeTelefone} />\n                <input className='nLocal' type=\"text\" placeholder='nº' value={this.state.numero} onChange={this.handleChangeNumero} />\n                \n                <br/>\n                <select style={{\"display\":\"none\"}} ref= {this.dropDownMenuRedeSocial}>\n                  <option value=\"instagram.com/\">Insta</option>\n                  <option value=\"facebook.com/\">Face</option>\n                </select>\n                <input ref= {this.redesocialRef} style={{\"display\":\"none\"}} className=\"TextField\" type=\"text\" placeholder='@' value={this.state.site} onChange={this.handleChangeRedeSocial} />\n                \n                <br></br>\n                <div className='buttonsSidebySide'>\n                  <MyLocationButton\n                  location={this.state.center} \n                  alimento={this.state.alimento} \n                  telefone={this.state.telefoneEncryptado}\n                  diaSemana={this.state.diaSemana}\n                  horario={this.state.horario}\n                  numero={this.state.numero}\n                  redesocial={this.state.redesocial}\n                  mes={this.state.mes}\n                  /> \n\n                  {this.state.isLoading?\n                  <CircularProgress/>\n                  :<button className=\"SubmitButton buttonsSidebySide\" onClick={this.handleClickMap}>marcar Local Tocado</button>}\n                </div>\n                \n                <InserirEndereco \n                alimento={this.state.alimento} \n                telefone={this.state.telefoneEncryptado}\n                diaSemana={this.state.diaSemana}\n                horario={this.state.horario}\n                redesocial={this.state.redesocial}\n                mes={this.state.mes}\n                /> \n\n                {/* <input className=\"TextField\" type=\"text\" placeholder='Insira o site do projeto' value={this.state.site} onChange={this.handleChangeSite} />\n                <br></br> */}\n                \n\n               \n              </div>\n          </div>\n               \n              \n              }\n            </Paper>\n          </Grid>\n\n\n          <Grid item xs={12} sm={12}>\n            <Paper id=\"MoreInfo\" style={{height:'100%'}} >\n            <a target='_blank' rel=\"noreferrer\" href=\"https://instagram.com/mapafome\"><img style={{height:'25px'}}src={insta}/></a>\n            <a className=\"wpbtn\" title=\"share to whatsapp\" href=\"whatsapp://send?text=Para marcar no mapa e alimentar quem tem fome, achei esse site: www.mapafome.com.br\"> <img className=\"wp\" src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/>\n                Compartilhar no Whatsapp</a>\n                <a style={{float:'right'}} target='_blank' rel=\"noreferrer\" href=\"https://t.me/share?url=www.mapafome.com.br&amp;text=Para%20marcar%20no%20mapa%20e%20alimentar%20quem%20tem%20fome%2C%20achei%20esse%20site%3A\" className=\"tgme_widget_share_btn\"><img className=\"telegram\" src=\"https://telegram.org/img/WidgetButton_LogoSmall.png\" alt=\"\"></img></a>\n\n                <br></br>\n              Mapeados: {this.state.rowCount} \n              <br></br>No mapa clique na bolinha para saber como ajudar.<br></br> Você pode se incluir ou incluir outra pessoa, <br></br>selecione a situação e confirme o local (mais informações <a target='_blank' rel=\"noreferrer\" href=\"https://g1.globo.com/pe/pernambuco/noticia/2022/02/10/site-criado-por-estudante-da-ufpe-aproxima-pessoas-que-estao-passando-fome-e-doadores-de-comida.ghtml\">na matéria da Globo</a>):\n              \n              <br></br>\n              \n                {/* <img src={qr} alt=\"\"/> */}\n                {/* <CleanOld></CleanOld> */}\n                <img className=\"ods\" alt=\"\" src=\"https://brasil.un.org/profiles/undg_country/themes/custom/undg/images/SDGs/pt-br/SDG-2.svg\"></img> No Mapa da Fome você pode encontrar a quem ajudar e fazer novas marcações, caso uma opção represente você ou outra pessoa, selecione, coloque número para contato se quiser, e confirme com localização atual ou endereço e número\n                <br></br><span className=\"yellowHub\">  em amarelo são pessoas <img width=\"30px\" height=\"30px\" src={coffeeBean}></img></span>em vulnerabilidade social e insegurança alimentar que estão com fome em casa ou na rua, --precisam de alimento\n                <br></br><span className=\"blueHub\">  em azul são pessoas <img width=\"30px\" height=\"30px\" src={hub}></img></span>que recebem alimentos ou recursos para distribuir alimento ou refeições na comunidade (exemplo: sopão solidário, ongs, voluntários) --precisam de doações\n                <br></br><span className=\"redHub\">  em vermelho são pessoas <img width=\"30px\" height=\"30px\" src={red}></img></span>que entregam refeição em ponto fixo na rua em certo dia na semana. --ponto de entrega de alimento pronto\n                <br></br><span className=\"greenHub\">  em verde são pessoas <img width=\"30px\" height=\"30px\" src={green}></img></span>que trabalham com alimentos e precisam destinar os alimentos não comercializados ou não consumidos e não tem pessoas para buscar esses alimentos (exemplo: restaurante, hotel, lanchonete, feira livre, supermercados) --precisam de voluntários para buscar \n              \n                \n                <br></br><br></br>serve para \n\n<br></br>-mapear pessoas que estão com fome na rua ou em casa\n<br></br>-mapear iniciativas que recebem recursos para fazer doação\n<br></br>-mostrar no mapa onde e quando tem alimento sendo distribuído\n<br></br>-mostrar no mapa lugares comerciais ou residenciais que precisam de voluntários ou necessitados para buscar alimentos não consumidos ou não comercializados\n<br></br> é possível traçar uma rota ao destino ao clicar Ir para o destino, e ser redirecionado para o Google Maps\n<br></br>\ncontato: <a target='_blank' rel=\"noreferrer\" href=\"https://mail.google.com/mail/u/0/?fs=1&to=rslgp@cin.ufpe.br&tf=cm\" >rslgp@cin.ufpe.br</a> <a target='_blank' rel=\"noreferrer\"  href='https://wa.me/5583996157234'>(83) 9.9615-7234</a>           \n<Sugestao/>\n        \n        </Paper>\n          </Grid>\n\n        </Grid>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","export default __webpack_public_path__ + \"static/media/bean.8d52f968.svg\";"],"sourceRoot":""}