{"version":3,"sources":["images/hub.svg","images/green.svg","images/red.svg","components/map.js","images/currentLocation.svg","images/currentLocationSmall.svg","components/twemoji.js","components/header.js","components/tableCount.js","components/googlesheets/endereco.js","components/googlesheets/mylocation.js","components/googlesheets/sugestao.js","images/qr.svg","components/googlesheets/cleanold.js","images/insta.svg","App.js","index.js","components/variaveisAmbiente.js","images/bean.svg"],"names":["TimeAgo","addDefaultLocale","pt","timeAgo","global","lastMarked","undefined","lastMarkedCoords","SearchField","apiKey","provider","OpenStreetMapProvider","params","countrycodes","addressdetails","country","providerOptions","searchBounds","LatLng","region","searchControl","GeoSearchControl","marker","icon","CurrentLocation","draggable","autoClose","map","useMap","useEffect","addControl","removeControl","myIcon","L","Icon","iconUrl","coffeeBean","iconSize","Point","className","hubIcon","hub","greenIcon","green","redIcon","red","CurrentLocationSVG","interactive","CurrentLocationSmall","CurrentLocationSmallSVG","TestIcon","markerclusterOptionsPrecisando","cluster","childCount","getChildCount","c","DivIcon","html","markerclusterOptionsAnjos","markerclusterOptionsEntrega","CoffeeMap","props","state","dataMaps","center","location","filtro","screensizeZoom","window","innerWidth","style","height","width","zoom","maxZoom","this","attributionControl","whenReady","target","on","e","latlng","lat","lng","envVariables","remove","addTo","opacity","position","BaseLayer","checked","name","url","attribution","closeResultsOnClick","prefix","eventHandlers","click","preventDefault","renderSwitch","renderTestes","mapCoords","DateISO","Telefone","Avaliacao","googleDirection","dateMarked","format","Date","now","getTime","urlTelefone","legivelTelefone","replace","length","onClick","clicouTelefone","href","rel","AvaliacaoData","nota","totalClicks","Math","round","dadosPopup","precisandoMsg","contato","AlimentoEntregue","Roaster","RedeSocial","src","viewBox","focusable","d","value","onChange","event","newValue","avaliar","size","sx","verificado","verificarPonto","removerPonto","entregarAlimento","spiderfyDistanceMultiplier","showCoverageOnHover","maxClusterRadius","iconCreateFunction","dataMapsProp","filter","x","dataItem","k","City","URL","DiaSemana","Mes","Horario","CurrentIcon","setupVariables","telefoneFilter","contabilizarClicado","console","log","configPopup","removeOutsideVisibleBounds","redesocial","msec","mins","floor","param","renderDoadoresAzul","renderDoadoresVerde","renderNecessitados","renderCestaBasica","renderDoadoresVermelho","renderRedeSocial","renderVerificados","nextProps","Component","Twemoji","emoji","dangerouslySetInnerHTML","__html","twemoji","parse","folder","ext","memo","Header","rowCountProp","id","AppBar","Toolbar","Typography","variant","GoogleSpreadsheet","require","doc","process","NameForm","alimento","isLoading","telefone","diaSemana","horario","mes","handleChange","bind","handleSubmit","setState","self","a","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsByIndex","numero","alert","dadosRow","endereco","coords","row","criarRow","dadosJSON","JSON","Dados","search","query","providerResult","latlon","y","Coordinates","stringify","Error","addRow","reload","CircularProgress","onSubmit","type","placeholder","loadCells","getCell","saveUpdatedCells","dentroLimites","regiao","Sugestoes","Sugestao","toISOString","cookies","Cookies","aes","AesEncryption","ReactGA","initialize","pageview","pathname","setSecretKey","App","dataHeader","label","rowCount","telefoneEncryptado","telefoneFilterLocal","site","dropDownMenuSemanaEntregaAlimentoPronto","React","createRef","dropDownMenuHorarioEntregaAlimentoPronto","dropDownMenuSemanaPrecisandoBuscar","dropDownMenuHorarioPrecisandoBuscar","dropDownMenuFiltro","redesocialRef","dropDownMenuRedeSocial","dropDownMenuMesPrecisandoBuscar","dropDownMenuMesEntregaAlimentoPronto","handleChangeNumero","setTipoAlimento","handleChangeTelefone","setDiaSemana","setHorario","setMes","setFiltro","handleClickMap","telefoneFilterChange","handleChangeRedeSocial","categoriaPonto","motivo","prompt","Motivo","Ponto","CategoriaPonto","r","rows","getRows","rowEncontrada","dadosNovos","clicado","save","clickTel","avaliacao","cookieName","pontos","get","coordsString","includes","cookieExpireDate","setDate","getDate","set","path","expires","isPrecisandoBuscar","isEntregaAlimentoPronto","isDoador","current","display","selectedOptions","telefoneValue","encrypt","getLatLng","navigator","geolocation","getCurrentPosition","currentLocation","latitude","longitude","forEach","dados","key","decrypt","fixarPonto","distance","proximos","dado","distancia","distanceInKmBetweenEarthCoordinates","push","sort","b","stats","SortedPoints","i","tmp","Grid","container","spacing","item","xs","sm","Paper","tileMapOption","ref","Checkbox","inputProps","onBlur","title","alt","float","insta","frameborder","marginheight","marginwidth","ReactDOM","render","StrictMode","document","getElementById","localizacao","mapArea","teto","chao","paredeEsquerda","paredeDireita","lat1","lon1","lat2","lon2","dLat","PI","dLon","sin","cos","atan2","sqrt"],"mappings":"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","file":"static/js/main.64d379bf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hub.4f920e1b.svg\";","export default __webpack_public_path__ + \"static/media/green.00533c2a.svg\";","export default __webpack_public_path__ + \"static/media/red.651e6e29.svg\";","import React, { Component, useEffect } from 'react';\nimport { MapContainer, Marker, TileLayer, Tooltip, AttributionControl, Popup, LayersControl } from \"react-leaflet\";\nimport L, {LatLng} from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport \"react-leaflet-markercluster/dist/styles.min.css\";\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\nimport { useMap } from 'react-leaflet';\nimport coffeeBean from '../images/bean.svg';\nimport hub from '../images/hub.svg';\nimport green from '../images/green.svg';\nimport red from '../images/red.svg';\nimport CurrentLocationSVG from '../images/currentLocation.svg';\nimport CurrentLocationSmallSVG from '../images/currentLocationSmall.svg';\nimport TimeAgo from 'javascript-time-ago';\nimport Rating from '@mui/material/Rating';\n\nimport envVariables from './variaveisAmbiente';\n\nimport pt from 'javascript-time-ago/locale/pt.json';\nTimeAgo.addDefaultLocale(pt);\n\nconst timeAgo = new TimeAgo();\n\nglobal.lastMarked = undefined;\nglobal.lastMarkedCoords = undefined;\n\nconst SearchField = ({ apiKey }) => {\n    \n    const provider = new OpenStreetMapProvider(\n    {\n        params: {\n            'accept-language': 'br', // render results in br\n            countrycodes: 'br', // limit search results to the br\n            addressdetails: 1, // include additional address detail parts\n            country:'br',\n          },\n        providerOptions:{\n            searchBounds: [\n            new LatLng(0.275901, -59.178876),\n            new LatLng(-35.558031, -28.944502)\n            ],\n            region: \"br\"\n        }\n    });\n  \n    // @ts-ignore\n    const searchControl = new GeoSearchControl({\n      provider: provider,\n      marker: {\n        // optional: L.Marker    - default L.Icon.Default\n        icon: CurrentLocation,\n        draggable: false,\n      },\n      autoClose:true,\n    }\n      \n    );\n  \n    const map = useMap();\n    useEffect(() => {\n      map.addControl(searchControl);\n      return () => map.removeControl(searchControl);\n    }, []);\n  \n    return null;\n  };\n\n// Leaflet custom marker\nconst myIcon = new L.Icon({\n    // Coffee bean attribution -- Thanks! https://commons.wikimedia.org/wiki/File:Coffee_bean_symbol.svg\n    iconUrl: coffeeBean,\n    iconSize: new L.Point(20, 20),\n    className: 'leaflet-bean-icon',\n});\n\n\n// Leaflet custom marker\nconst hubIcon = new L.Icon({\n    iconUrl: hub,\n    iconSize: new L.Point(30, 30),\n    className: 'leaflet-bean-icon',\n});\n\n// Leaflet custom marker\nconst greenIcon = new L.Icon({\n    iconUrl: green,\n    iconSize: new L.Point(35, 35),\n    className: 'leaflet-bean-icon',\n});\nconst redIcon = new L.Icon({\n    iconUrl: red,\n    iconSize: new L.Point(35, 35),\n    className: 'leaflet-bean-icon',\n});\n\nconst CurrentLocation = new L.Icon({\n    iconUrl: CurrentLocationSVG,\n    iconSize: new L.Point(150, 150),\n    className: 'leaflet-bean-icon',\n    interactive: false\n});\nconst CurrentLocationSmall = new L.Icon({\n    iconUrl: CurrentLocationSmallSVG,\n    iconSize: new L.Point(20, 20),\n    className: 'leaflet-bean-icon',\n    interactive: false\n});\n\nconst TestIcon = new L.Icon({\n    iconUrl: 'https://maps.gstatic.com/tactile/reveal/close_1x_16dp.png',\n    iconSize: new L.Point(10, 10),\n    className: 'leaflet-bean-icon',\n    interactive: false\n});\n\n\nconst markerclusterOptionsPrecisando = function (cluster) {\n        var childCount = cluster.getChildCount();\n        var c = ' marker-cluster-';\n        if (childCount < 10) {\n          c += 'small';\n        } \n        else if (childCount < 100) {\n          c += 'medium';\n        } \n        else {\n          c += 'large';\n        }\n       \n        return new L.DivIcon({ html: '<div><span>' + childCount + '</span></div>', \n         className: 'marker-cluster' + c + '-precisandoCluster', iconSize: new L.Point(40, 40) });\n        };\n\n  const markerclusterOptionsAnjos = (cluster) => {\n    var childCount = cluster.getChildCount();\n    var c = ' marker-cluster-';\n    if (childCount < 10) {\n      c += 'small';\n    } \n    else if (childCount < 100) {\n      c += 'medium';\n    } \n    else {\n      c += 'large';\n    }\n   \n    return new L.DivIcon({ html: '<div><span>' + childCount + '</span></div>', \n     className: 'marker-cluster' + c +'-anjosCluster', iconSize: new L.Point(40, 40) });\n    };\n\n    const markerclusterOptionsEntrega = (cluster) => {       \n        return new L.DivIcon({ html: '<div><span>' + cluster.getChildCount() + '</span></div>', \n         className: 'redHub marker-cluster', iconSize: new L.Point(40, 40) });\n    };\n\n\nclass CoffeeMap extends Component {\n\n    // Initial state\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            dataMaps: [],\n            center: props.location,\n            filtro: props.filtro,\n        }\n    }\n\n     //ATUALIZAR PROPS VINDAS DO PAI\n     static getDerivedStateFromProps(nextProps, state) {\n        if(state){\n          if (nextProps.filtro !== state.filtro){ \n            state.filtro=nextProps.filtro;\n          }\n        }\n        return state;\n      }\n\n    render() {\n\n        // Render map default zoom based on mobile breakpoint\n        const isMobile = window.innerWidth < 480;\n        const screensizeZoom = isMobile ? 7.25 : 8.5*1.2;\n\n        return (\n            <div>\n                <MapContainer\n                    style={{ height: \"89vh\", width: \"100%\" }}\n                    zoom={screensizeZoom}\n                    maxZoom={18}\n                    center={this.state.center}\n                    attributionControl={false}\n                    whenReady={(map) => {\n                        //console.log(map);\n                        map.target.on(\"click\", function (e) {\n                          //if(e.originalEvent.detail>=2)alert(e.originalEvent.detail);\n                          const { lat, lng } = e.latlng;\n                          //envVariables.lastMarked.latlng = [lat,lng];\n                        //   console.log(this);\n                        //   this.props.onClickMap([lat,lng]);\n                          if(envVariables.lastMarked) envVariables.lastMarked.remove();\n                          envVariables.lastMarked = L.marker([lat, lng], {icon:CurrentLocationSmall, draggable: false}).addTo(map.target);\n                        });\n                      }}\n                    >\n\n{/* https://leaflet-extras.github.io/leaflet-providers/preview/ */}\n{/* https://github.com/dhis2-club-tanzania/function-maintenance/blob/0dadaa96955156b6ddefc0fcf9dd54e45ffb9458/src/app/shared/modules/ngx-dhis2-visualization/modules/map/constants/tile-layer.constant.ts */}\n{/* https://www.arcgis.com/apps/mapviewer/index.html */}\n                    {/* <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n                     {/* <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n                    {/* <TileLayer url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n\n                    \n                     {/* {this.state.tileMapOption ? \n                     <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                     attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                 />\n                    :\n                    <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />\n                } */}\n\n                     {/* <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n                    {/* <TileLayer url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />  */}\n                    {/* <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />  */}\n                    <LayersControl style={{opacity:'0.5'}} position=\"bottomleft\">\n                    \n                    {/* <LayersControl.BaseLayer checked name=\"Esri\">\n                    <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}\"\n                        attribution='Tiles &copy; Esri'\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"Stamen-lite\">\n                    <TileLayer url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}{r}.png\"\n                        attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"Stamen-terrain\">\n                    <TileLayer url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/terrain/{z}/{x}/{y}{r}.png\"\n                        attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"4\">\n                    <TileLayer url=\"https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"3\">\n                    <TileLayer url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"2\">\n                    <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"1\">\n                    <TileLayer url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer> */}\n                    <LayersControl.BaseLayer checked name=\"Waze\">\n                    <TileLayer url=\"https://worldtiles1.waze.com/tiles/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer  name=\"Mapa\">\n                    <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                     attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OSM</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n\n                    <LayersControl.BaseLayer name=\"Satelite\">\n                    <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='https://www.arcgis.com/apps/mapviewer/index.html' target='_blank' rel='noreferrer'>Esri</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n\n                    \n                    </LayersControl>\n\n                    <SearchField \n                        closeResultsOnClick={true}\n                        providerOptions={{\n                            searchBounds: [\n                            new LatLng(0.275901, -59.178876),\n                            new LatLng(-35.558031, -28.944502)\n                            ],\n                            region: \"br\"\n                        }}\n                    />\n\n                    <AttributionControl\n                        position=\"bottomleft\"\n                        prefix={false}\n                    />\n                    \n                    <Marker\n                            icon= {CurrentLocation} \n                            key={\"currentPosition\"}\n                            center={this.state.center}\n                            position={this.state.center}\n\n                            eventHandlers={{\n                                click: (e) => { \n                                    e.preventDefault();\n                                }\n                            }}\n\n                            interactive={false}\n                        >\n                            \n                    {/* <Popup\n                        direction=\"auto\"\n                        offset={[2, 0]}\n                        opacity={1}>\n                        <span>você está aqui</span>\n                    </Popup> */}\n                        </Marker>\n\n                        {/* {(() => {\n                            switch(this.state.filtro) {\n                                case \"Todos\":\n                                    return ([\n                                        this.renderDoadoresAzul(),\n                                        this.renderDoadoresVerde(),\n                                        this.renderNecessitados(),\n                                        this.renderDoadoresVermelho()]\n                                    )\n                                    break;\n                                case \"Necessitados\":\n                                    return ([\n                                        this.renderNecessitados()]\n                                    )\n                                    break;\n                                case \"Doadores\":\n                                    return ([\n                                        this.renderDoadoresAzul(),\n                                        this.renderDoadoresVerde(),\n                                        this.renderDoadoresVermelho()]\n                                    )\n                                    break;\n                                case \"Refeição Pronta\":\n                                    return ([\n                                        this.renderDoadoresVerde(),\n                                        this.renderDoadoresVermelho()]\n                                    )\n                                    break;\n                            }\n                        })()} */}\n                        {this.renderSwitch(this.state.filtro)}\n                        {this.renderTestes()}\n\n                    \n                </MapContainer>\n            </div>\n        );\n    }\n\n    \n    setupVariables(mapCoords,DateISO,Telefone,Avaliacao){\n        let googleDirection = `https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`;\n                            \n        let dateMarked = timeAgo.format(Date.now() - (Date.now() - new Date(DateISO).getTime()) );\n         //if(DateISO) dateMarked\n        if(Telefone){\n            let urlTelefone = `whatsapp://send?phone=55${Telefone}`;\n            let legivelTelefone = Telefone.replace(/(\\d{2})(\\d{5})(\\d{4})/g, \"($1) $2-$3\");\n            let contato=\"contato:\";\n            switch(Telefone.length){\n                case 0:\n                    Telefone=\"\";\n                    break;\n                case 8:\n                    Telefone=\"contato:\"+Telefone.replace(/(\\d{4})(\\d{4})/g, \"$1-$2\");\n                    Telefone=<span onClick={()=>this.props.clicouTelefone([mapCoords[0], mapCoords[1]])}>{Telefone}</span>\n                    break;\n                case 9:\n                    Telefone=\"contato:\"+Telefone.replace(/(\\d{5})(\\d{4})/g, \"$1-$2\");\n                    Telefone=<span onClick={()=>this.props.clicouTelefone([mapCoords[0], mapCoords[1]])}>{Telefone}</span>\n                    break;\n                default:\n                    Telefone=<span onClick={()=>this.props.clicouTelefone([mapCoords[0], mapCoords[1]])}>{contato}<a href={urlTelefone} target='_blank' rel='noreferrer'>{legivelTelefone}</a></span>;\n                    break;\n            }\n        }\n\n        let AvaliacaoData = {nota:0, totalClicks:0};\n        if(Avaliacao){\n            AvaliacaoData.totalClicks = (Avaliacao[\"5\"]+Avaliacao[\"4\"]+Avaliacao[\"3\"]+Avaliacao[\"2\"]+Avaliacao[\"1\"]);\n            if( AvaliacaoData.totalClicks === 0 ){\n                Avaliacao=\"Nenhuma\";\n            }else{\n                Avaliacao = (Avaliacao[\"5\"]*5 +\n                Avaliacao[\"4\"]*4 +\n                Avaliacao[\"3\"]*3 +\n                Avaliacao[\"2\"]*2 +\n                Avaliacao[\"1\"]*1)\n                /            \n                (AvaliacaoData.totalClicks);\n\n                Avaliacao = Math.round(Avaliacao * 100)/100;\n\n            }\n        }\n\n        AvaliacaoData.nota = Avaliacao;\n\n    \n        return {googleDirection, dateMarked, Telefone, AvaliacaoData};\n    }\n\n    configPopup(dadosPopup){\t\n        let {googleDirection, precisandoMsg, dateMarked, contato, \t\n            AlimentoEntregue, mapCoords, Roaster, Avaliacao, RedeSocial} = dadosPopup;\t\n        \n        if(Avaliacao===undefined) Avaliacao = {nota:\"Nenhuma\",totalClicks:0};\n        return <Popup>\n            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n            <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n            <br/>\n            <div style={{width:'80%'}}> {precisandoMsg} </div>\n            <br/>\n            {dateMarked} {contato} \n            {RedeSocial ? \n                <span><br></br><a href={\"https://\"+RedeSocial} target='_blank' rel='noreferrer'> RedeSocial</a></span>\n            : <span></span>\n            }\n            <br/>\n            (<svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" focusable=\"false\"><path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27z\"></path></svg>\n            {Avaliacao.nota})\n            ({Avaliacao.totalClicks} notas) \n            Avalie: \n            <br/>\n            <Rating\n                name=\"simple-controlled\"\n                value={Avaliacao.nota}\n                onChange={(event, newValue) => {\n                    this.props.avaliar([mapCoords[0], mapCoords[1]], newValue);\n                }}\n                size=\"large\"\n                sx={{\"font-size\":\"2.125rem\"}}\n            />\n            \n            <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n            { (Roaster === \"Doador\" || Roaster === \"EntregaAlimentoPronto\") ? (dadosPopup.verificado===1 ? <img src=\"https://static.xx.fbcdn.net/assets/?revision=1174640696642832&amp;name=ig-verifiedbadge-shared&amp;density=1\"></img> : <button onClick={()=>this.props.verificarPonto([mapCoords[0], mapCoords[1]], Roaster)}>cnpj</button>) : <span></span>}\n            <br/>\n            <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n            <span>    </span>\n            <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                    \n        </Popup>\n    }\n\n    renderRedeSocial(){\n        return <MarkerClusterGroup\n                    // grupo de onde pode ajudar\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                        iconCreateFunction={markerclusterOptionsAnjos}\n                    >                  \n                    {/* .filter(x => { return x.Coordinates; })       */}\n                        {this.props.dataMapsProp.filter(x => {\n                            return x.RedeSocial \n                        }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Mes, Horario, AlimentoEntregue, Avaliacao, RedeSocial} = dataItem;\n                            \n                            if(mapCoords === undefined) return; if(URL===undefined) URL = \"\"; \n                            if(RedeSocial===undefined) return (<div></div>);\n                            \n                            let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone, Avaliacao);\n                            \n                            //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                            if(envVariables.telefoneFilter && (contato===undefined || contato===\"\")) return (<div></div>);\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            switch(Roaster){\n                                case \"Doador\":\n                                    precisandoMsg = \"Recebendo alimento para distribuir\"+URL;\n                                    CurrentIcon = hubIcon;\n                                    break;                               \n                                \n                                case \"EntregaAlimentoPronto\":\n                                    precisandoMsg = `Entregando refeições prontas `+DiaSemana+\" pela \"+Horario+\" \"+Mes;\n                                    CurrentIcon = redIcon;\n                                    break;\n                                default:\n                                    return (<div></div>);\n                                    break;\n                            }\n                            \n                            let dadosPopup = {...dataItem};\n                            dadosPopup.precisandoMsg = precisandoMsg;\n                            dadosPopup.googleDirection = googleDirection;\n                            dadosPopup.dateMarked = dateMarked;\n                            dadosPopup.contato = contato;\n                            dadosPopup.Avaliacao = nota;\n\n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`);\n                                            this.props.contabilizarClicado([mapCoords[0], mapCoords[1]]);\n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                   {this.configPopup(dadosPopup)}\n                                    \n                                    {/* <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n                                        <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {contato} \n                                        <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n                                        <br/>\n                                        <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                        <span>    </span>\n                                        <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                \n                                    </Popup> */}\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n    }\n\n    renderVerificados(){\n        return <MarkerClusterGroup\n                    // grupo de onde pode ajudar\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                        iconCreateFunction={markerclusterOptionsAnjos}\n                    >                  \n                    {/* .filter(x => { return x.Coordinates; })       */}\n                        {this.props.dataMapsProp.filter(x => {return x.RedeSocial }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Mes, Horario, AlimentoEntregue, Avaliacao, RedeSocial} = dataItem;\n                            \n                            if(mapCoords === undefined) return; if(URL===undefined) URL = \"\"; if(RedeSocial===undefined) RedeSocial=\"\";\n                            \n                            let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone, Avaliacao);\n                            \n                            //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            if(dataItem.verificado !== 1) return (<div></div>);\n                            if(envVariables.telefoneFilter && (contato===undefined || contato===\"\")) return (<div></div>);\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            switch(Roaster){\n                                case \"Doador\":\n                                    precisandoMsg = \"Recebendo alimento para distribuir\"+URL;\n                                    CurrentIcon = hubIcon;\n                                    break;                               \n                                \n                                case \"EntregaAlimentoPronto\":\n                                    precisandoMsg = `Entregando refeições prontas `+DiaSemana+\" pela \"+Horario+\" \"+Mes;\n                                    CurrentIcon = redIcon;\n                                    break;\n                                default:\n                                    return (<div></div>);\n                                    break;\n                            }\n                            \n                            let dadosPopup = {...dataItem};\n                            dadosPopup.precisandoMsg = precisandoMsg;\n                            dadosPopup.googleDirection = googleDirection;\n                            dadosPopup.dateMarked = dateMarked;\n                            dadosPopup.contato = contato;\n                            dadosPopup.Avaliacao = nota;\n\n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`); \n                                            this.props.contabilizarClicado([mapCoords[0], mapCoords[1]]);\n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                   {this.configPopup(dadosPopup)}\n                                    \n                                    {/* <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n                                        <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {contato} \n                                        <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n                                        <br/>\n                                        <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                        <span>    </span>\n                                        <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                \n                                    </Popup> */}\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n    }\n\n    renderDoadoresAzul(){\n        return <MarkerClusterGroup\n                    // grupo de onde pode ajudar\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                        iconCreateFunction={markerclusterOptionsAnjos}\n                        \n                        removeOutsideVisibleBounds={false}\n                    >                  \n                    {/* .filter(x => { return x.Coordinates; })       */}\n                        {this.props.dataMapsProp.filter(x => {return x.Roaster===\"Doador\" }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Horario, AlimentoEntregue, Avaliacao, RedeSocial} = dataItem;\n                            \n                            if(mapCoords === undefined) return; if(URL===undefined) URL = \"\"; if(RedeSocial===undefined) RedeSocial=\"\";\n                            \n                            let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone, Avaliacao);\n                            \n                            //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                            if(envVariables.telefoneFilter && (contato===undefined || contato===\"\")) return (<div></div>);\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            // switch(Roaster){\n                            //     case \"Doador\":\n                                    precisandoMsg = \"Recebendo alimento para distribuir\"+URL;\n                                    CurrentIcon = hubIcon;\n                            //         break;                               \n                                \n                            //     default:\n                            //         return (<div></div>);\n                            //         break;\n                            // }\n\n                            let dadosPopup = {...dataItem};\n                            dadosPopup.precisandoMsg = precisandoMsg;\n                            dadosPopup.googleDirection = googleDirection;\n                            dadosPopup.dateMarked = dateMarked;\n                            dadosPopup.contato = contato;\n                            dadosPopup.Avaliacao = nota;\n\n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`); \n                                            this.props.contabilizarClicado([mapCoords[0], mapCoords[1]]);\n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                   {this.configPopup(dadosPopup)}\n                                    \n                                    {/* <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n                                        <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {contato} \n                                        <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n                                        <br/>\n                                        <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                        <span>    </span>\n                                        <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                \n                                    </Popup> */}\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n    }\n\n    renderDoadoresVerde(){\n        return <MarkerClusterGroup\n                    // grupo de onde pode ajudar\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                        iconCreateFunction={markerclusterOptionsAnjos}\n                    >                        \n                        {this.props.dataMapsProp.filter(x => {return x.Roaster===\"PrecisandoBuscar\" }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Horario, Mes, AlimentoEntregue, Avaliacao} = dataItem;\n                            \n                            if(mapCoords === undefined) return; if(URL===undefined) URL = \"\"; if(Mes===undefined) Mes=\"\";\n\n                            let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone,Avaliacao);\n                            \n                            //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                            if(envVariables.telefoneFilter && (contato===undefined || contato===\"\")) return (<div></div>);\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            // switch(Roaster){\n                            //     case \"PrecisandoBuscar\":\n                                    precisandoMsg = `Precisando de pessoas para buscar `+DiaSemana + \" pela \"+Horario+\" \"+Mes;\n                                    CurrentIcon = greenIcon;\n                            //         break;                                \n                                \n                            //     default:\n                            //         return (<div></div>);\n                            //         break;\n                            // }\n                            \n                            let dadosPopup = {...dataItem};\n                            dadosPopup.precisandoMsg = precisandoMsg;\n                            dadosPopup.googleDirection = googleDirection;\n                            dadosPopup.dateMarked = dateMarked;\n                            dadosPopup.contato = contato;\n                            dadosPopup.Avaliacao = nota;\n\n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`); \n                                            this.props.contabilizarClicado([mapCoords[0], mapCoords[1]]);\n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                   {this.configPopup(dadosPopup)}\n                                    \n                                    {/* <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n                                        <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {contato} \n                                        <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n                                        <br/>\n                                        <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                        <span>    </span>\n                                        <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                \n                                    </Popup> */}\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n    }\n\n    renderDoadoresVermelho(){\n        return <MarkerClusterGroup\n        // grupo de entrega de alimentos prontos\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n            iconCreateFunction={markerclusterOptionsEntrega}\n            \n            removeOutsideVisibleBounds={false}\n        >                        \n            {this.props.dataMapsProp.filter(x => {return x.Roaster===\"EntregaAlimentoPronto\" }).map((dataItem, k) => {\n                let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Horario, Mes, AlimentoEntregue, Avaliacao, RedeSocial } = dataItem;\n                \n                if(mapCoords === undefined) return; if(URL===undefined) URL = \"\"; if(Mes===undefined) Mes=\"\";\n\n                let {googleDirection, dateMarked, Telefone: contato, redesocial, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone, Avaliacao);\n                \n                //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                //if(envVariables.telefoneFilter) console.log(contato);       \n                if(envVariables.telefoneFilter && (contato===undefined || contato===\"\")) return (<div></div>);\n                //filtrar datas antigas\n                // if(\n                //     dateMarked.includes(\"semana\") \n                // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                // ) return (<div></div>);\n                \n                let precisandoMsg, CurrentIcon;\n                // switch(Roaster){\n                //     case \"EntregaAlimentoPronto\":\n                        precisandoMsg = `Entregando refeições prontas `+DiaSemana+\" pela \"+Horario+\" \"+Mes;\n                        CurrentIcon = redIcon;\n                //         break;\n                    \n                //     default:\n                //         return (<div></div>);\n                //         break;\n                // }\n\n                let dadosPopup = {...dataItem};\n                dadosPopup.precisandoMsg = precisandoMsg;\n                dadosPopup.googleDirection = googleDirection;\n                dadosPopup.dateMarked = dateMarked;\n                dadosPopup.contato = contato;\n                dadosPopup.Avaliacao = nota;\n                \n                return (\n                    <Marker\n                        eventHandlers={{\n                            click: (e) => { \n                                // alert(`Precisando de ${Roaster}`);\n                                this.props.contabilizarClicado([mapCoords[0], mapCoords[1]]); \n                                console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                            }\n                        }}\n                        icon= {CurrentIcon} \n                        key={k}\n                        center={[mapCoords[0], mapCoords[1]]}\n                        position={[mapCoords[0], mapCoords[1]]}\n                    >\n                        {this.configPopup(dadosPopup)}\n                                    \n                        {/* <Popup>\n                            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                            <br/>\n                            {precisandoMsg}\n                            <br/>\n                            {dateMarked} {contato} \n                            <br/>{\" (Qtde entregue:\"+AlimentoEntregue+\")\"}\n                            <br/>\n                            <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                            <span>    </span>\n                            <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                        </Popup> */}\n                        {/* <Tooltip\n                            // direction=\"auto\"\n                            // offset={[15, 0]}\n                            // opacity={1}>\n                            // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                            // <span>{City}, BR</span>\n                        </Tooltip> */}\n                    </Marker>);\n            })}\n        </MarkerClusterGroup>\n    }\n\n    renderNecessitados(){\n        return <MarkerClusterGroup\n        // grupo dos que precisam\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n            iconCreateFunction={markerclusterOptionsPrecisando}\n        >                        \n            {this.props.dataMapsProp.filter(x => {return x.Roaster===\"Alimento pronto\" }).map((dataItem, k) => {\n                let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, AlimentoEntregue, Avaliacao} = dataItem;\n                \n                if(mapCoords === undefined) return; if(URL===undefined) URL = \"\";\n                \n                let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone, Avaliacao);\n        \n                //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                if(envVariables.telefoneFilter && (contato===undefined || contato===\"\")) return (<div></div>);\n                //filtrar datas antigas\n                // if(\n                //     dateMarked.includes(\"semana\") \n                // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                // ) return (<div></div>);\n                \n                let precisandoMsg, CurrentIcon;\n                // switch(Roaster){                    \n                //     case \"Alimento pronto\":\n                        precisandoMsg = `Precisando de ${Roaster}`+URL;\n                        CurrentIcon = myIcon;\n                //         break;\n                    \n                //     default:\n                //         return (<div></div>);\n                //         break;\n                // }\n\n                let dadosPopup = {...dataItem};\n                dadosPopup.precisandoMsg = precisandoMsg;\n                dadosPopup.googleDirection = googleDirection;\n                dadosPopup.dateMarked = dateMarked;\n                dadosPopup.contato = contato;\n                dadosPopup.Avaliacao = nota;\n                \n                return (\n                    <Marker\n                        eventHandlers={{\n                            click: (e) => { \n                                // alert(`Precisando de ${Roaster}`); \n                                this.props.contabilizarClicado([mapCoords[0], mapCoords[1]]);\n                                console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                            }\n                        }}\n                        icon= {CurrentIcon} \n                        key={k}\n                        center={[mapCoords[0], mapCoords[1]]}\n                        position={[mapCoords[0], mapCoords[1]]}\n                    >\n                        {this.configPopup(dadosPopup)}\n                                    \n                        {/* <Popup>\n                            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                            <br/>\n                            {precisandoMsg}\n                            <br/>\n                            {dateMarked} {contato} \n                            <br/>{\" (Qtde entregue:\"+AlimentoEntregue+\")\"}\n                            <br/>\n                            <div className='buttonsSidebySide'>\n                                <button className='buttonsSidebySide' onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                <span>    </span>\n                                <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                            </div>\n                        </Popup> */}\n                        {/* <Tooltip\n                            // direction=\"auto\"\n                            // offset={[15, 0]}\n                            // opacity={1}>\n                            // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                            // <span>{City}, BR</span>\n                        </Tooltip> */}\n                    </Marker>);\n            })}\n        </MarkerClusterGroup>\n    }\n\n    renderCestaBasica(){\n        return <MarkerClusterGroup\n        // grupo dos que precisam\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n            iconCreateFunction={markerclusterOptionsPrecisando}\n        >                        \n            {this.props.dataMapsProp.filter(x => {return x.Roaster===\"Alimento de cesta básica\" }).map((dataItem, k) => {\n                let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, AlimentoEntregue, Avaliacao} = dataItem;\n                \n                if(mapCoords === undefined) return; if(URL===undefined) URL = \"\";\n                \n                let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone, Avaliacao);\n        \n                //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                if(envVariables.telefoneFilter && (contato===undefined || contato===\"\")) return (<div></div>);\n                //filtrar datas antigas\n                // if(\n                //     dateMarked.includes(\"semana\") \n                // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                // ) return (<div></div>);\n                \n                let precisandoMsg, CurrentIcon;\n                // switch(Roaster){                                \n                //     case \"Alimento de cesta básica\":\n                        precisandoMsg = `Precisando de ${Roaster}`+URL;\n                        CurrentIcon = myIcon;\n                //         break;\n                    \n                //     default:\n                //         return (<div></div>);\n                //         break;\n                // }\n\n                let dadosPopup = {...dataItem};\n                dadosPopup.precisandoMsg = precisandoMsg;\n                dadosPopup.googleDirection = googleDirection;\n                dadosPopup.dateMarked = dateMarked;\n                dadosPopup.contato = contato;\n                dadosPopup.Avaliacao = nota;\n                \n                return (\n                    <Marker\n                        eventHandlers={{\n                            click: (e) => { \n                                // alert(`Precisando de ${Roaster}`); \n                                this.props.contabilizarClicado([mapCoords[0], mapCoords[1]]);\n                                console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                            }\n                        }}\n                        icon= {CurrentIcon} \n                        key={k}\n                        center={[mapCoords[0], mapCoords[1]]}\n                        position={[mapCoords[0], mapCoords[1]]}\n                    >\n                        {this.configPopup(dadosPopup)}\n                                    \n                        {/* <Popup>\n                            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                            <br/>\n                            {precisandoMsg}\n                            <br/>\n                            {dateMarked} {contato} \n                            <br/>{\" (Qtde entregue:\"+AlimentoEntregue+\")\"}\n                            <br/>\n                            <div className='buttonsSidebySide'>\n                                <button className='buttonsSidebySide' onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                <span>    </span>\n                                <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                            </div>\n                        </Popup> */}\n                        {/* <Tooltip\n                            // direction=\"auto\"\n                            // offset={[15, 0]}\n                            // opacity={1}>\n                            // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                            // <span>{City}, BR</span>\n                        </Tooltip> */}\n                    </Marker>);\n            })}\n        </MarkerClusterGroup>\n    }\n\n    renderTestes(){\n        return <MarkerClusterGroup\n        // grupo dos que precisam\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n            iconCreateFunction={markerclusterOptionsPrecisando}\n        >                        \n            {this.props.dataMapsProp.filter(x => {return x.Roaster===\"Teste\" }).map((dataItem, k) => {\n                let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, AlimentoEntregue, Avaliacao} = dataItem;\n                \n                if(mapCoords === undefined) return; if(URL===undefined) URL = \"\";\n                \n                let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone);\n        //filtrar datas antigas\n\n                var msec = Date.now() - (new Date(DateISO)).getTime();\n                var mins = Math.floor(msec / 60000);\n                var hrs = Math.floor(mins / 60);\n                if(\n                    hrs > 3\n                ) return (<div></div>);\n                \n                \n                let precisandoMsg, CurrentIcon;\n                // switch(Roaster){                                \n                //     case \"Teste\":\n                        CurrentIcon = TestIcon;\n                //         break;\n                    \n                //     default:\n                //         return (<div></div>);\n                //         break;\n                // }\n                \n                return (\n                    <Marker\n                        eventHandlers={{\n                            click: (e) => { \n                                // alert(`Precisando de ${Roaster}`); \n                                this.props.contabilizarClicado([mapCoords[0], mapCoords[1]]);\n                                console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                            }\n                        }}\n                        icon= {CurrentIcon} \n                        key={k}\n                        center={[mapCoords[0], mapCoords[1]]}\n                        position={[mapCoords[0], mapCoords[1]]}\n                    >\n                        {/* {this.configPopup(googleDirection,precisandoMsg,dateMarked,contato,AlimentoEntregue,mapCoords,Roaster)} */}\n                                    \n                        {/* <Popup>\n                            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                            <br/>\n                            {precisandoMsg}\n                            <br/>\n                            {dateMarked} {contato} \n                            <br/>{\" (Qtde entregue:\"+AlimentoEntregue+\")\"}\n                            <br/>\n                            <div className='buttonsSidebySide'>\n                                <button className='buttonsSidebySide' onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                <span>    </span>\n                                <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                            </div>\n                        </Popup> */}\n                        {/* <Tooltip\n                            // direction=\"auto\"\n                            // offset={[15, 0]}\n                            // opacity={1}>\n                            // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                            // <span>{City}, BR</span>\n                        </Tooltip> */}\n                    </Marker>);\n            })}\n        </MarkerClusterGroup>\n    }\n\n    renderSwitch(param){\n        switch(this.state.filtro) {\n            case \"Todos\":\n                return ([\n                    this.renderDoadoresAzul(),\n                    this.renderDoadoresVerde(),\n                    this.renderNecessitados(),\n                    this.renderCestaBasica(),\n                    this.renderDoadoresVermelho()]\n                )\n                break;\n            case \"CestaBasica\":\n                return ([\n                    this.renderCestaBasica()]\n                )\n                break;\n            case \"MoradorRua\":\n                return ([\n                    this.renderNecessitados()]\n                )\n                break;\n            case \"Doadores\":\n                return ([\n                    this.renderDoadoresAzul(),\n                    this.renderDoadoresVerde(),\n                    this.renderDoadoresVermelho()]\n                )\n                break;\n            case \"Refeição Pronta\":\n                return ([\n                    this.renderDoadoresVerde(),\n                    this.renderDoadoresVermelho()]\n                )\n                break;\t\n            case \"RedeSocial\":\t\n                return ([\t\n                    this.renderRedeSocial()]\t\n                )\t\n                break;\t\n            case \"Verificados\":\t\n                return ([\t\n                    this.renderVerificados()]\t\n                )\t\n                break;\t\n            case \"Nenhum\":\t\n                return (<div></div>);\t\n                break;\n            default:\n                return (<div></div>);\t\n                break;\n\n        }\n    }\n\n}\n\nexport default CoffeeMap;","export default __webpack_public_path__ + \"static/media/currentLocation.bd009424.svg\";","export default __webpack_public_path__ + \"static/media/currentLocationSmall.1d7df3b6.svg\";","import React, { memo } from 'react'\nimport twemoji from 'twemoji'\n\n// Using the official https://github.com/twitter/twemoji from Twitter\n// With an excellent example from https://gist.github.com/chibicode/fe195d792270910226c928b69a468206\n\nconst Twemoji = ({ emoji }) => (\n    <span\n        dangerouslySetInnerHTML={{\n            __html: twemoji.parse(emoji, {\n                folder: 'svg',\n                ext: '.svg'\n            })\n        }}\n    />\n)\n\nexport default memo(Twemoji)","import React, { Component } from 'react';\nimport Twemoji from './twemoji';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import github_mark from '../images/github_mark.png';\nimport TableCount from './tableCount';\n\nclass Header extends Component {\n\n    render() {\n\n        const { rowCountProp } = this.props;\n\n        return (\n            <div id=\"header\">\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" id=\"logo\">\n                            <Twemoji emoji=\"☕\" /> MAPA FOME <span className=\"beta\">(beta) site:</span> www.mapafome.com.br \n                        </Typography>\n                        {/* <TableCount rowCountProp={rowCountProp} /> */}\n                        {/* <a href=\"https://docs.google.com/spreadsheets/d/1u7jiqY1qM0jYWugn1dFiW3plQrvWysJqm8xXhO35zuU/edit?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Button\n                                variant=\"contained\"\n                                size=\"small\">\n                                Add<span id=\"RoasterButtonMobile\">&nbsp;Roaster</span>\n                            </Button>\n                        </a>\n                        <a href=\"https://github.com/hdehal/coffee-maps\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <IconButton\n                                className=\"GitHub\"\n                                variant=\"outlined\"\n                                size=\"small\">\n                                <img className=\"GitHub\" src={github_mark} alt=\"Hosted on GitHub\" />\n                            </IconButton>\n                        </a> */}\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Typography from '@mui/material/Typography';\n\nclass TableCount extends Component {\n    render() {\n        return (\n            <Typography className=\"TableCount\">\n                TOTAL: {this.props.rowCountProp}\n            </Typography>\n        );\n    }\n}\n\nexport default TableCount;","import React, { Component } from 'react';\r\n\r\nimport { \r\n  OpenStreetMapProvider,\r\n  // BingProvider \r\n} from 'leaflet-geosearch';\r\n\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport envVariables from '../variaveisAmbiente';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\nconst provider = new OpenStreetMapProvider();\r\n\r\n// = new BingProvider({\r\n//   params: {\r\n//     key: process.env.REACT_APP_BING_MAPS_API_KEY\r\n//   },\r\n// });\r\n//\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass NameForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '', \r\n        alimento: props.alimento, \r\n        isLoading:false,\r\n        telefone:props.telefone,\r\n        diaSemana:props.diaSemana,\r\n        horario:props.horario,\r\n        mes:props.mes,\r\n        redesocial:props.redesocial\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    //ATUALIZAR PROPS VINDAS DO PAI\r\n    static getDerivedStateFromProps(nextProps, state) {\r\n      if(state){\r\n        if (nextProps.alimento !== state.alimento){ \r\n          state.alimento=nextProps.alimento;\r\n        }\r\n        if (nextProps.telefone !== state.telefone){ \r\n          state.telefone=nextProps.telefone;\r\n        }\r\n        if (nextProps.diaSemana !== state.diaSemana){ \r\n          state.diaSemana=nextProps.diaSemana;\r\n        }\r\n        if (nextProps.horario !== state.horario){ \r\n          state.horario=nextProps.horario;\r\n        }\r\n        if (nextProps.mes !== state.mes){ \r\n          state.mes=nextProps.mes;\r\n        }\r\n        if (nextProps.redesocial !== state.redesocial){ \r\n          state.redesocial=nextProps.redesocial;\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n  \r\n    handleChange(event) {\r\n      if(event.target.value.length > 100) return; \r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      //alert('Um endereço foi enviado: ' + this.state.value);\r\n      if(this.state.value === '') {event.preventDefault();return;}\r\n      \r\n      this.setState({isLoading: true});\r\n\r\n      (async function main(self) {\r\n        await doc.useServiceAccountAuth({\r\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n        });\r\n\r\n        await doc.loadInfo(); // Loads document properties and worksheets\r\n\r\n        const sheet = doc.sheetsByIndex[0];\r\n        //row = { Name: \"new name\", Value: \"new value\" };\r\n        \r\n        // Total row count\r\n        let numero = self.state.value.replace(/[^0-9]/g,'');\r\n        if(numero === ''){\r\n          alert(\"faltou colocar o número\");\r\n          \r\n          event.preventDefault();\r\n          self.setState({isLoading: false});\r\n          return;\r\n        }\r\n        // const row = { \r\n        //   Roaster:  self.state.alimento, \r\n        //   URL:numero, City: self.state.value,\r\n        //   DateISO: new Date().toISOString(), \r\n        //   Telefone: self.state.telefone, \r\n        //   DiaSemana: self.state.diaSemana, \r\n        //   Horario: self.state.horario,\r\n        //   AlimentoEntregue:0,\r\n        // };\r\n\r\n        let dadosRow = {};\r\n        dadosRow.alimento = self.state.alimento;\r\n        dadosRow.numero = numero;\r\n        dadosRow.endereco = self.state.value;\r\n        dadosRow.coords = \"\";\r\n        dadosRow.telefone = self.state.telefone;\r\n        dadosRow.diaSemana = self.state.diaSemana;\r\n        dadosRow.horario = self.state.horario;\r\n        dadosRow.mes = self.state.mes;\r\n        dadosRow.redesocial = self.state.redesocial;\r\n        const row = envVariables.criarRow(dadosRow);\r\n        // let dadosJSON = { \r\n        //   \"Roaster\":  self.state.alimento, \r\n        //   \"URL\":numero, \r\n        //   \"City\": self.state.value,\r\n        //   \"DateISO\": new Date().toISOString(), \r\n        //   \"Telefone\": self.state.telefone, \r\n        //   \"DiaSemana\": self.state.diaSemana, \r\n        //   \"Horario\": self.state.horario,\r\n        //   \"AlimentoEntregue\":0,\r\n        //   \"RedeSocial\":\"\",\r\n        //   \"Avaliacao\": {\r\n        //     \"1\":0,\r\n        //     \"2\":0,\r\n        //     \"3\":0,\r\n        //     \"4\":0,\r\n        //     \"5\":0\r\n        //   },\r\n        // };\r\n\r\n        \r\n        try{\r\n          let dadosJSON = JSON.parse(row.Dados);\r\n          let providerResult = await provider.search({ query: self.state.value.replace('-',\",\") + ', Brazil' });\r\n  \r\n          if(providerResult.length !== 0 ){\r\n              // throw new Error(\"endereco-nao-encontrado\");\r\n  \r\n              // console.log(providerResult);\r\n              let latlon = [providerResult[0].y,providerResult[0].x];\r\n              dadosJSON.Coordinates = JSON.stringify(latlon).replace(\" \",\"\");\r\n              row.Dados = JSON.stringify(dadosJSON); // Convert obj to string\r\n              //needsUpdates[index].mapCoords = latlon;\r\n          }else{\r\n             throw new Error(\"endereco-nao-encontrado\");\r\n          }\r\n        }catch(e){\r\n            console.log(\"ERRO\");\r\n            console.log(e);\r\n            alert(\"Houve um problema ao cadastrar endereço, porfavor clique no mapa e depois confirme o no botão marcar Local tocado.\\nou use o botão marcar Localização Atual\");\r\n        }\r\n        await sheet.addRow(row);\r\n       \r\n        self.setState({isLoading: false});\r\n        window.location.reload();\r\n      })(this);\r\n      event.preventDefault();\r\n    }\r\n\r\n    \r\n  \r\n    render() {\r\n      return (\r\n        this.state.isLoading ?\r\n        <div><CircularProgress /></div>\r\n        :\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <input className=\"TextField\" type=\"text\" placeholder='Insira rua,nº,bairro,cidade,estado' value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input className=\"SubmitButton\" type=\"submit\" value=\"Enviar Endereço\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\nexport default NameForm; ","import React, { Component } from 'react';\r\n\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport envVariables from '../variaveisAmbiente';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass NameForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '', \r\n        location: props.location, \r\n        alimento: props.alimento, \r\n        isLoading:false,\r\n        telefone:props.telefone,\r\n        diaSemana:props.diaSemana,\r\n        mes:props.mes,\r\n        numero:props.numero,\r\n        redesocial:props.redesocial,\r\n      };\r\n  \r\n      // this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n\r\n    }\r\n\r\n  componentDidMount() {\r\n      \r\n    //salvar acesso  \r\n      \r\n    (async function main(self) {\r\n      try{\r\n        await doc.useServiceAccountAuth({\r\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n        });\r\n    \r\n        await doc.loadInfo(); // Loads document properties and worksheets\r\n    \r\n        const sheet = doc.sheetsByIndex[1];\r\n        \r\n        await sheet.loadCells('A2');\r\n        const a1 = sheet.getCell(1, 0);\r\n        a1.value+=1;\r\n        await sheet.saveUpdatedCells();\r\n      }catch(e){\r\n        \r\n      }\r\n      \r\n    })(this);\r\n\r\n  }\r\n\r\n    //ATUALIZAR PROPS VINDAS DO PAI\r\n    static getDerivedStateFromProps(nextProps, state) {\r\n      if(state){\r\n\r\n        if (nextProps.alimento !== state.alimento){ \r\n          state.alimento=nextProps.alimento;\r\n        }\r\n        if (nextProps.telefone !== state.telefone){ \r\n          state.telefone=nextProps.telefone;\r\n        }\r\n        if (nextProps.diaSemana !== state.diaSemana){ \r\n          state.diaSemana=nextProps.diaSemana;\r\n        }\r\n        if (nextProps.horario !== state.horario){ \r\n          state.horario=nextProps.horario;\r\n        }        \r\n        if (nextProps.mes !== state.mes){ \r\n          state.mes=nextProps.mes;\r\n        }\r\n        if (nextProps.numero !== state.numero){ \r\n          state.numero=nextProps.numero;\r\n        }\r\n        if (nextProps.redesocial !== state.redesocial){ \r\n          state.redesocial=nextProps.redesocial;\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n  \r\n    // handleChange(event) {\r\n    //   this.setState({value: event.target.value});\r\n    // }\r\n  \r\n    handleSubmit(event) { \r\n        //navigator.geolocation.getCurrentPosition(function(position) {\r\n        if(this.state.location[0]===-8.0671132 && this.state.location[1]===-34.8766719){\r\n          alert(\"Localização do celular está desativada, ative, recarregue a página e tente novamente com a localização ativa, se mesmo assim não conseguir insira o endereço completo e clique enviar endereço\");\r\n          event.preventDefault();\r\n          return;\r\n        }\r\n        this.setState({isLoading: true});\r\n            (async function main(self) {\r\n                await doc.useServiceAccountAuth({\r\n                    client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n                    private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n                });\r\n        \r\n                await doc.loadInfo(); // Loads document properties and worksheets\r\n                \r\n                let regiao;\r\n                if(envVariables.dentroLimites(self.state.location)){\r\n                  regiao=0;\r\n                }\r\n                else{\r\n                  alert(\"Região não suportada\");\r\n                  return;\r\n                }\r\n                const sheet = doc.sheetsByIndex[regiao];\r\n                // const rows = await sheet.getRows();\r\n                // Total row count\r\n\r\n                // const row = { \r\n                //   Roaster: self.state.alimento, \r\n                //   URL:self.state.numero, \r\n                //   City: \"\", \r\n                //   Coordinates:JSON.stringify([self.props.location[0], self.props.location[1]]), \r\n                //   DateISO: new Date().toISOString(), \r\n                //   Telefone: self.props.telefone, \r\n                //   DiaSemana:self.props.diaSemana,\r\n                //   Horario:self.props.horario,\r\n                //   AlimentoEntregue:0,\r\n                // };\r\n\r\n                let dadosRow = {};\r\n                dadosRow.alimento = self.state.alimento;\r\n                dadosRow.numero = self.state.numero;\r\n                dadosRow.endereco = \"\";\r\n                dadosRow.coords = self.state.location;\r\n                dadosRow.telefone = self.state.telefone;\r\n                dadosRow.diaSemana = self.state.diaSemana;\r\n                dadosRow.horario = self.state.horario;\r\n                dadosRow.mes = self.state.mes;\r\n                dadosRow.redesocial = self.state.redesocial;\r\n\r\n              const row = envVariables.criarRow(dadosRow);\r\n\r\n                \r\n            // {\r\n            //   Dados: JSON.stringify(\r\n            //     { \r\n            //       \"Roaster\": self.state.alimento, \r\n            //       \"URL\":self.state.numero, \r\n            //       \"City\": \"\", \r\n            //       \"Coordinates\":JSON.stringify([self.props.location[0], self.props.location[1]]), \r\n            //       \"DateISO\": new Date().toISOString(), \r\n            //       \"Telefone\": self.props.telefone, \r\n            //       \"DiaSemana\":self.props.diaSemana,\r\n            //       \"Horario\":self.props.horario,\r\n            //       \"AlimentoEntregue\":0,\r\n            //       \"RedeSocial\":self.state.redesocial.replace('@',''),\r\n            //       \"Avaliacao\": {\r\n            //         \"1\":0,\r\n            //         \"2\":0,\r\n            //         \"3\":0,\r\n            //         \"4\":0,\r\n            //         \"5\":0\r\n            //       },\r\n            //     }\r\n\r\n            //   )\r\n            // };\r\n                \r\n                const result = await sheet.addRow(row);\r\n                //console.log(result);\r\n                window.location.reload();\r\n            })(this);\r\n        //});\r\n      event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n          this.state.isLoading ?\r\n          <div><CircularProgress /></div>\r\n          : \r\n            <button className=\"SubmitButton buttonsSidebySide\" onClick={this.handleSubmit}>\r\n              marcar Localização Atual\r\n            </button>\r\n        \r\n      );\r\n    }\r\n  }\r\nexport default NameForm; ","import React, { Component } from 'react';\r\n\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass Sugestoes extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '',\r\n        isLoading:false\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n  \r\n    handleChange(event) {\r\n      if(event.target.value.length > 1000) return;\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      //alert('Um endereço foi enviado: ' + this.state.value);\r\n      if(this.state.value === '') {event.preventDefault();return;}\r\n      \r\n      this.setState({isLoading: true});\r\n      \r\n      (async function main(self) {\r\n        try{\r\n          await doc.useServiceAccountAuth({\r\n              client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n              private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n          });\r\n\r\n          await doc.loadInfo(); // Loads document properties and worksheets\r\n\r\n          const sheet = doc.sheetsByIndex[2];\r\n          //row = { Name: \"new name\", Value: \"new value\" };\r\n          \r\n          const row = { Sugestao: self.state.value, DateISO: new Date().toISOString()};\r\n          \r\n          await sheet.addRow(row);\r\n        \r\n          self.setState({isLoading: false});\r\n          alert(\"sugestão enviada com sucesso\");\r\n        }catch(e){\r\n          alert(\"Erro, tente novamente\");\r\n        }\r\n        \r\n      })(this);\r\n      event.preventDefault();\r\n    }\r\n\r\n    \r\n  \r\n    render() {\r\n      return (\r\n        this.state.isLoading ?\r\n        <div><CircularProgress /></div>\r\n        :\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <textarea className=\"TextField\" type=\"text\" placeholder='Insira sua sugestão, depoimento e contato em caso de dúvida' value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input className=\"SubmitButton\" type=\"submit\" value=\"Enviar sugestão\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\nexport default Sugestoes; ","export default __webpack_public_path__ + \"static/media/qr.20154bbf.svg\";","\r\nimport React, { Component } from 'react';\r\n\r\nimport TimeAgo from 'javascript-time-ago';\r\n\r\nimport pt from 'javascript-time-ago/locale/pt.json';\r\nTimeAgo.addDefaultLocale(pt);\r\n\r\nconst timeAgo = new TimeAgo();\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass CleanOld extends Component {\r\n\r\n    componentDidMount() {\r\n        \r\n        (async function main() {\r\n            // Use service account creds\r\n            await doc.useServiceAccountAuth({\r\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n            });\r\n    \r\n            await doc.loadInfo(); // Loads document properties and worksheets\r\n    \r\n            const sheet = doc.sheetsByIndex[0];\r\n            const rows = await sheet.getRows();\r\n            rows.forEach((x) => { \r\n                let dateMarked;\r\n                if(x.DateISO) dateMarked = timeAgo.format(Date.now() - (Date.now() - new Date(x.DateISO).getTime()) );\r\n                \r\n                //filtrar datas antigas\r\n                if(\r\n                    dateMarked.includes(\"semana\") \r\n                    || dateMarked.includes(\"mes\") \r\n                //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\r\n                ) { x.delete(); } });\r\n\r\n        })();\r\n    }\r\n    render(){\r\n        return <div></div>;\r\n    }\r\n}\r\n\r\nexport default CleanOld;","export default __webpack_public_path__ + \"static/media/insta.20ffff3e.svg\";","import React, { Component } from 'react';\nimport './App.css';\nimport { OpenStreetMapProvider } from 'leaflet-geosearch';\nimport Header from './components/header';\n\nimport InserirEndereco from './components/googlesheets/endereco';\nimport MyLocationButton from './components/googlesheets/mylocation';\nimport Sugestao from './components/googlesheets/sugestao';\n\nimport CoffeeMap from './components/map.js';\n// import CoffeeTable from './components/table';\nimport ReactGA from 'react-ga';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Checkbox } from '@mui/material';\n\nimport envVariables from './components/variaveisAmbiente';\n\nimport qr from './images/qr.svg';\n\n// Material-UI\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nimport CleanOld from './components/googlesheets/cleanold';\n\n\nimport coffeeBean from './images/bean.svg';\nimport hub from './images/hub.svg';\nimport green from './images/green.svg';\nimport red from './images/red.svg';\nimport insta from './images/insta.svg';\n\nimport AesEncryption from \"aes-encryption\";\n\nimport Cookies from 'universal-cookie';\n \nconst cookies = new Cookies();\nconst EXPIRE_DAY = 7;\n\nconst aes = new AesEncryption();\n\n// Google Analytics\nfunction initializeReactGA() {\n  ReactGA.initialize('UA-172868315-1');\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\ninitializeReactGA();\n\naes.setSecretKey(process.env.REACT_APP_CRYPTSEED+\"F\");\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\n\n// Google Sheets Document ID -- PROD\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\n\n// Google Sheets Document ID -- DEV\n// const doc = new GoogleSpreadsheet('1jQI6PstbEArW_3xDnGgPJR6_37r_KjLoa765bOgMBhk');\n\n// Provider for leaflet-geosearch plugin\nconst provider = new OpenStreetMapProvider();\n//limit osm https://operations.osmfoundation.org/policies/nominatim/\n\n\n\n\nclass App extends Component {\n\n  // Initial state\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      dataMaps: [],\n      dataHeader: [{ label: \"Índice\" }, { label: \"Lugar\" }],\n      rowCount: '',\n      center:[-8.0671132,-34.8766719],\n      alimento:'Alimento pronto',\n      telefone:'',\n      telefoneEncryptado:'',\n      diaSemana:'',\n      horario:'',\n      mes:'',\n      filtro:\"Todos\",\n      lastMarkedCoords:[],\n      numero:'',\n      telefoneFilterLocal:false,\n      site:'',\n      redesocial:'',\n\n    }\n\n    this.dropDownMenuSemanaEntregaAlimentoPronto = React.createRef();\n    this.dropDownMenuHorarioEntregaAlimentoPronto = React.createRef();\n    this.dropDownMenuSemanaPrecisandoBuscar = React.createRef();\n    this.dropDownMenuHorarioPrecisandoBuscar = React.createRef();\n    this.dropDownMenuFiltro = React.createRef();\n    this.redesocialRef = React.createRef();\n    this.dropDownMenuRedeSocial = React.createRef();\n    this.dropDownMenuMesPrecisandoBuscar = React.createRef();\n    this.dropDownMenuMesEntregaAlimentoPronto = React.createRef();\n  \n    \n    this.handleChangeNumero = this.handleChangeNumero.bind(this);\n\n    this.setTipoAlimento = this.setTipoAlimento.bind(this);\n    this.handleChangeTelefone = this.handleChangeTelefone.bind(this);\n    this.setDiaSemana = this.setDiaSemana.bind(this);\n    this.setHorario = this.setHorario.bind(this);\n    this.setMes = this.setMes.bind(this);\n    this.setFiltro = this.setFiltro.bind(this);\n    this.removerPonto = this.removerPonto.bind(this);\n    this.handleClickMap = this.handleClickMap.bind(this);\n    this.telefoneFilterChange = this.telefoneFilterChange.bind(this);\n    this.handleChangeRedeSocial = this.handleChangeRedeSocial.bind(this);\n  }\n\n  telefoneFilterChange(event){\n    envVariables.telefoneFilter = !envVariables.telefoneFilter;\n    this.setState({\n      telefoneFilterLocal: envVariables.telefoneFilter\n    });\n  }\n\n  removerPonto(coords, categoriaPonto){\n    console.log(\"remover \"+coords);\n    let motivo = prompt(\"por qual motivo (em resumo) gostaria de deletar esse ponto?\");\n    if(motivo !== null){\n      (async function main(self) {\n        try{\n          await doc.useServiceAccountAuth({\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n            });\n\n            await doc.loadInfo(); // Loads document properties and worksheets\n\n            const sheet = doc.sheetsByIndex[4];\n            //row = { Name: \"new name\", Value: \"new value\" };\n            \n            const row = { Motivo: motivo, Ponto: JSON.stringify(coords), DateISO: new Date().toISOString(), CategoriaPonto:categoriaPonto};\n            \n            let r = await sheet.addRow(row);\n            console.log(r);\n          \n            alert(\"pedido de deletar enviado com sucesso\");\n        }catch(e){\n          alert(\"ERRO, tente novamente\");\n          //console.log(e);\n\n        }\n        \n      })(motivo, coords);\n    }\n  }\n\n  verificarPonto(coords, categoriaPonto){\n    let motivo = prompt(\"Insira o CNPJ da entidade, nome da entidade, nome do responsável, email, telefone e se é credenciada para receber recurso do governo\");\n    if(motivo !== null){\n      (async function main(self) {\n        try{\n          await doc.useServiceAccountAuth({\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n            });\n\n            await doc.loadInfo(); // Loads document properties and worksheets\n\n            const sheet = doc.sheetsByIndex[3];\n            //row = { Name: \"new name\", Value: \"new value\" };\n            \n            const row = { Motivo: motivo, Ponto: JSON.stringify(coords), DateISO: new Date().toISOString(), CategoriaPonto:categoriaPonto};\n            \n            let r = await sheet.addRow(row);\n            console.log(r);\n          \n            alert(\"pedido de cnpj enviado com sucesso\");\n        }catch(e){\n          alert(\"ERRO, tente novamente\");\n          console.log(e);\n\n        }\n        \n      })(motivo, coords);\n    }\n  }\n\n  contabilizarClicado(coords){\n    (async function main(self) {\n      try{\n        await doc.useServiceAccountAuth({\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n\n          await doc.loadInfo(); // Loads document properties and worksheets\n\n          const sheet = doc.sheetsByIndex[0];\n          //row = { Name: \"new name\", Value: \"new value\" };\n          if(envVariables.rows===undefined) envVariables.rows = await sheet.getRows();\n          const rows = envVariables.rows;\n          coords = JSON.stringify(coords);\n          let rowEncontrada = rows.filter((x) => { \n            //x.Coordinates\n            //console.log(JSON.parse(x.Dados).Coordinates);\n            return JSON.parse(x.Dados).Coordinates === coords; });\n          \n          //console.log(rowEncontrada[0].City);\n          let dadosNovos = JSON.parse(rowEncontrada[0].Dados);\n          if(dadosNovos.clicado) dadosNovos.clicado++;\n          else dadosNovos.clicado=1;\n          rowEncontrada[0].Dados = JSON.stringify(dadosNovos);\n          await rowEncontrada[0].save();\n          \n          //window.location.reload();\n      }catch(e){\n        //console.log(e);\n\n      }\n      \n    })(coords);\n  }\n  \n  clicouTelefone(coords){\n    (async function main(self) {\n      try{\n        await doc.useServiceAccountAuth({\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n\n          await doc.loadInfo(); // Loads document properties and worksheets\n\n          const sheet = doc.sheetsByIndex[0];\n          //row = { Name: \"new name\", Value: \"new value\" };\n          if(envVariables.rows===undefined) envVariables.rows = await sheet.getRows();\n          const rows = envVariables.rows;\n          coords = JSON.stringify(coords);\n          let rowEncontrada = rows.filter((x) => { \n            //x.Coordinates\n            //console.log(JSON.parse(x.Dados).Coordinates);\n            return JSON.parse(x.Dados).Coordinates === coords; });\n          \n          //console.log(rowEncontrada[0].City);\n          let dadosNovos = JSON.parse(rowEncontrada[0].Dados);\n          if(dadosNovos.clickTel) dadosNovos.clickTel++;\n          else dadosNovos.clickTel=1;\n          rowEncontrada[0].Dados = JSON.stringify(dadosNovos);\n          await rowEncontrada[0].save();\n          \n          //window.location.reload();\n      }catch(e){\n        //console.log(e);\n\n      }\n      \n    })(coords);\n  }\n  entregarAlimento(coords){\n    (async function main(self) {\n      try{\n        await doc.useServiceAccountAuth({\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n\n          await doc.loadInfo(); // Loads document properties and worksheets\n\n          const sheet = doc.sheetsByIndex[0];\n          //row = { Name: \"new name\", Value: \"new value\" };\n          if(envVariables.rows===undefined) envVariables.rows = await sheet.getRows();\n          const rows = envVariables.rows;\n          coords = JSON.stringify(coords);\n          let rowEncontrada = rows.filter((x) => { \n            //x.Coordinates\n            //console.log(JSON.parse(x.Dados).Coordinates);\n            return JSON.parse(x.Dados).Coordinates === coords; });\n          \n          //console.log(rowEncontrada[0].City);\n          let dadosNovos = JSON.parse(rowEncontrada[0].Dados);\n          dadosNovos.AlimentoEntregue++;\n          rowEncontrada[0].Dados = JSON.stringify(dadosNovos);\n          await rowEncontrada[0].save();\n          \n          window.location.reload();\n      }catch(e){\n        //console.log(e);\n\n      }\n      \n    })(coords);\n  }\n\n  avaliar(coords, avaliacao){\n    \n    (async function main(coords, avaliacao) {\n      try{\n        await doc.useServiceAccountAuth({\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n\n          await doc.loadInfo(); // Loads document properties and worksheets\n\n          const sheet = doc.sheetsByIndex[0];\n          //row = { Name: \"new name\", Value: \"new value\" };\n          \n          if(envVariables.rows===undefined) envVariables.rows = await sheet.getRows();\n          const rows = envVariables.rows;\n          coords = JSON.stringify(coords);\n          let rowEncontrada = rows.filter((x) => { \n            //x.Coordinates\n            console.log(JSON.parse(x.Dados).Coordinates);\n            return JSON.parse(x.Dados).Coordinates===(coords); });\n          \n          //console.log(rowEncontrada[0].City);\n          let dadosNovos = JSON.parse(rowEncontrada[0].Dados);\n          if(dadosNovos.Avaliacao == undefined){\n            dadosNovos.Avaliacao = {\n              \"1\":0,\n              \"2\":0,\n              \"3\":0,\n              \"4\":0,\n              \"5\":0\n            }\n          }\n          if(avaliacao===null)avaliacao=5;\n          dadosNovos.Avaliacao[avaliacao]++;\n          rowEncontrada[0].Dados = JSON.stringify(dadosNovos);\n          \n          let cookieName='pontosAvaliados';\n          let pontos = cookies.get(cookieName) || \"\";\n          coords = JSON.parse(coords);\n          let coordsString = coords[0]+\"\"+coords[1];\n          //let pontosEntregues = JSON.parse(pontosEntreguesData);\n          if(pontos.includes(coordsString)) return;\n\n          await rowEncontrada[0].save();\n          \n          pontos+=coordsString;\n\n          const cookieExpireDate = new Date();\n          cookieExpireDate.setDate(cookieExpireDate.getDate() + EXPIRE_DAY);\n\n          cookies.set(cookieName, pontos, { path: '/', expires: cookieExpireDate });\n          \n          window.location.reload();\n      }catch(e){\n        console.log(e);\n\n      }\n      \n    })(coords, avaliacao);\n  }\n\n  setFiltro(event){\n    this.setState({\n      filtro: event.target.value\n    });\n  }\n  setTipoAlimento(event){\n    this.setState({\n      alimento: event.target.value\n    });\n    \n    let isPrecisandoBuscar = event.target.value === 'PrecisandoBuscar',\n    isEntregaAlimentoPronto = event.target.value === 'EntregaAlimentoPronto',\n    isDoador = event.target.value === 'Doador';\n\n    this.dropDownMenuSemanaPrecisandoBuscar.current.style.display=\"none\";\n    this.dropDownMenuHorarioPrecisandoBuscar.current.style.display=\"none\";\n    this.dropDownMenuMesPrecisandoBuscar.current.style.display=\"none\";\n    this.dropDownMenuSemanaEntregaAlimentoPronto.current.style.display=\"none\";\n    this.dropDownMenuHorarioEntregaAlimentoPronto.current.style.display=\"none\";\n    this.dropDownMenuMesEntregaAlimentoPronto.current.style.display=\"none\";\n\n    if( isPrecisandoBuscar ){\n      this.dropDownMenuSemanaPrecisandoBuscar.current.style.display=\"\";\n      this.dropDownMenuHorarioPrecisandoBuscar.current.style.display=\"\";\n      this.dropDownMenuMesPrecisandoBuscar.current.style.display=\"\";\n      this.setState({\n        diaSemana: this.dropDownMenuSemanaPrecisandoBuscar.current.value,\n        horario: this.dropDownMenuHorarioPrecisandoBuscar.current.value,\n        mes: this.dropDownMenuMesPrecisandoBuscar.current.value\n      });\n\n    }else    \n    if( isEntregaAlimentoPronto ){\n      this.dropDownMenuSemanaEntregaAlimentoPronto.current.style.display=\"\";\n      this.dropDownMenuHorarioEntregaAlimentoPronto.current.style.display=\"\";\n      this.dropDownMenuMesEntregaAlimentoPronto.current.style.display=\"\";\n      \n      this.setState({\n        diaSemana: this.dropDownMenuSemanaEntregaAlimentoPronto.current.value,\n        horario: this.dropDownMenuHorarioEntregaAlimentoPronto.current.value,\n        mes: this.dropDownMenuMesEntregaAlimentoPronto.current.value\n      });\n\n    }\n    else {\n      this.setState({\n        diaSemana: '',\n        horario: '',\n        mes: ''\n      });\n\n    }\n\n    if(isPrecisandoBuscar || isEntregaAlimentoPronto || isDoador){\n      this.redesocialRef.current.style.display=\"\";\n      this.dropDownMenuRedeSocial.current.style.display=\"\";\n    }else{\n      this.redesocialRef.current.style.display=\"none\";\n      this.dropDownMenuRedeSocial.current.style.display=\"none\";\n    }\n\n  }\n\n  setDiaSemana(event){\n    this.setState({\n      diaSemana: event.target.selectedOptions[0].value\n    });\n    // console.log(this.dropDownMenuSemana.current.value);\n    // console.log(event.target.selectedOptions[0].value);\n    // console.log(this.state.diaSemana);\n  }\n\n  \n  setHorario(event){\n    this.setState({\n      horario: event.target.selectedOptions[0].value\n    });\n    // console.log(this.dropDownMenuSemana.current.value);\n    // console.log(event.target.selectedOptions[0].value);\n    // console.log(this.state.diaSemana);\n  }\n\n  setMes(event){\n    this.setState({\n      mes: event.target.selectedOptions[0].value\n    });\n    // console.log(this.dropDownMenuSemana.current.value);\n    // console.log(event.target.selectedOptions[0].value);\n    // console.log(this.state.diaSemana);\n  }\n\n  handleChangeTelefone(event) {\n    if(event.target.value.length>15) return;\n    let telefoneValue = event.target.value.replace(/[^0-9]/g,'');\n    if(telefoneValue.length >= 8){\n      this.setState({telefoneEncryptado: aes.encrypt(telefoneValue)});\n    }\n    this.setState({telefone: telefoneValue});\n  }\n\n  handleChangeRedeSocial(event){\n    let site = event.target.value;\n    if(site.length>30) return;\n    this.setState({site: site, redesocial:this.dropDownMenuRedeSocial.current.value+site});\n\n  }\n  \n    \n  handleChangeNumero(event) {\n    if(event.target.value.length > 10) return;\n    let numero = event.target.value.replace(/[^0-9]/g,'');\n    this.setState({numero: numero});\n  }\n\n  handleClickMap(){\n    // this.setState({lastMarkedCoords: coords});\n    if(envVariables.lastMarked === undefined) return;\n    this.setState({isLoading: true});\n    (async function main(self) {\n      await doc.useServiceAccountAuth({\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n      });\n\n      await doc.loadInfo(); // Loads document properties and worksheets\n      let {lat, lng} = envVariables.lastMarked.getLatLng();\n      envVariables.lastMarked.latlng = [lat,lng];\n      let regiao;\n      if(envVariables.dentroLimites(envVariables.lastMarked.latlng)){\n        regiao=0;\n      }\n      else{\n        alert(\"Região não suportada\");\n        return;\n      }\n      const sheet = doc.sheetsByIndex[regiao];\n      // const rows = await sheet.getRows();\n      // Total row count\n\n      // if(this.state.numero !== ''){\n      //   this.state.numero = \", nº\"+this.state.numero;\n      // }\n      \n      // const row = { \n      //   Roaster: self.state.alimento, \n      //   URL:self.state.numero, \n      //   City: \"\", \n      //   Coordinates:JSON.stringify([self.props.location[0], self.props.location[1]]), \n      //   DateISO: new Date().toISOString(), \n      //   Telefone: self.props.telefone, \n      //   DiaSemana:self.props.diaSemana,\n      //   Horario:self.props.horario,\n      //   AlimentoEntregue:0,\n      // };\n      let numero = self.state.numero.replace(/[^0-9]/g,'');\n      if(numero !== ''){\n        numero = \", \"+numero;\n      }\n      let dadosRow = {};\n      dadosRow.alimento = self.state.alimento;\n      dadosRow.numero = numero;\n      dadosRow.endereco = \"\";\n      dadosRow.coords = envVariables.lastMarked.latlng;\n      dadosRow.telefone = self.state.telefoneEncryptado;\n      dadosRow.diaSemana = self.state.diaSemana;\n      dadosRow.horario = self.state.horario;\n      dadosRow.mes = self.state.mes;\n      dadosRow.redesocial = self.state.redesocial;\n\n      let row = envVariables.criarRow(dadosRow);\n      // if(self.state.numero !== ''){\n      //   self.state.numero = \", nº\"+self.state.numero;\n      // }\n      // let dadosJSON = {\n      //   \"Roaster\": self.state.alimento, \n      //   \"Coordinates\":JSON.stringify(envVariables.lastMarked.latlng), \n      //   \"DateISO\": new Date().toISOString(), \n      //   \"Telefone\": self.state.telefoneEncryptado, \n      //   \"AlimentoEntregue\":0,\n      //   \"URL\":self.state.numero\n      // };\n\n      // if(self.state.alimento==='EntregaAlimentoPronto' || self.state.alimento==='PrecisandoBuscar')\n      // {\n      //   dadosJSON.DiaSemana=self.state.diaSemana;\n      //   dadosJSON.Horario=self.state.horario;\n        \n      // }\n      // row = { Dados: JSON.stringify(dadosJSON) };\n      \n      const result = await sheet.addRow(row);\n      // console.log(result);\n      window.location.reload();\n  })(this);\n  }\n\n  componentDidMount() {\n\n    // Google Sheets API\n    // Based on https://github.com/theoephraim/node-google-spreadsheet\n\n    var self = this;\n\n    //current location    \n    navigator.geolocation.getCurrentPosition(function(position) {\n      envVariables.currentLocation = [position.coords.latitude, position.coords.longitude];\n      self.setState({center: [position.coords.latitude, position.coords.longitude]}) \n    });\n\n    (async function main(self) {\n      // Use service account creds\n      await doc.useServiceAccountAuth({\n        client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n        private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n      });\n\n      await doc.loadInfo(); // Loads document properties and worksheets\n      \n      /*https://www.keene.edu/campus/maps/tool/\n        long, lat\n        x, y\n        -52.2070313, 2.20\n        -52.4267578, -13.9234039\n        -34.3212891, -14.0939572\n        -34.3212891, 1.6696855\n0: -8.0256189\n1: -34.9175702\n        -55.4589844, -32.6578757\n        -55.5468750, -14.1791861\n        -38.1445313, -14.1791861\n        -38.0566406, -32.8426736\n      */\n     //limitar regiao\n      let regiao;\n      if(envVariables.dentroLimites(self.state.center)){\n        regiao=0;\n      }     \n      else{\n        alert(\"Região ainda não suportada\");\n        return;\n      }\n      const sheet = doc.sheetsByIndex[regiao];\n      if(envVariables.rows===undefined) envVariables.rows = await sheet.getRows();\n      const rows = envVariables.rows;\n      // Total row count\n      self.setState({ rowCount: rows.length });\n      \n      // rows.filter( (x) => { return !x.Data}).map( (x) => {\n      //   x.Dados = JSON.stringify(\n      //     { \n      //       \"Roaster\": x.Roaster, \n      //       \"URL\": x.URL, \n      //       \"City\": x.City, \n      //       \"Coordinates\": x.Coordinates, \n      //       \"DateISO\": x.DateISO, \n      //       \"Telefone\": x.Telefone, \n      //       \"DiaSemana\": x.DiaSemana,\n      //       \"Horario\": x.Horario,\n      //       \"AlimentoEntregue\": x.AlimentoEntregue\n      //     }\n      //   );\n      //   (async function main(x){\n          \n      //   await x.save();\n      //   })(x);\n\n      // })\n      rows.forEach((x) => {\n        let dados = JSON.parse(x.Dados);\n        for(let key in dados){\n          x[key] = dados[key];\n        }\n        // x.Roaster = dados.Roaster;\n        // x.URL = dados.URL;\n        // x.City = dados.City;\n        // x.DateISO = dados.DateISO;\n        // x.DiaSemana = dados.DiaSemana;\n        // x.Horario = dados.Horario;\n        // x.Mes = dados.Mes;\n        // x.AlimentoEntregue = dados.AlimentoEntregue;\n        // x.RedeSocial = dados.RedeSocial;\n        // x.Avaliacao = dados.Avaliacao;\n        \n        if (dados.Coordinates) { x.mapCoords = JSON.parse(x.Coordinates); \n          if(dados.Telefone) {\n            try{\n              x.Telefone = aes.decrypt(x.Telefone);\n            }catch(e){\n              //problema ao decriptar, string nao esta no formato hex\n            }\n          } \n        }\n       \n      });\n      self.setState({ dataMaps: rows });\n\n      // var needsUpdates = rows.filter((x) => { x = JSON.parse(x); return !x.Coordinates; });\n      // if(needsUpdates.length === 0) console.log(\"nao precisa atualizar\");\n      // if (needsUpdates && needsUpdates.length > 0) {\n      //     for (let index in needsUpdates) {\n      //       // if(needsUpdates[index]._rawData.length===0) needsUpdates[index].delete(); //se deixar rows vazias na planilha\n      //         let city = needsUpdates[index].City;\n      //         setTimeout(() => \n      //             {\n      //                 (async function main() {\n      //                     try{\n      //                         let providerResult = await provider.search({ query: city.replace('-',\",\") + ', Brazil' });\n                      \n      //                         if(providerResult.length !== 0 ){\n      //                             // throw new Error(\"endereco-nao-encontrado\");\n                      \n      //                             console.log(providerResult);\n      //                             let latlon = [providerResult[0].y, providerResult[0].x];\n      //                             needsUpdates[index].Coordinates = JSON.stringify(latlon); // Convert obj to string\n      //                             //needsUpdates[index].mapCoords = latlon;\n      //                             await needsUpdates[index].save(); // Save to remote Google Sheet\n      //                         }\n      //                     }catch(e){\n      //                         console.log(\"ERRO\");\n      //                         console.log(e);\n      //                     }\n      //                 })();\n                  \n      //             },1300                        \n      //         );\n              \n      //     }\n      //   self.setState({ dataMaps: rows });\n      // }\n\n      // Loading message \n      self.setState({ isLoading: false })\n\n    })(self);\n\n    window.fixarPonto = function (endereco, coords){\n      (async function main(endereco, coords) {\n        try{\n          await doc.useServiceAccountAuth({\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n      \n          await doc.loadInfo(); // Loads document properties and worksheets\n      \n          const sheet = doc.sheetsByIndex[0];\n          \n          if(envVariables.rows===undefined) envVariables.rows = await sheet.getRows();\n          const rows = envVariables.rows;\n\n          let rowEncontrada = rows.filter( (x) => \n          {\n            return JSON.parse(x.Dados).City.includes(endereco);\n          }\n          );\n\n          rowEncontrada.forEach( (x) => \n          {\n            let dadosNovos = JSON.parse(x.Dados);\n            dadosNovos.Coordinates = JSON.stringify(coords);\n            x.Dados = JSON.stringify(dadosNovos);\n          });\n\n          for(let x of rowEncontrada) await x.save();\n\n        }catch(e){\n          \n        }\n        \n      })(endereco, coords);\n    }\n\n    //retornar os pontos proximos a 5km\n    window.distance = function(){\n      const rows = envVariables.rows;\n      let proximos = [];\n      rows.forEach( (x) => {\n        let dado = JSON.parse(x.Dados);\n        if(dado.Coordinates){\n          let coords = JSON.parse(dado.Coordinates);\n          let distancia = envVariables.distanceInKmBetweenEarthCoordinates(\n            envVariables.currentLocation[0], \n            envVariables.currentLocation[1], \n            coords[0], \n            coords[1]);\n            dado.distancia = distancia;\n          if(distancia < 5) proximos.push(dado);\n        }\n      });\n      \n      proximos.sort(function(a,b){\n        return a.distancia - b.distancia;\n      });\n      console.log(proximos);\n\n    }\n    window.stats = function (){\n      (async function main() {\n        try{\n          await doc.useServiceAccountAuth({\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n      \n          await doc.loadInfo(); // Loads document properties and worksheets\n      \n          const sheet = doc.sheetsByIndex[0];\n          \n          if(envVariables.rows===undefined) envVariables.rows = await sheet.getRows();\n          const rows = envVariables.rows;\n  \n          let rowEncontrada = rows.filter( (x) => \n          {\n            return JSON.parse(x.Dados).clicado;\n          }\n          );\n          var SortedPoints = [];\n          var tmp;\n          rowEncontrada.forEach( (x) => \n          {\n            let dadosNovos = JSON.parse(x.Dados);\n            if(dadosNovos.Telefone) dadosNovos.Telefone = \"https://wa.me/55\"+aes.decrypt(dadosNovos.Telefone);\n            SortedPoints.push(dadosNovos);\n            for (var i = SortedPoints.length - 1; i > 0 && SortedPoints[i].clicado > SortedPoints[i-1].clicado; i--) {\n                tmp = SortedPoints[i];\n                SortedPoints[i] = SortedPoints[i-1];\n                SortedPoints[i-1] = tmp;\n            }\n          });\n          console.log(\"mais clicados\");\n          console.log(SortedPoints);\n\n          \n          rowEncontrada = rows.filter( (x) => \n          {\n            return JSON.parse(x.Dados).clickTel;\n          }\n          );\n          var SortedPoints = [];\n          var tmp;\n          rowEncontrada.forEach( (x) => \n          {\n            let dadosNovos = JSON.parse(x.Dados);\n            dadosNovos.Telefone = \"https://wa.me/55\"+aes.decrypt(dadosNovos.Telefone);\n            SortedPoints.push(dadosNovos);\n            for (var i = SortedPoints.length - 1; i > 0 && SortedPoints[i].clickTel > SortedPoints[i-1].clickTel; i--) {\n                tmp = SortedPoints[i];\n                SortedPoints[i] = SortedPoints[i-1];\n                SortedPoints[i-1] = tmp;\n            }\n          });\n          console.log(\"mais clicados em telefone\");\n          console.log(SortedPoints);\n\n          rowEncontrada = rows.filter( (x) => \n          {\n            return JSON.parse(x.Dados).AlimentoEntregue;\n          }\n          );\n          var SortedPoints = [];\n          var tmp;\n          rowEncontrada.forEach( (x) => \n          {\n            let dadosNovos = JSON.parse(x.Dados);\n            SortedPoints.push(dadosNovos);\n            for (var i = SortedPoints.length - 1; i > 0 && SortedPoints[i].AlimentoEntregue > SortedPoints[i-1].AlimentoEntregue; i--) {\n                tmp = SortedPoints[i];\n                SortedPoints[i] = SortedPoints[i-1];\n                SortedPoints[i-1] = tmp;\n            }\n          });\n          console.log(\"mais entregues\");\n          console.log(SortedPoints);\n\n\n          rowEncontrada = rows.filter( (x) => \n          {\n            return JSON.parse(x.Dados).Avaliacao;\n          }\n          );\n          var SortedPoints = [];\n          var tmp;\n          rowEncontrada.forEach( (x) => \n          {\n            let dadosNovos = JSON.parse(x.Dados);\n\n            let AvaliacaoData = {nota:0, totalClicks:0};\n            if(dadosNovos.Avaliacao){\n                AvaliacaoData.totalClicks = (dadosNovos.Avaliacao[\"5\"]+dadosNovos.Avaliacao[\"4\"]+dadosNovos.Avaliacao[\"3\"]+dadosNovos.Avaliacao[\"2\"]+dadosNovos.Avaliacao[\"1\"]);\n                if( AvaliacaoData.totalClicks === 0 ){\n                  //dadosNovos.Avaliacao=\"Nenhuma\";\n                }else{\n                  dadosNovos.Avaliacao = (dadosNovos.Avaliacao[\"5\"]*5 +\n                    dadosNovos.Avaliacao[\"4\"]*4 +\n                    dadosNovos.Avaliacao[\"3\"]*3 +\n                    dadosNovos.Avaliacao[\"2\"]*2 +\n                    dadosNovos.Avaliacao[\"1\"]*1)\n                    /            \n                    (AvaliacaoData.totalClicks);\n    \n                    AvaliacaoData.nota = Math.round(dadosNovos.Avaliacao * 100)/100;\n                    AvaliacaoData.nota=AvaliacaoData.nota*100000+AvaliacaoData.totalClicks;\n                }\n            }\n    \n            //AvaliacaoData.nota = dadosNovos.Avaliacao;\n\n            if(AvaliacaoData.nota>0) SortedPoints.push({...JSON.parse(x.Dados),\"nota\":AvaliacaoData.nota});\n            for (var i = SortedPoints.length - 1; i > 0 && SortedPoints[i].nota > SortedPoints[i-1].nota; i--) {\n                tmp = SortedPoints[i];\n                SortedPoints[i] = SortedPoints[i-1];\n                SortedPoints[i-1] = tmp;\n            }\n          });\n          console.log(\"maiores notas\");\n          console.log(SortedPoints);          \n\n  \n        }catch(e){\n          \n        }\n        \n      })();\n    }\n\n//     window.planilhacsv = function (){\n//       (async function main() {\n//         try{\n//           await doc.useServiceAccountAuth({\n//             client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n//             private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n//           });\n      \n//           await doc.loadInfo(); // Loads document properties and worksheets\n      \n//           const sheet = doc.sheetsByIndex[0];\n          \n//           if(envVariables.rows===undefined) envVariables.rows = await sheet.getRows();\n//           const rows = envVariables.rows;\n  \n//           let rowEncontrada = rows.filter( (x) => \n//           {\n//             return JSON.parse(x.Dados).Telefone;\n//           }\n//           );\n//           var planilhacsv=\"Situação,Telefone,coords,RedeSocial\\n\";\n//           var tmp;\n//           var result = {};\n//           rowEncontrada.forEach( (x) => \n//           {\n//             let y = JSON.parse(x.Dados);\n//             planilhacsv+=[y.Roaster,aes.decrypt(y.Telefone),y.Coordinates,y.RedeSocial].toString()+\"\\n\";\n//           });\n//           console.log(planilhacsv);\n\n//           /**\n//            * \n//            * {\n//     \"11\": \"São Paulo\",\n//     \"12\": \"São Paulo\",\n//     \"13\": \"São Paulo\",\n//     \"14\": \"São Paulo\",\n//     \"15\": \"São Paulo\",\n//     \"16\": \"São Paulo\",\n//     \"17\": \"São Paulo\",\n//     \"18\": \"São Paulo\",\n//     \"19\": \"São Paulo\",\n//     \"21\": \"Rio de Janeiro\",\n//     \"22\": \"Rio de Janeiro\",\n//     \"24\": \"Rio de Janeiro\",\n//     \"27\": \"Espírito Santo\",\n//     \"28\": \"Espírito Santo\",\n//     \"31\": \"Minas Gerais\",\n//     \"32\": \"Minas Gerais\",\n//     \"33\": \"Minas Gerais\",\n//     \"34\": \"Minas Gerais\",\n//     \"35\": \"Minas Gerais\",\n//     \"37\": \"Minas Gerais\",\n//     \"38\": \"Minas Gerais\",\n//     \"41\": \"Paraná\",\n//     \"42\": \"Paraná\",\n//     \"43\": \"Paraná\",\n//     \"44\": \"Paraná\",\n//     \"45\": \"Paraná\",\n//     \"46\": \"Paraná\",\n//     \"47\": \"Santa Catarina\",\n//     \"48\": \"Santa Catarina\",\n//     \"49\": \"Santa Catarina\",\n//     \"51\": \"Rio Grande do Sul\",\n//     \"53\": \"Rio Grande do Sul\",\n//     \"54\": \"Rio Grande do Sul\",\n//     \"55\": \"Rio Grande do Sul\",\n//     \"61\": \"Distrito Federal\",\n//     \"62\": \"Goiás\",\n//     \"63\": \"Tocantins\",\n//     \"64\": \"Goiás\",\n//     \"65\": \"Mato Grosso\",\n//     \"66\": \"Mato Grosso\",\n//     \"67\": \"Mato Grosso do Sul\",\n//     \"68\": \"Acre\",\n//     \"69\": \"Rondônia\",\n//     \"71\": \"Bahia\",\n//     \"73\": \"Bahia\",\n//     \"74\": \"Bahia\",\n//     \"75\": \"Bahia\",\n//     \"77\": \"Bahia\",\n//     \"79\": \"Sergipe\",\n//     \"81\": \"Pernambuco\",\n//     \"82\": \"Alagoas\",\n//     \"83\": \"Paraíba\",\n//     \"84\": \"Rio Grande do Norte\",\n//     \"85\": \"Ceará\",\n//     \"86\": \"Piauí\",\n//     \"87\": \"Pernambuco\",\n//     \"88\": \"Ceará\",\n//     \"89\": \"Piauí\",\n//     \"91\": \"Pará\",\n//     \"92\": \"Amazonas\",\n//     \"93\": \"Pará\",\n//     \"94\": \"Pará\",\n//     \"95\": \"Roraima\",\n//     \"96\": \"Amapá\",\n//     \"97\": \"Amazonas\",\n//     \"98\": \"Maranhão\",\n//     \"99\": \"Maranhão\"\n// }\n//            */\n\n  \n//         }catch(e){\n          \n//         }\n        \n//       })();\n//     }\n  }\n\n  \n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header rowCountProp={this.state.rowCount} />\n        {/* <InserirEndereco/>\n        <MyLocationButton location={this.state.center}/> */}\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={8}>\n            <Paper id=\"CoffeeMap\" className=\"fadeIn\">\n              {this.state.isLoading\n                ? <div className=\"flexLoading\"><div className=\"loading\">Carregando...</div></div>\n                : <CoffeeMap \n                dataMapsProp={this.state.dataMaps} \n                location={this.state.center} \n                tileMapOption={this.state.tileMapOption} \n                removerPonto={this.removerPonto} \n                verificarPonto={this.verificarPonto} \n                entregarAlimento={this.entregarAlimento}\n                avaliar={this.avaliar}\n                filtro={this.state.filtro}\n                contabilizarClicado={this.contabilizarClicado}\n                clicouTelefone={this.clicouTelefone}\n                />\n              }\n            </Paper>\n          </Grid>\n          \n          <Grid item xs={12} sm={4}>\n          {/* https://smartdevpreneur.com/setting-material-ui-grid-item-height/ */}\n            <Paper id=\"CoffeeTable\" style={{height:'100%'}} className=\"toolPanel2\">\n              {this.state.isLoading\n                ? <div className=\"flexLoading\"><div className=\"loading\"><CircularProgress /></div></div>\n                // : <CoffeeTable dataMapsProp={this.state.dataMaps} dataHeaderProp={this.state.dataHeader} />\n              : \n              \n    <div className='relativePosition'>\n      {/* <a target='_blank' rel=\"noreferrer\" href=\"https://api.whatsapp.com/send/?phone=5583996157234&text=quero+me+voluntariar+no+mapa+fome&app_absent=0\">quero me voluntariar no Mapa Fome</a>\n      <br/> */}\n      filtro atual:  \n              <select ref= {this.dropDownMenuFiltro} id=\"filtro\" onChange={this.setFiltro}>\n                <option value=\"Todos\">Todos</option>\n                <option value=\"Doadores\">Doadores</option>\n                <option value=\"CestaBasica\">Cesta básica</option>\n                <option value=\"MoradorRua\">Situação de rua</option>\n                <option value=\"Refeição Pronta\">Refeição Pronta</option>\n                <option value=\"RedeSocial\">Rede Social</option>\n                <option value=\"Verificados\">possui CNPJ</option>\n                <option value=\"Nenhum\">Nenhum</option>\n              </select>\n              <Checkbox\n                checked={this.state.telefoneFilterLocal}\n                onChange={this.telefoneFilterChange}\n                inputProps={{ 'aria-label': 'controlled' }}\n              /> Telefone\n                {/* RADIO BUTTON */}\n        <div className='relativePosition'>\n          <ul>\n            \n          <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Teste\"\n                  checked={this.state.alimento === \"Teste\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span> Opção para testar a ferramenta </span>\n              </label>\n            </li>\n          <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Alimento pronto\"\n                  checked={this.state.alimento === \"Alimento pronto\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='yellowHub'> Pessoa precisando de Alimento pronto <img width=\"30px\" height=\"30px\" src={coffeeBean}></img></span>\n              </label>\n            </li>\n\n            <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Alimento de cesta básica\"\n                  checked={this.state.alimento === \"Alimento de cesta básica\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='yellowHub'> Preciso de Alimento de cesta básica <img width=\"30px\" height=\"30px\" src={coffeeBean}></img></span>\n              </label>\n            </li>\n                        \n            <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Doador\"\n                  checked={this.state.alimento === \"Doador\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='blueHub'> Recebo para doar <img width=\"30px\" height=\"30px\" src={hub}></img></span>\n              </label>\n            </li>\n\n            <li>\n            <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"EntregaAlimentoPronto\"\n                  checked={this.state.alimento === \"EntregaAlimentoPronto\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='redHub'> Entrego refeições em ponto fixo <img width=\"30px\" height=\"30px\" src={red}></img></span>\n              \n                <br></br>\n                <select ref= {this.dropDownMenuSemanaEntregaAlimentoPronto} style={{\"display\":\"none\"}} id=\"dia\" onChange={this.setDiaSemana}>\n                <option value=\"nas Segundas\">nas Segundas</option>\n                <option value=\"nas Terças\">nas Terças</option>\n                <option value=\"nas Quartas\">nas Quartas</option>\n                <option value=\"nas Quintas\">nas Quintas</option>\n                <option value=\"nas Sextas\">nas Sextas</option>\n                <option value=\"nos Sábados\">nos Sábados</option>\n                <option value=\"nos Domingos\">nos Domingos</option>\n                <option value=\"todo dia\">todo dia</option>\n              </select>\n              <select ref= {this.dropDownMenuHorarioEntregaAlimentoPronto} style={{\"display\":\"none\"}} id=\"horario\" onChange={this.setHorario}>\n                <option value=\"manhã 05:30\">manhã 05:30</option>\n                <option value=\"manhã 06:30\">manhã 06:30</option>\n                <option value=\"manhã 09:30\">manhã 09:30</option>\n                <option value=\"tarde 13:30\">tarde 13:30</option>\n                <option value=\"tarde 16:30\">tarde 16:30</option>\n                <option value=\"noite 18:30\">noite 18:30</option>\n                <option value=\"noite 19:30\">noite 19:30</option>\n              </select>\n\n              \n              <select ref= {this.dropDownMenuMesEntregaAlimentoPronto} style={{\"display\":\"none\"}} id=\"mes2\" onChange={this.setMes}>\n                <option value=\"x4 por mês\">x4 por mês</option>\n                <option value=\"x3 por mês\">x3 por mês</option>\n                <option value=\"x2 por mês\">x2 por mês</option>\n                <option value=\"x1 por mês\">x1 por mês</option>\n              </select>\n              </label>\n            </li>\n\n            <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"PrecisandoBuscar\"\n                  checked={this.state.alimento === \"PrecisandoBuscar\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='greenHub'> Tenho alimento perto de se perder <a target='_blank' rel=\"noreferrer\" href=\"https://www.camara.leg.br/noticias/670937-nova-lei-incentiva-empresas-a-doarem-alimentos-e-refeicoes-para-pessoas-vulneraveis/\">(lei)</a>  <img width=\"30px\" height=\"30px\" src={green}></img></span>\n              \n              <br></br>\n              <select ref= {this.dropDownMenuSemanaPrecisandoBuscar} style={{\"display\":\"none\"}} id=\"dia2\" onChange={this.setDiaSemana}>\n                <option value=\"Hoje\">Hoje</option>\n                <option value=\"nas Segundas\">nas Segundas</option>\n                <option value=\"nas Terças\">nas Terças</option>\n                <option value=\"nas Quartas\">nas Quartas</option>\n                <option value=\"nas Quintas\">nas Quintas</option>\n                <option value=\"nas Sextas\">nas Sextas</option>\n                <option value=\"nos Sábados\">nos Sábados</option>\n                <option value=\"nos Domingos\">nos Domingos</option>\n              </select>\n              <select ref= {this.dropDownMenuHorarioPrecisandoBuscar} style={{\"display\":\"none\"}} id=\"horario2\" onChange={this.setHorario}>\n                <option value=\"manhã 05:30\">manhã 05:30</option>\n                <option value=\"manhã 06:30\">manhã 06:30</option>\n                <option value=\"manhã 09:30\">manhã 09:30</option>\n                <option value=\"tarde 13:30\">tarde 13:30</option>\n                <option value=\"tarde 16:30\">tarde 16:30</option>\n                <option value=\"noite 18:30\">noite 18:30</option>\n                <option value=\"noite 19:30\">noite 19:30</option>\n              </select>\n              \n              <select ref= {this.dropDownMenuMesPrecisandoBuscar} style={{\"display\":\"none\"}} id=\"mes2\" onChange={this.setMes}>\n                <option value=\"x4 por mês\">x4 por mês</option>\n                <option value=\"x3 por mês\">x3 por mês</option>\n                <option value=\"x2 por mês\">x2 por mês</option>\n                <option value=\"x1 por mês\">x1 por mês</option>\n              </select>\n              </label>\n              \n            </li>\n\n          \n          </ul>\n    </div>\n        {/* FIM RADIO BUTTON */}\n            <div className='relativePosition'>\n                \n                <input className=\"TextField tfMarginUp\" type=\"text\" placeholder='Insira DDD telefone se quiser' /*value={this.state.telefone}*/ onBlur={this.handleChangeTelefone} />\n                <input className='nLocal' type=\"text\" placeholder='nº' /*value={this.state.numero}*/ onBlur={this.handleChangeNumero} />\n                \n                <br/>\n                <select style={{\"display\":\"none\"}} ref= {this.dropDownMenuRedeSocial}>\n                  <option value=\"instagram.com/\">Insta</option>\n                  <option value=\"facebook.com/\">Face</option>\n                </select>\n                <input ref= {this.redesocialRef} style={{\"display\":\"none\"}} className=\"TextField\" type=\"text\" placeholder='@' /*value={this.state.site}*/ onBlur={this.handleChangeRedeSocial} />\n                \n                <br></br>\n                <div className='buttonsSidebySide'>\n                  <MyLocationButton\n                  location={this.state.center} \n                  alimento={this.state.alimento} \n                  telefone={this.state.telefoneEncryptado}\n                  diaSemana={this.state.diaSemana}\n                  horario={this.state.horario}\n                  numero={this.state.numero}\n                  redesocial={this.state.redesocial}\n                  mes={this.state.mes}\n                  /> \n\n                  {this.state.isLoading?\n                  <CircularProgress/>\n                  :<button className=\"SubmitButton buttonsSidebySide\" onClick={this.handleClickMap}>marcar Local Tocado</button>}\n                </div>\n                <figure><center>OU</center></figure>\n                <InserirEndereco \n                alimento={this.state.alimento} \n                telefone={this.state.telefoneEncryptado}\n                diaSemana={this.state.diaSemana}\n                horario={this.state.horario}\n                redesocial={this.state.redesocial}\n                mes={this.state.mes}\n                /> \n\n                {/* <input className=\"TextField\" type=\"text\" placeholder='Insira o site do projeto' value={this.state.site} onChange={this.handleChangeSite} />\n                <br></br> */}\n                \n\n               \n              </div>\n              \n          </div>\n               \n              }\n            </Paper>\n          </Grid>\n\n\n          <Grid item xs={12} sm={12}>\n            <Paper id=\"MoreInfo\" style={{height:'100%'}} >\n            {/* Contribua também Sinalizando projetos que arrecadam e entregam alimentos na sua cidade, <a target='_blank' rel=\"noreferrer\" href=\"https://www.google.com.br/search?q=suaCidade+~voluntarios+OR+%22grupo%22+AND+~doacoes+AND+%22alimentos%22+%2290000..99999%22+OR+%228000..9999%22\">entrando em contato com eles</a> para eles sinalizarem\n             <br/>  */}\n            <a className=\"wpbtn\" title=\"share to whatsapp\" href=\"whatsapp://send?text=Para marcar no mapa e alimentar quem tem fome, achei esse site: www.mapafome.com.br\"> <img className=\"wp\" src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/>\n                Compartilhar no Whatsapp</a>\n                <a style={{float:'right'}} target='_blank' rel=\"noreferrer\" href=\"https://t.me/share?url=www.mapafome.com.br&amp;text=Para%20marcar%20no%20mapa%20e%20alimentar%20quem%20tem%20fome%2C%20achei%20esse%20site%3A\" className=\"tgme_widget_share_btn\"><img className=\"telegram\" src=\"https://telegram.org/img/WidgetButton_LogoSmall.png\" alt=\"\"></img></a>\n\n                <br></br>\n              Mapeados: {this.state.rowCount} \n              <a href='https://play.google.com/store/apps/details?id=br.com.mapafome'><img style={{height:'55px'}} alt='Disponível no Google Play' src='https://play.google.com/intl/en_us/badges/static/images/badges/pt_badge_web_generic.png'/></a>\n              <a target='_blank' rel=\"noreferrer\" href=\"https://instagram.com/mapafome\"><img style={{height:'55px'}}src={insta}/></a>\n            \n              <br></br>No mapa clique na bolinha para saber como ajudar.<br></br> Você pode se incluir ou incluir outra pessoa, <br></br>selecione a situação e confirme o local (mais informações <a target='_blank' rel=\"noreferrer\" href=\"https://g1.globo.com/pe/pernambuco/noticia/2022/02/10/site-criado-por-estudante-da-ufpe-aproxima-pessoas-que-estao-passando-fome-e-doadores-de-comida.ghtml\">na matéria da Globo</a>):\n              \n              <br></br>\n              \n                {/* <img src={qr} alt=\"\"/> */}\n                {/* <CleanOld></CleanOld> */}\n                <img className=\"ods\" alt=\"\" src=\"https://brasil.un.org/profiles/undg_country/themes/custom/undg/images/SDGs/pt-br/SDG-2.svg\"></img> No Mapa Fome você pode encontrar a quem ajudar e fazer novas marcações, caso uma opção represente você ou outra pessoa, selecione, coloque número para contato se quiser, e confirme com localização atual ou endereço e número\n                <br></br><span className=\"yellowHub\">  em amarelo são pessoas <img width=\"30px\" height=\"30px\" src={coffeeBean}></img></span>em vulnerabilidade social e insegurança alimentar que estão com fome em casa ou na rua, --precisam de alimento\n                <br></br><span className=\"blueHub\">  em azul são pessoas <img width=\"30px\" height=\"30px\" src={hub}></img></span>que recebem alimentos ou recursos para distribuir alimento ou refeições na comunidade (exemplo: sopão solidário, ongs, voluntários) --precisam de doações\n                <br></br><span className=\"redHub\">  em vermelho são pessoas <img width=\"30px\" height=\"30px\" src={red}></img></span>que entregam refeição em ponto fixo na rua em certo dia na semana. --ponto de entrega de alimento pronto\n                <br></br><span className=\"greenHub\">  em verde são pessoas <img width=\"30px\" height=\"30px\" src={green}></img></span>que trabalham com alimentos e precisam destinar os alimentos não comercializados ou não consumidos e não tem pessoas para buscar esses alimentos (exemplo: restaurante, hotel, lanchonete, feira livre, supermercados) --precisam de voluntários para buscar \n              \n                \n                <br></br><br></br>serve para \n\n<br></br>-mapear pessoas que estão com fome na rua ou em casa\n<br></br>-mapear iniciativas que recebem recursos para fazer doação\n<br></br>-mostrar no mapa onde e quando tem alimento sendo distribuído\n<br></br>-mostrar no mapa lugares comerciais ou residenciais que precisam de voluntários ou necessitados para buscar alimentos não consumidos ou não comercializados\n<br></br> é possível traçar uma rota ao destino ao clicar Ir para o destino, e ser redirecionado para o Google Maps\n<br></br>\ncontato: <a target='_blank' rel=\"noreferrer\" href=\"https://mail.google.com/mail/u/0/?fs=1&to=rslgp@cin.ufpe.br&tf=cm\" >rslgp@cin.ufpe.br</a> <a target='_blank' rel=\"noreferrer\"  href='https://wa.me/5583996157234'>(83) 9.9615-7234</a>           \n<Sugestao/>\n        <a target='_blank' rel=\"noreferrer\" href=\"./privacy.html\">Privacy Policy</a>\n        <span> - </span>\n        <a target='_blank' rel=\"noreferrer\" href=\"./terms.html\">Terms</a>\n        </Paper>\n          </Grid>\n\n        </Grid>\n\n        <Grid item xs={12} sm={12}><Paper>\n        <iframe src=\"https://docs.google.com/forms/d/e/1FAIpQLSdb8SQeL1bo8lf2mAcZr1pvGOcgIjc4zcMxdtJLOfMIAf8xZw/viewform?embedded=true\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">Loading…</iframe>\n      \n        </Paper></Grid>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","const envVariables = {\r\n    \"mapArea\": {\r\n        \"teto\":2.20,\r\n        \"chao\":-14.09,\r\n        \"paredeEsquerda\":-52.42,\r\n        \"paredeDireita\":-34.32\r\n    },\r\n    \"lastMarked\":undefined,\r\n    \"dentroLimites\": (localizacao) => {\r\n        let permissao = false;\r\n        permissao = \r\n            //cima baixo\r\n            (localizacao[0]< envVariables.mapArea.teto && localizacao[0] > envVariables.mapArea.chao\r\n            &&\r\n            //esquerda direita\r\n            localizacao[1]>envVariables.mapArea.paredeEsquerda && localizacao[1] < envVariables.mapArea.paredeDireita        \r\n            ) || (\r\n              //cima baixo\r\n              localizacao[0]<-14.18 && localizacao[0] > -32.66\r\n              &&\r\n              //esquerda direita\r\n              localizacao[1]>-55.55 && localizacao[1] < -38.06        \r\n            );\r\n        return permissao;\r\n    },\r\n    \"telefoneFilter\":false,\r\n    \"distanceInKmBetweenEarthCoordinates\": ( lat1, lon1, lat2, lon2 ) => {\r\n        var earthRadiusKm = 6371;\r\n\r\n        var dLat =  (lat2-lat1) * Math.PI / 180;\r\n        var dLon =  (lon2-lon1) * Math.PI / 180;\r\n      \r\n        lat1 = lat1 * Math.PI / 180;\r\n        lat2 = lat2 * Math.PI / 180;\r\n      \r\n        var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n                Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2); \r\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n\r\n        return earthRadiusKm * c;\r\n    },\r\n    \"currentLocation\": [],\r\n    \"criarRow\": (dadosRow) => {\r\n\r\n        if(dadosRow.numero !== ''){\r\n            dadosRow.numero = \", nº\"+dadosRow.numero;\r\n        }\r\n        \r\n        \r\n        let dadosJSON = {\r\n            \"Roaster\": dadosRow.alimento, \r\n            \"DateISO\": new Date().toISOString(),\r\n            \"AlimentoEntregue\":0,\r\n            \"Avaliacao\": {\r\n                \"1\":0,\r\n                \"2\":0,\r\n                \"3\":0,\r\n                \"4\":0,\r\n                \"5\":0\r\n            },\r\n\r\n        };\r\n        if(dadosRow.numero!==\"\") dadosJSON.URL = dadosRow.numero;\r\n        if(dadosRow.coords!==\"\") dadosJSON.Coordinates = JSON.stringify(dadosRow.coords);\r\n        if(dadosRow.telefone!==\"\") dadosJSON.Telefone = dadosRow.telefone;\r\n        if(dadosRow.diaSemana!==\"\") {dadosJSON.DiaSemana = dadosRow.diaSemana; dadosJSON.Horario = dadosRow.horario}\r\n        if(dadosRow.redesocial!==\"\") {dadosRow.redesocial=dadosRow.redesocial.replace(\"@\",\"\");dadosJSON.RedeSocial = dadosRow.redesocial;}\r\n        if(dadosRow.mes!==\"\") dadosJSON.Mes = dadosRow.mes;\r\n        //if(dadosRow.endereco!==\"\") dadosJSON.City = dadosRow.endereco;\r\n        const row = {\r\n            Dados: JSON.stringify(dadosJSON)\r\n        };\r\n\r\n        return row;\r\n\r\n    },\r\n    \"rows\":undefined\r\n}\r\n\r\nexport default envVariables;","export default __webpack_public_path__ + \"static/media/bean.8d52f968.svg\";"],"sourceRoot":""}