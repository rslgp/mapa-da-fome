{"version":3,"sources":["images/hub.svg","images/green.svg","images/red.svg","components/variaveisAmbiente.js","components/map.js","images/currentLocation.svg","images/currentLocationSmall.svg","components/twemoji.js","components/header.js","components/tableCount.js","components/googlesheets/endereco.js","components/googlesheets/mylocation.js","components/googlesheets/sugestao.js","images/qr.svg","components/googlesheets/cleanold.js","images/insta.svg","App.js","index.js","images/bean.svg"],"names":["envVariables","undefined","localizacao","mapArea","teto","chao","paredeEsquerda","paredeDireita","lat1","lon1","lat2","lon2","dLat","Math","PI","dLon","a","sin","cos","atan2","sqrt","alimento","numero","endereco","coords","telefone","diaSemana","horario","redesocial","dadosJSON","Date","toISOString","URL","Coordinates","JSON","stringify","Telefone","DiaSemana","Horario","RedeSocial","Dados","TimeAgo","addDefaultLocale","pt","timeAgo","global","lastMarked","lastMarkedCoords","myIcon","L","Icon","iconUrl","coffeeBean","iconSize","Point","className","hubIcon","hub","greenIcon","green","redIcon","red","CurrentLocation","CurrentLocationSVG","interactive","CurrentLocationSmall","CurrentLocationSmallSVG","TestIcon","markerclusterOptionsPrecisando","cluster","childCount","getChildCount","c","DivIcon","html","markerclusterOptionsAnjos","markerclusterOptionsEntrega","CoffeeMap","props","state","dataMaps","center","location","filtro","screensizeZoom","window","innerWidth","style","height","width","zoom","maxZoom","this","attributionControl","whenReady","map","target","on","e","latlng","lat","lng","remove","marker","icon","draggable","addTo","position","BaseLayer","checked","name","url","attribution","prefix","eventHandlers","click","preventDefault","renderSwitch","renderTestes","mapCoords","DateISO","Avaliacao","googleDirection","dateMarked","format","now","getTime","urlTelefone","legivelTelefone","replace","contato","length","href","rel","avaliacaoData","totalClicks","round","nota","precisandoMsg","AlimentoEntregue","Roaster","src","margin","viewBox","focusable","class","d","value","onChange","event","newValue","avaliar","onClick","removerPonto","entregarAlimento","spiderfyDistanceMultiplier","showCoverageOnHover","maxClusterRadius","iconCreateFunction","dataMapsProp","filter","x","dataItem","k","City","CurrentIcon","setupVariables","telefoneFilter","console","log","configPopup","msec","mins","floor","param","renderDoadoresAzul","renderDoadoresVerde","renderNecessitados","renderCestaBasica","renderDoadoresVermelho","nextProps","Component","Twemoji","emoji","dangerouslySetInnerHTML","__html","twemoji","parse","folder","ext","memo","Header","rowCountProp","id","AppBar","Toolbar","Typography","variant","GoogleSpreadsheet","require","provider","OpenStreetMapProvider","doc","process","NameForm","isLoading","handleChange","bind","handleSubmit","setState","self","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsByIndex","alert","row","criarRow","search","query","providerResult","latlon","y","Error","addRow","reload","CircularProgress","onSubmit","type","placeholder","loadCells","getCell","saveUpdatedCells","dentroLimites","regiao","Sugestoes","Sugestao","cookies","Cookies","aes","AesEncryption","ReactGA","initialize","pageview","pathname","setSecretKey","App","dataHeader","label","rowCount","telefoneEncryptado","telefoneFilterLocal","site","dropDownMenuSemanaEntregaAlimentoPronto","React","createRef","dropDownMenuHorarioEntregaAlimentoPronto","dropDownMenuSemanaPrecisandoBuscar","dropDownMenuHorarioPrecisandoBuscar","dropDownMenuFiltro","redesocialRef","dropDownMenuRedeSocial","handleChangeNumero","setTipoAlimento","handleChangeTelefone","setDiaSemana","setHorario","setFiltro","handleClickMap","telefoneFilterChange","handleChangeRedeSocial","categoriaPonto","motivo","prompt","Motivo","Ponto","CategoriaPonto","r","getRows","rows","rowEncontrada","dadosNovos","save","avaliacao","cookieName","pontos","get","coordsString","includes","cookieExpireDate","setDate","getDate","set","path","expires","isPrecisandoBuscar","isEntregaAlimentoPronto","isDoador","current","display","selectedOptions","telefoneValue","encrypt","getLatLng","navigator","geolocation","getCurrentPosition","currentLocation","latitude","longitude","forEach","dados","decrypt","fixarPonto","Grid","container","spacing","item","xs","sm","Paper","tileMapOption","ref","Checkbox","inputProps","insta","title","alt","float","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e71edee0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hub.4f920e1b.svg\";","export default __webpack_public_path__ + \"static/media/green.00533c2a.svg\";","export default __webpack_public_path__ + \"static/media/red.651e6e29.svg\";","const envVariables = {\r\n    \"mapArea\": {\r\n        \"teto\":2.20,\r\n        \"chao\":-14.09,\r\n        \"paredeEsquerda\":-52.42,\r\n        \"paredeDireita\":-34.32\r\n    },\r\n    \"lastMarked\":undefined,\r\n    \"dentroLimites\": (localizacao) => {\r\n        let permissao = false;\r\n        permissao = \r\n            //cima baixo\r\n            (localizacao[0]< envVariables.mapArea.teto && localizacao[0] > envVariables.mapArea.chao\r\n            &&\r\n            //esquerda direita\r\n            localizacao[1]>envVariables.mapArea.paredeEsquerda && localizacao[1] < envVariables.mapArea.paredeDireita        \r\n            ) || (\r\n              //cima baixo\r\n              localizacao[0]<-14.18 && localizacao[0] > -32.66\r\n              &&\r\n              //esquerda direita\r\n              localizacao[1]>-55.55 && localizacao[1] < -38.06        \r\n            );\r\n        return permissao;\r\n    },\r\n    \"telefoneFilter\":false,\r\n    \"distanceInKmBetweenEarthCoordinates\": ( lat1, lon1, lat2, lon2 ) => {\r\n        var earthRadiusKm = 6371;\r\n\r\n        var dLat =  (lat2-lat1) * Math.PI / 180;\r\n        var dLon =  (lon2-lon1) * Math.PI / 180;\r\n      \r\n        lat1 = lat1 * Math.PI / 180;\r\n        lat2 = lat2 * Math.PI / 180;\r\n      \r\n        var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n                Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2); \r\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n\r\n        return earthRadiusKm * c;\r\n    },\r\n    \"currentLocation\": [],\r\n    \"criarRow\": (alimento, numero, endereco, coords, telefone, diaSemana, horario, redesocial) => {\r\n\r\n        if(numero !== ''){\r\n            numero = \", nº\"+numero;\r\n        }\r\n        \r\n        \r\n        let dadosJSON = {\r\n            \"Roaster\": alimento, \r\n            \"DateISO\": new Date().toISOString(),\r\n            \"AlimentoEntregue\":0,\r\n            \"Avaliacao\": {\r\n                \"1\":0,\r\n                \"2\":0,\r\n                \"3\":0,\r\n                \"4\":0,\r\n                \"5\":0\r\n            },\r\n\r\n        };\r\n        if(numero!==\"\") dadosJSON.URL = numero;\r\n        if(coords!==\"\") dadosJSON.Coordinates = JSON.stringify(coords);\r\n        if(telefone!==\"\") dadosJSON.Telefone = telefone;\r\n        if(diaSemana!==\"\") {dadosJSON.DiaSemana = diaSemana; dadosJSON.Horario = horario}\r\n        if(redesocial!==\"\") dadosJSON.RedeSocial = redesocial;\r\n        const row = {\r\n            Dados: JSON.stringify(dadosJSON)\r\n        };\r\n\r\n        return row;\r\n\r\n    }\r\n}\r\n\r\nexport default envVariables;","import React, { Component } from 'react';\nimport { MapContainer, Marker, TileLayer, Tooltip, AttributionControl, Popup, LayersControl } from \"react-leaflet\";\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport \"react-leaflet-markercluster/dist/styles.min.css\";\nimport coffeeBean from '../images/bean.svg';\nimport hub from '../images/hub.svg';\nimport green from '../images/green.svg';\nimport red from '../images/red.svg';\nimport CurrentLocationSVG from '../images/currentLocation.svg';\nimport CurrentLocationSmallSVG from '../images/currentLocationSmall.svg';\nimport TimeAgo from 'javascript-time-ago';\nimport Rating from '@mui/material/Rating';\n\nimport envVariables from './variaveisAmbiente';\n\nimport pt from 'javascript-time-ago/locale/pt.json';\nTimeAgo.addDefaultLocale(pt);\n\nconst timeAgo = new TimeAgo();\n\nglobal.lastMarked = undefined;\nglobal.lastMarkedCoords = undefined;\n\n// Leaflet custom marker\nconst myIcon = new L.Icon({\n    // Coffee bean attribution -- Thanks! https://commons.wikimedia.org/wiki/File:Coffee_bean_symbol.svg\n    iconUrl: coffeeBean,\n    iconSize: new L.Point(20, 20),\n    className: 'leaflet-bean-icon',\n});\n\n\n// Leaflet custom marker\nconst hubIcon = new L.Icon({\n    iconUrl: hub,\n    iconSize: new L.Point(30, 30),\n    className: 'leaflet-bean-icon',\n});\n\n// Leaflet custom marker\nconst greenIcon = new L.Icon({\n    iconUrl: green,\n    iconSize: new L.Point(35, 35),\n    className: 'leaflet-bean-icon',\n});\nconst redIcon = new L.Icon({\n    iconUrl: red,\n    iconSize: new L.Point(35, 35),\n    className: 'leaflet-bean-icon',\n});\n\nconst CurrentLocation = new L.Icon({\n    iconUrl: CurrentLocationSVG,\n    iconSize: new L.Point(150, 150),\n    className: 'leaflet-bean-icon',\n    interactive: false\n});\nconst CurrentLocationSmall = new L.Icon({\n    iconUrl: CurrentLocationSmallSVG,\n    iconSize: new L.Point(20, 20),\n    className: 'leaflet-bean-icon',\n    interactive: false\n});\n\nconst TestIcon = new L.Icon({\n    iconUrl: 'https://maps.gstatic.com/tactile/reveal/close_1x_16dp.png',\n    iconSize: new L.Point(10, 10),\n    className: 'leaflet-bean-icon',\n    interactive: false\n});\n\n\nconst markerclusterOptionsPrecisando = function (cluster) {\n        var childCount = cluster.getChildCount();\n        var c = ' marker-cluster-';\n        if (childCount < 10) {\n          c += 'small';\n        } \n        else if (childCount < 100) {\n          c += 'medium';\n        } \n        else {\n          c += 'large';\n        }\n       \n        return new L.DivIcon({ html: '<div><span>' + childCount + '</span></div>', \n         className: 'marker-cluster' + c + '-precisandoCluster', iconSize: new L.Point(40, 40) });\n        };\n\n  const markerclusterOptionsAnjos = (cluster) => {\n    var childCount = cluster.getChildCount();\n    var c = ' marker-cluster-';\n    if (childCount < 10) {\n      c += 'small';\n    } \n    else if (childCount < 100) {\n      c += 'medium';\n    } \n    else {\n      c += 'large';\n    }\n   \n    return new L.DivIcon({ html: '<div><span>' + childCount + '</span></div>', \n     className: 'marker-cluster' + c +'-anjosCluster', iconSize: new L.Point(40, 40) });\n    };\n\n    const markerclusterOptionsEntrega = (cluster) => {       \n        return new L.DivIcon({ html: '<div><span>' + cluster.getChildCount() + '</span></div>', \n         className: 'redHub marker-cluster', iconSize: new L.Point(40, 40) });\n    };\n\n\nclass CoffeeMap extends Component {\n\n    // Initial state\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            dataMaps: [],\n            center: props.location,\n            filtro: props.filtro,\n        }\n    }\n\n     //ATUALIZAR PROPS VINDAS DO PAI\n     static getDerivedStateFromProps(nextProps, state) {\n        if(state){\n          if (nextProps.filtro !== state.filtro){ \n            state.filtro=nextProps.filtro;\n          }\n        }\n        return state;\n      }\n\n    render() {\n\n        // Render map default zoom based on mobile breakpoint\n        const isMobile = window.innerWidth < 480;\n        const screensizeZoom = isMobile ? 7.25 : 8.5*1.2;\n\n        return (\n            <div>\n                <MapContainer\n                    style={{ height: \"89vh\", width: \"100%\" }}\n                    zoom={screensizeZoom}\n                    maxZoom={18}\n                    center={this.state.center}\n                    attributionControl={false}\n                    whenReady={(map) => {\n                        //console.log(map);\n                        map.target.on(\"click\", function (e) {\n                          //if(e.originalEvent.detail>=2)alert(e.originalEvent.detail);\n                          const { lat, lng } = e.latlng;\n                          //envVariables.lastMarked.latlng = [lat,lng];\n                        //   console.log(this);\n                        //   this.props.onClickMap([lat,lng]);\n                          if(envVariables.lastMarked) envVariables.lastMarked.remove();\n                          envVariables.lastMarked = L.marker([lat, lng], {icon:CurrentLocationSmall, draggable: false}).addTo(map.target);\n                        });\n                      }}\n                    >\n\n{/* https://leaflet-extras.github.io/leaflet-providers/preview/ */}\n{/* https://github.com/dhis2-club-tanzania/function-maintenance/blob/0dadaa96955156b6ddefc0fcf9dd54e45ffb9458/src/app/shared/modules/ngx-dhis2-visualization/modules/map/constants/tile-layer.constant.ts */}\n{/* https://www.arcgis.com/apps/mapviewer/index.html */}\n                    {/* <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n                     {/* <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n                    {/* <TileLayer url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n\n                    \n                     {/* {this.state.tileMapOption ? \n                     <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                     attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                 />\n                    :\n                    <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />\n                } */}\n\n                     {/* <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n                    {/* <TileLayer url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />  */}\n                    {/* <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />  */}\n                    <LayersControl position=\"bottomleft\">\n                    \n                    {/* <LayersControl.BaseLayer checked name=\"Esri\">\n                    <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}\"\n                        attribution='Tiles &copy; Esri'\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"Stamen-lite\">\n                    <TileLayer url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}{r}.png\"\n                        attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                    />\n                    </LayersControl.BaseLayer>\n                    \n                    <LayersControl.BaseLayer checked name=\"4\">\n                    <TileLayer url=\"https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"3\">\n                    <TileLayer url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"2\">\n                    <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"1\">\n                    <TileLayer url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer> */}\n                    <LayersControl.BaseLayer checked name=\"Waze\">\n                    <TileLayer url=\"https://worldtiles1.waze.com/tiles/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n                    {/* <LayersControl.BaseLayer checked name=\"Stamen-terrain\">\n                    <TileLayer url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/terrain/{z}/{x}/{y}{r}.png\"\n                        attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                    />\n                    </LayersControl.BaseLayer> */}\n                    <LayersControl.BaseLayer  name=\"Mapa\">\n                    <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                     attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OSM</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n\n                    <LayersControl.BaseLayer name=\"Satelite\">\n                    <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='https://www.arcgis.com/apps/mapviewer/index.html' target='_blank' rel='noreferrer'>Esri</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n\n                    \n                    </LayersControl>\n\n\n\n                    <AttributionControl\n                        position=\"bottomleft\"\n                        prefix={false}\n                    />\n                    \n                    <Marker\n                            icon= {CurrentLocation} \n                            key={\"currentPosition\"}\n                            center={this.state.center}\n                            position={this.state.center}\n\n                            eventHandlers={{\n                                click: (e) => { \n                                    e.preventDefault();\n                                }\n                            }}\n\n                            interactive={false}\n                        >\n                            \n                    {/* <Popup\n                        direction=\"auto\"\n                        offset={[2, 0]}\n                        opacity={1}>\n                        <span>você está aqui</span>\n                    </Popup> */}\n                        </Marker>\n\n                        {/* {(() => {\n                            switch(this.state.filtro) {\n                                case \"Todos\":\n                                    return ([\n                                        this.renderDoadoresAzul(),\n                                        this.renderDoadoresVerde(),\n                                        this.renderNecessitados(),\n                                        this.renderDoadoresVermelho()]\n                                    )\n                                    break;\n                                case \"Necessitados\":\n                                    return ([\n                                        this.renderNecessitados()]\n                                    )\n                                    break;\n                                case \"Doadores\":\n                                    return ([\n                                        this.renderDoadoresAzul(),\n                                        this.renderDoadoresVerde(),\n                                        this.renderDoadoresVermelho()]\n                                    )\n                                    break;\n                                case \"Refeição Pronta\":\n                                    return ([\n                                        this.renderDoadoresVerde(),\n                                        this.renderDoadoresVermelho()]\n                                    )\n                                    break;\n                            }\n                        })()} */}\n                        {this.renderSwitch(this.state.filtro)}\n                        {this.renderTestes()}\n\n                    \n                </MapContainer>\n            </div>\n        );\n    }\n\n    \n    setupVariables(mapCoords,DateISO,Telefone,Avaliacao){\n        let googleDirection = `https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`;\n                            \n        let dateMarked = timeAgo.format(Date.now() - (Date.now() - new Date(DateISO).getTime()) );\n         //if(DateISO) dateMarked\n        if(Telefone){\n            let urlTelefone = `whatsapp://send?phone=55${Telefone}`;\n            let legivelTelefone = Telefone.replace(/(\\d{2})(\\d{5})(\\d{4})/g, \"($1) $2-$3\");\n            let contato=\"contato:\";\n            switch(Telefone.length){\n                case 0:\n                    Telefone=\"\";\n                    break;\n                case 8:\n                    Telefone=\"contato:\"+Telefone.replace(/(\\d{4})(\\d{4})/g, \"$1-$2\");\n                    break;\n                case 9:\n                    Telefone=\"contato:\"+Telefone.replace(/(\\d{5})(\\d{4})/g, \"$1-$2\");\n                    break;\n                case 10:\n                    legivelTelefone = Telefone.replace(/(\\d{2})(\\d{4})(\\d{4})/g, \"($1) $2-$3\");\n                    Telefone=<span>{contato}<a href={urlTelefone} target='_blank' rel='noreferrer'>{legivelTelefone}</a></span>;\n                    break;\n                default:\n                    Telefone=<span>{contato}<a href={urlTelefone} target='_blank' rel='noreferrer'>{legivelTelefone}</a></span>;\n                    break;\n            }\n        }\n\n        let avaliacaoData = {\"nota\":\"\", \"totalClicks\":0};\n        if(Avaliacao){\n            let totalClicks = (Avaliacao[\"5\"]+Avaliacao[\"4\"]+Avaliacao[\"3\"]+Avaliacao[\"2\"]+Avaliacao[\"1\"]);\n            if( totalClicks === 0 ){\n                Avaliacao=\"Nenhuma\";\n            }else{\n                Avaliacao = (Avaliacao[\"5\"]*5 +\n                Avaliacao[\"4\"]*4 +\n                Avaliacao[\"3\"]*3 +\n                Avaliacao[\"2\"]*2 +\n                Avaliacao[\"1\"]*1)\n                /            \n                (totalClicks);\n\n                Avaliacao = Math.round(Avaliacao * 100)/100;\n\n            }\n\n            avaliacaoData.nota = Avaliacao;\n            avaliacaoData.totalClicks = totalClicks;\n        }\n    \n        return {googleDirection, dateMarked, Telefone, avaliacaoData};\n    }\n\n    configPopup(googleDirection, precisandoMsg, dateMarked, contato, \n        AlimentoEntregue, mapCoords, Roaster, Avaliacao, redesocial){\n            if(Avaliacao === undefined){\n                Avaliacao = {\"nota\":\"\", \"totalClicks\":0};\n            }\n        return <Popup>\n            <a href={googleDirection} target='_blank' rel=\"noreferrer\"> \n            <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img>\n            Ir para o destino\n            </a>\n            <br/>\n            <div style={{width:\"90%\", margin:0}}>{precisandoMsg}</div>\n            {/* <br/> */}\n            {dateMarked} {contato} \n            {redesocial ? \n                <span><br></br><a href={\"https://\"+redesocial} target='_blank' rel='noreferrer'> RedeSocial</a></span>\n            : <span></span>\n            }\n            <br/>\n            (<svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" focusable=\"false\" class=\"RbX5Oe koGmBf NMm5M\"><path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27z\"></path></svg>\n            {Avaliacao.nota})\n            <Rating\n                name=\"simple-controlled\"\n                value={Avaliacao.nota === \"Nenhuma\"? 0 : Avaliacao.nota}\n                onChange={(event, newValue) => {\n                    this.props.avaliar([mapCoords[0], mapCoords[1]], newValue);\n                }}\n            /> ({Avaliacao.totalClicks})\n            \n            \n            <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n            <br/>\n            <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n            <span>    </span>\n            <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                    \n        </Popup>\n    }\n\n    renderDoadoresAzul(){\n        return <MarkerClusterGroup\n                    // grupo de onde pode ajudar\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                        iconCreateFunction={markerclusterOptionsAnjos}\n                    >                  \n                    {/* .filter(x => { return x.Coordinates; })       */}\n                        {this.props.dataMapsProp.filter(x => {return x.Roaster===\"Doador\" }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Horario, AlimentoEntregue, Avaliacao, RedeSocial} = dataItem;\n                            \n                            if(mapCoords === undefined) return; if(URL===undefined) URL = \"\"; if(RedeSocial===undefined) RedeSocial=\"\";\n                            \n                            let {googleDirection, dateMarked, Telefone: contato, avaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone, Avaliacao);\n                            \n                            //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                            if(envVariables.telefoneFilter && contato===\"\") return (<div></div>);\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            // switch(Roaster){\n                            //     case \"Doador\":\n                                    precisandoMsg = \"Recebendo alimento para distribuir\"+URL;\n                                    CurrentIcon = hubIcon;\n                            //         break;                               \n                                \n                            //     default:\n                            //         return (<div></div>);\n                            //         break;\n                            // }\n                            \n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`); \n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                   {this.configPopup(googleDirection,precisandoMsg,dateMarked,contato,AlimentoEntregue,mapCoords,Roaster,nota,RedeSocial)}\n                                    \n                                    {/* <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n                                        <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {contato} \n                                        <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n                                        <br/>\n                                        <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                        <span>    </span>\n                                        <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                \n                                    </Popup> */}\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n    }\n\n    renderDoadoresVerde(){\n        return <MarkerClusterGroup\n                    // grupo de onde pode ajudar\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                        iconCreateFunction={markerclusterOptionsAnjos}\n                    >                        \n                        {this.props.dataMapsProp.filter(x => {return x.Roaster===\"PrecisandoBuscar\" }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Horario, AlimentoEntregue, Avaliacao} = dataItem;\n                            \n                            if(mapCoords === undefined) return; if(URL===undefined) URL = \"\";\n\n                            let {googleDirection, dateMarked, Telefone: contato, avaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone,Avaliacao);\n                            \n                            //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                            if(envVariables.telefoneFilter && contato===\"\") return (<div></div>);\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            // switch(Roaster){\n                            //     case \"PrecisandoBuscar\":\n                                    precisandoMsg = `Precisando de pessoas para buscar `+DiaSemana + \" pela \"+Horario;\n                                    CurrentIcon = greenIcon;\n                            //         break;                                \n                                \n                            //     default:\n                            //         return (<div></div>);\n                            //         break;\n                            // }\n                            \n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`); \n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                   {this.configPopup(googleDirection,precisandoMsg,dateMarked,contato,AlimentoEntregue,mapCoords,Roaster,nota)}\n                                    \n                                    {/* <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n                                        <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {contato} \n                                        <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n                                        <br/>\n                                        <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                        <span>    </span>\n                                        <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                \n                                    </Popup> */}\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n    }\n\n    renderDoadoresVermelho(){\n        return <MarkerClusterGroup\n        // grupo de entrega de alimentos prontos\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n            iconCreateFunction={markerclusterOptionsEntrega}\n        >                        \n            {this.props.dataMapsProp.filter(x => {return x.Roaster===\"EntregaAlimentoPronto\" }).map((dataItem, k) => {\n                let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Horario, AlimentoEntregue, Avaliacao, RedeSocial } = dataItem;\n                \n                if(mapCoords === undefined) return; if(URL===undefined) URL = \"\";\n\n                let {googleDirection, dateMarked, Telefone: contato, redesocial, avaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone, Avaliacao);\n                \n                //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                if(envVariables.telefoneFilter && contato===\"\") return (<div></div>);\n                //filtrar datas antigas\n                // if(\n                //     dateMarked.includes(\"semana\") \n                // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                // ) return (<div></div>);\n                \n                let precisandoMsg, CurrentIcon;\n                // switch(Roaster){\n                //     case \"EntregaAlimentoPronto\":\n                        precisandoMsg = `Entregando refeições prontas `+DiaSemana+\" pela \"+Horario;\n                        CurrentIcon = redIcon;\n                //         break;\n                    \n                //     default:\n                //         return (<div></div>);\n                //         break;\n                // }\n                \n                return (\n                    <Marker\n                        eventHandlers={{\n                            click: (e) => { \n                                // alert(`Precisando de ${Roaster}`); \n                                console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                            }\n                        }}\n                        icon= {CurrentIcon} \n                        key={k}\n                        center={[mapCoords[0], mapCoords[1]]}\n                        position={[mapCoords[0], mapCoords[1]]}\n                    >\n                        {this.configPopup(googleDirection,precisandoMsg,dateMarked,contato,AlimentoEntregue,mapCoords,Roaster,nota,RedeSocial)}\n                                    \n                        {/* <Popup>\n                            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                            <br/>\n                            {precisandoMsg}\n                            <br/>\n                            {dateMarked} {contato} \n                            <br/>{\" (Qtde entregue:\"+AlimentoEntregue+\")\"}\n                            <br/>\n                            <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                            <span>    </span>\n                            <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                        </Popup> */}\n                        {/* <Tooltip\n                            // direction=\"auto\"\n                            // offset={[15, 0]}\n                            // opacity={1}>\n                            // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                            // <span>{City}, BR</span>\n                        </Tooltip> */}\n                    </Marker>);\n            })}\n        </MarkerClusterGroup>\n    }\n\n    renderNecessitados(){\n        return <MarkerClusterGroup\n        // grupo dos que precisam\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n            iconCreateFunction={markerclusterOptionsPrecisando}\n        >                        \n            {this.props.dataMapsProp.filter(x => {return x.Roaster===\"Alimento pronto\" }).map((dataItem, k) => {\n                let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, AlimentoEntregue, Avaliacao} = dataItem;\n                \n                if(mapCoords === undefined) return; if(URL===undefined) URL = \"\";\n                \n                let {googleDirection, dateMarked, Telefone: contato, avaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone);\n        \n                //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                if(envVariables.telefoneFilter && contato===\"\") return (<div></div>);\n                //filtrar datas antigas\n                // if(\n                //     dateMarked.includes(\"semana\") \n                // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                // ) return (<div></div>);\n                \n                let precisandoMsg, CurrentIcon;\n                // switch(Roaster){                    \n                //     case \"Alimento pronto\":\n                        precisandoMsg = `Precisando de ${Roaster}`+URL;\n                        CurrentIcon = myIcon;\n                //         break;\n                    \n                //     default:\n                //         return (<div></div>);\n                //         break;\n                // }\n                \n                return (\n                    <Marker\n                        eventHandlers={{\n                            click: (e) => { \n                                // alert(`Precisando de ${Roaster}`); \n                                console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                            }\n                        }}\n                        icon= {CurrentIcon} \n                        key={k}\n                        center={[mapCoords[0], mapCoords[1]]}\n                        position={[mapCoords[0], mapCoords[1]]}\n                    >\n                        {this.configPopup(googleDirection,precisandoMsg,dateMarked,contato,AlimentoEntregue,mapCoords,Roaster)}\n                                    \n                        {/* <Popup>\n                            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                            <br/>\n                            {precisandoMsg}\n                            <br/>\n                            {dateMarked} {contato} \n                            <br/>{\" (Qtde entregue:\"+AlimentoEntregue+\")\"}\n                            <br/>\n                            <div className='buttonsSidebySide'>\n                                <button className='buttonsSidebySide' onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                <span>    </span>\n                                <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                            </div>\n                        </Popup> */}\n                        {/* <Tooltip\n                            // direction=\"auto\"\n                            // offset={[15, 0]}\n                            // opacity={1}>\n                            // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                            // <span>{City}, BR</span>\n                        </Tooltip> */}\n                    </Marker>);\n            })}\n        </MarkerClusterGroup>\n    }\n\n    renderCestaBasica(){\n        return <MarkerClusterGroup\n        // grupo dos que precisam\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n            iconCreateFunction={markerclusterOptionsPrecisando}\n        >                        \n            {this.props.dataMapsProp.filter(x => {return x.Roaster===\"Alimento de cesta básica\" }).map((dataItem, k) => {\n                let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, AlimentoEntregue, Avaliacao} = dataItem;\n                \n                if(mapCoords === undefined) return; if(URL===undefined) URL = \"\";\n                \n                let {googleDirection, dateMarked, Telefone: contato, avaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone);\n        \n                //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                if(envVariables.telefoneFilter && contato===\"\") return (<div></div>);\n                //filtrar datas antigas\n                // if(\n                //     dateMarked.includes(\"semana\") \n                // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                // ) return (<div></div>);\n                \n                let precisandoMsg, CurrentIcon;\n                // switch(Roaster){                                \n                //     case \"Alimento de cesta básica\":\n                        precisandoMsg = `Precisando de ${Roaster}`+URL;\n                        CurrentIcon = myIcon;\n                //         break;\n                    \n                //     default:\n                //         return (<div></div>);\n                //         break;\n                // }\n                \n                return (\n                    <Marker\n                        eventHandlers={{\n                            click: (e) => { \n                                // alert(`Precisando de ${Roaster}`); \n                                console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                            }\n                        }}\n                        icon= {CurrentIcon} \n                        key={k}\n                        center={[mapCoords[0], mapCoords[1]]}\n                        position={[mapCoords[0], mapCoords[1]]}\n                    >\n                        {this.configPopup(googleDirection,precisandoMsg,dateMarked,contato,AlimentoEntregue,mapCoords,Roaster)}\n                                    \n                        {/* <Popup>\n                            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                            <br/>\n                            {precisandoMsg}\n                            <br/>\n                            {dateMarked} {contato} \n                            <br/>{\" (Qtde entregue:\"+AlimentoEntregue+\")\"}\n                            <br/>\n                            <div className='buttonsSidebySide'>\n                                <button className='buttonsSidebySide' onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                <span>    </span>\n                                <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                            </div>\n                        </Popup> */}\n                        {/* <Tooltip\n                            // direction=\"auto\"\n                            // offset={[15, 0]}\n                            // opacity={1}>\n                            // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                            // <span>{City}, BR</span>\n                        </Tooltip> */}\n                    </Marker>);\n            })}\n        </MarkerClusterGroup>\n    }\n\n    renderTestes(){\n        return <MarkerClusterGroup\n        // grupo dos que precisam\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n            iconCreateFunction={markerclusterOptionsPrecisando}\n        >                        \n            {this.props.dataMapsProp.filter(x => {return x.Roaster===\"Teste\" }).map((dataItem, k) => {\n                let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, AlimentoEntregue, Avaliacao} = dataItem;\n                \n                if(mapCoords === undefined) return; if(URL===undefined) URL = \"\";\n                \n                let {googleDirection, dateMarked, Telefone: contato, avaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone);\n        //filtrar datas antigas\n\n                var msec = Date.now() - (new Date(DateISO)).getTime();\n                var mins = Math.floor(msec / 60000);\n                var hrs = Math.floor(mins / 60);\n                if(\n                    hrs > 3\n                ) return (<div></div>);\n                \n                \n                let precisandoMsg, CurrentIcon;\n                // switch(Roaster){                                \n                //     case \"Teste\":\n                        CurrentIcon = TestIcon;\n                //         break;\n                    \n                //     default:\n                //         return (<div></div>);\n                //         break;\n                // }\n                \n                return (\n                    <Marker\n                        eventHandlers={{\n                            click: (e) => { \n                                // alert(`Precisando de ${Roaster}`); \n                                console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                            }\n                        }}\n                        icon= {CurrentIcon} \n                        key={k}\n                        center={[mapCoords[0], mapCoords[1]]}\n                        position={[mapCoords[0], mapCoords[1]]}\n                    >\n                        {/* {this.configPopup(googleDirection,precisandoMsg,dateMarked,contato,AlimentoEntregue,mapCoords,Roaster)} */}\n                                    \n                        {/* <Popup>\n                            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                            <br/>\n                            {precisandoMsg}\n                            <br/>\n                            {dateMarked} {contato} \n                            <br/>{\" (Qtde entregue:\"+AlimentoEntregue+\")\"}\n                            <br/>\n                            <div className='buttonsSidebySide'>\n                                <button className='buttonsSidebySide' onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                <span>    </span>\n                                <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                            </div>\n                        </Popup> */}\n                        {/* <Tooltip\n                            // direction=\"auto\"\n                            // offset={[15, 0]}\n                            // opacity={1}>\n                            // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                            // <span>{City}, BR</span>\n                        </Tooltip> */}\n                    </Marker>);\n            })}\n        </MarkerClusterGroup>\n    }\n\n    renderSwitch(param){\n        switch(this.state.filtro) {\n            case \"Todos\":\n                return ([\n                    this.renderDoadoresAzul(),\n                    this.renderDoadoresVerde(),\n                    this.renderNecessitados(),\n                    this.renderCestaBasica(),\n                    this.renderDoadoresVermelho()]\n                )\n                break;\n            case \"CestaBasica\":\n                return ([\n                    this.renderCestaBasica()]\n                )\n                break;\n            case \"MoradorRua\":\n                return ([\n                    this.renderNecessitados()]\n                )\n                break;\n            case \"Doadores\":\n                return ([\n                    this.renderDoadoresAzul(),\n                    this.renderDoadoresVerde(),\n                    this.renderDoadoresVermelho()]\n                )\n                break;\n            case \"Refeição Pronta\":\n                return ([\n                    this.renderDoadoresVerde(),\n                    this.renderDoadoresVermelho()]\n                )\n                break;\n        }\n    }\n\n}\n\nexport default CoffeeMap;","export default __webpack_public_path__ + \"static/media/currentLocation.bd009424.svg\";","export default __webpack_public_path__ + \"static/media/currentLocationSmall.1d7df3b6.svg\";","import React, { memo } from 'react'\nimport twemoji from 'twemoji'\n\n// Using the official https://github.com/twitter/twemoji from Twitter\n// With an excellent example from https://gist.github.com/chibicode/fe195d792270910226c928b69a468206\n\nconst Twemoji = ({ emoji }) => (\n    <span\n        dangerouslySetInnerHTML={{\n            __html: twemoji.parse(emoji, {\n                folder: 'svg',\n                ext: '.svg'\n            })\n        }}\n    />\n)\n\nexport default memo(Twemoji)","import React, { Component } from 'react';\nimport Twemoji from './twemoji';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import github_mark from '../images/github_mark.png';\nimport TableCount from './tableCount';\n\nclass Header extends Component {\n\n    render() {\n\n        const { rowCountProp } = this.props;\n\n        return (\n            <div id=\"header\">\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" id=\"logo\">\n                            <Twemoji emoji=\"☕\" /> MAPA da FOME <span className=\"beta\">(beta) site:</span> www.mapafome.com.br \n                        </Typography>\n                        {/* <TableCount rowCountProp={rowCountProp} /> */}\n                        {/* <a href=\"https://docs.google.com/spreadsheets/d/1u7jiqY1qM0jYWugn1dFiW3plQrvWysJqm8xXhO35zuU/edit?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Button\n                                variant=\"contained\"\n                                size=\"small\">\n                                Add<span id=\"RoasterButtonMobile\">&nbsp;Roaster</span>\n                            </Button>\n                        </a>\n                        <a href=\"https://github.com/hdehal/coffee-maps\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <IconButton\n                                className=\"GitHub\"\n                                variant=\"outlined\"\n                                size=\"small\">\n                                <img className=\"GitHub\" src={github_mark} alt=\"Hosted on GitHub\" />\n                            </IconButton>\n                        </a> */}\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Typography from '@mui/material/Typography';\n\nclass TableCount extends Component {\n    render() {\n        return (\n            <Typography className=\"TableCount\">\n                TOTAL: {this.props.rowCountProp}\n            </Typography>\n        );\n    }\n}\n\nexport default TableCount;","import React, { Component } from 'react';\r\n\r\nimport { \r\n  OpenStreetMapProvider,\r\n  // BingProvider \r\n} from 'leaflet-geosearch';\r\n\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport envVariables from '../variaveisAmbiente';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\nconst provider = new OpenStreetMapProvider();\r\n\r\n// = new BingProvider({\r\n//   params: {\r\n//     key: process.env.REACT_APP_BING_MAPS_API_KEY\r\n//   },\r\n// });\r\n//\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass NameForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '', \r\n        alimento: props.alimento, \r\n        isLoading:false,\r\n        telefone:props.telefone,\r\n        diaSemana:props.diaSemana,\r\n        horario:props.horario,\r\n        redesocial:props.redesocial\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    //ATUALIZAR PROPS VINDAS DO PAI\r\n    static getDerivedStateFromProps(nextProps, state) {\r\n      if(state){\r\n        if (nextProps.alimento !== state.alimento){ \r\n          state.alimento=nextProps.alimento;\r\n        }\r\n        if (nextProps.telefone !== state.telefone){ \r\n          state.telefone=nextProps.telefone;\r\n        }\r\n        if (nextProps.diaSemana !== state.diaSemana){ \r\n          state.diaSemana=nextProps.diaSemana;\r\n        }\r\n        if (nextProps.horario !== state.horario){ \r\n          state.horario=nextProps.horario;\r\n        }\r\n        if (nextProps.redesocial !== state.redesocial){ \r\n          state.redesocial=nextProps.redesocial;\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n  \r\n    handleChange(event) {\r\n      if(event.target.value.length > 100) return; \r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      //alert('Um endereço foi enviado: ' + this.state.value);\r\n      if(this.state.value === '') {event.preventDefault();return;}\r\n      \r\n      this.setState({isLoading: true});\r\n\r\n      (async function main(self) {\r\n        await doc.useServiceAccountAuth({\r\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n        });\r\n\r\n        await doc.loadInfo(); // Loads document properties and worksheets\r\n\r\n        const sheet = doc.sheetsByIndex[0];\r\n        //row = { Name: \"new name\", Value: \"new value\" };\r\n        \r\n        // Total row count\r\n        let numero = self.state.value.replace(/[^0-9]/g,'');\r\n        if(numero === ''){\r\n          alert(\"faltou colocar o número\");\r\n          \r\n          event.preventDefault();\r\n          self.setState({isLoading: false});\r\n          return;\r\n        }\r\n        // const row = { \r\n        //   Roaster:  self.state.alimento, \r\n        //   URL:numero, City: self.state.value,\r\n        //   DateISO: new Date().toISOString(), \r\n        //   Telefone: self.state.telefone, \r\n        //   DiaSemana: self.state.diaSemana, \r\n        //   Horario: self.state.horario,\r\n        //   AlimentoEntregue:0,\r\n        // };\r\n\r\n        const row = envVariables.criarRow(\r\n          self.state.alimento,\r\n          numero,\r\n          self.state.value,\r\n          \"\",\r\n          self.state.telefone,\r\n          self.state.diaSemana,\r\n          self.state.horario,\r\n          self.state.redesocial\r\n        );\r\n        // let dadosJSON = { \r\n        //   \"Roaster\":  self.state.alimento, \r\n        //   \"URL\":numero, \r\n        //   \"City\": self.state.value,\r\n        //   \"DateISO\": new Date().toISOString(), \r\n        //   \"Telefone\": self.state.telefone, \r\n        //   \"DiaSemana\": self.state.diaSemana, \r\n        //   \"Horario\": self.state.horario,\r\n        //   \"AlimentoEntregue\":0,\r\n        //   \"RedeSocial\":\"\",\r\n        //   \"Avaliacao\": {\r\n        //     \"1\":0,\r\n        //     \"2\":0,\r\n        //     \"3\":0,\r\n        //     \"4\":0,\r\n        //     \"5\":0\r\n        //   },\r\n        // };\r\n\r\n        \r\n        try{\r\n          let dadosJSON = JSON.parse(row.Dados);\r\n          let providerResult = await provider.search({ query: self.state.value.replace('-',\",\") + ', Brazil' });\r\n  \r\n          if(providerResult.length !== 0 ){\r\n              // throw new Error(\"endereco-nao-encontrado\");\r\n  \r\n              //console.log(providerResult);\r\n              let latlon = [providerResult[0].y,providerResult[0].x];\r\n              dadosJSON.Coordinates = JSON.stringify(latlon).replace(\" \",\"\");\r\n              row.Dados = JSON.stringify(dadosJSON); // Convert obj to string\r\n              //needsUpdates[index].mapCoords = latlon;\r\n          }else{\r\n             throw new Error(\"endereco-nao-encontrado\");\r\n          }\r\n        }catch(e){\r\n            console.log(\"ERRO\");\r\n            console.log(e);\r\n            alert(\"Houve um problema ao cadastrar endereço, porfavor\\nclique no mapa e depois confirme no botão marcar Local tocado.\\nou use o botão marcar Localização Atual\");\r\n        }\r\n        await sheet.addRow(row);\r\n       \r\n        self.setState({isLoading: false});\r\n        window.location.reload();\r\n      })(this);\r\n      event.preventDefault();\r\n    }\r\n\r\n    \r\n  \r\n    render() {\r\n      return (\r\n        this.state.isLoading ?\r\n        <div><CircularProgress /></div>\r\n        :\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <input className=\"TextField\" type=\"text\" placeholder='Insira rua,nº,bairro,cidade,estado' value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input className=\"SubmitButton\" type=\"submit\" value=\"Enviar Endereço\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\nexport default NameForm; ","import React, { Component } from 'react';\r\n\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport envVariables from '../variaveisAmbiente';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass NameForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '', \r\n        location: props.location, \r\n        alimento: props.alimento, \r\n        isLoading:false,\r\n        telefone:props.telefone,\r\n        diaSemana:props.diaSemana,\r\n        numero:props.numero,\r\n        redesocial:props.redesocial,\r\n      };\r\n  \r\n      // this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n\r\n    }\r\n\r\n  componentDidMount() {\r\n      \r\n    //salvar acesso  \r\n      \r\n    (async function main(self) {\r\n      try{\r\n        await doc.useServiceAccountAuth({\r\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n        });\r\n    \r\n        await doc.loadInfo(); // Loads document properties and worksheets\r\n    \r\n        const sheet = doc.sheetsByIndex[1];\r\n        \r\n        await sheet.loadCells('A2');\r\n        const a1 = sheet.getCell(1, 0);\r\n        a1.value+=1;\r\n        await sheet.saveUpdatedCells();\r\n      }catch(e){\r\n        \r\n      }\r\n      \r\n    })(this);\r\n\r\n  }\r\n\r\n    //ATUALIZAR PROPS VINDAS DO PAI\r\n    static getDerivedStateFromProps(nextProps, state) {\r\n      if(state){\r\n\r\n        if (nextProps.alimento !== state.alimento){ \r\n          state.alimento=nextProps.alimento;\r\n        }\r\n        if (nextProps.telefone !== state.telefone){ \r\n          state.telefone=nextProps.telefone;\r\n        }\r\n        if (nextProps.diaSemana !== state.diaSemana){ \r\n          state.diaSemana=nextProps.diaSemana;\r\n        }\r\n        if (nextProps.horario !== state.horario){ \r\n          state.horario=nextProps.horario;\r\n        }\r\n        if (nextProps.numero !== state.numero){ \r\n          state.numero=nextProps.numero;\r\n        }\r\n        if (nextProps.redesocial !== state.redesocial){ \r\n          state.redesocial=nextProps.redesocial;\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n  \r\n    // handleChange(event) {\r\n    //   this.setState({value: event.target.value});\r\n    // }\r\n  \r\n    handleSubmit(event) { \r\n        //navigator.geolocation.getCurrentPosition(function(position) {\r\n        if(this.state.location[0]===-8.0671132 && this.state.location[1]===-34.8766719){\r\n          alert(\"Localização do celular está desativada, ative, recarregue a página e tente novamente com a localização ativa, se mesmo assim não conseguir insira o endereço completo e clique enviar endereço\");\r\n          event.preventDefault();\r\n          return;\r\n        }\r\n        this.setState({isLoading: true});\r\n            (async function main(self) {\r\n                await doc.useServiceAccountAuth({\r\n                    client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n                    private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n                });\r\n        \r\n                await doc.loadInfo(); // Loads document properties and worksheets\r\n                \r\n                let regiao;\r\n                if(envVariables.dentroLimites(self.state.location)){\r\n                  regiao=0;\r\n                }\r\n                else{\r\n                  alert(\"Região não suportada\");\r\n                  return;\r\n                }\r\n                const sheet = doc.sheetsByIndex[regiao];\r\n                // const rows = await sheet.getRows();\r\n                // Total row count\r\n\r\n                // const row = { \r\n                //   Roaster: self.state.alimento, \r\n                //   URL:self.state.numero, \r\n                //   City: \"\", \r\n                //   Coordinates:JSON.stringify([self.props.location[0], self.props.location[1]]), \r\n                //   DateISO: new Date().toISOString(), \r\n                //   Telefone: self.props.telefone, \r\n                //   DiaSemana:self.props.diaSemana,\r\n                //   Horario:self.props.horario,\r\n                //   AlimentoEntregue:0,\r\n                // };\r\n\r\n                \r\n              const row = envVariables.criarRow(\r\n                self.state.alimento,\r\n                self.state.numero,\r\n                \"\",\r\n                self.props.location,\r\n                self.props.telefone,\r\n                self.props.diaSemana,\r\n                self.props.horario,\r\n                self.state.redesocial\r\n                );\r\n\r\n                \r\n            // {\r\n            //   Dados: JSON.stringify(\r\n            //     { \r\n            //       \"Roaster\": self.state.alimento, \r\n            //       \"URL\":self.state.numero, \r\n            //       \"City\": \"\", \r\n            //       \"Coordinates\":JSON.stringify([self.props.location[0], self.props.location[1]]), \r\n            //       \"DateISO\": new Date().toISOString(), \r\n            //       \"Telefone\": self.props.telefone, \r\n            //       \"DiaSemana\":self.props.diaSemana,\r\n            //       \"Horario\":self.props.horario,\r\n            //       \"AlimentoEntregue\":0,\r\n            //       \"RedeSocial\":self.state.redesocial.replace('@',''),\r\n            //       \"Avaliacao\": {\r\n            //         \"1\":0,\r\n            //         \"2\":0,\r\n            //         \"3\":0,\r\n            //         \"4\":0,\r\n            //         \"5\":0\r\n            //       },\r\n            //     }\r\n\r\n            //   )\r\n            // };\r\n                \r\n                const result = await sheet.addRow(row);\r\n                //console.log(result);\r\n                window.location.reload();\r\n            })(this);\r\n        //});\r\n      event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n          this.state.isLoading ?\r\n          <div><CircularProgress /></div>\r\n          : \r\n            <button className=\"SubmitButton buttonsSidebySide\" onClick={this.handleSubmit}>\r\n              marcar Localização Atual\r\n            </button>\r\n        \r\n      );\r\n    }\r\n  }\r\nexport default NameForm; ","import React, { Component } from 'react';\r\n\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass Sugestoes extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '',\r\n        isLoading:false\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n  \r\n    handleChange(event) {\r\n      if(event.target.value.length > 1000) return;\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      //alert('Um endereço foi enviado: ' + this.state.value);\r\n      if(this.state.value === '') {event.preventDefault();return;}\r\n      \r\n      this.setState({isLoading: true});\r\n      \r\n      (async function main(self) {\r\n        try{\r\n          await doc.useServiceAccountAuth({\r\n              client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n              private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n          });\r\n\r\n          await doc.loadInfo(); // Loads document properties and worksheets\r\n\r\n          const sheet = doc.sheetsByIndex[2];\r\n          //row = { Name: \"new name\", Value: \"new value\" };\r\n          \r\n          const row = { Sugestao: self.state.value, DateISO: new Date().toISOString()};\r\n          \r\n          await sheet.addRow(row);\r\n        \r\n          self.setState({isLoading: false});\r\n          alert(\"sugestão enviada com sucesso\");\r\n        }catch(e){\r\n          alert(\"Erro, tente novamente\");\r\n        }\r\n        \r\n      })(this);\r\n      event.preventDefault();\r\n    }\r\n\r\n    \r\n  \r\n    render() {\r\n      return (\r\n        this.state.isLoading ?\r\n        <div><CircularProgress /></div>\r\n        :\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <textarea className=\"TextField\" type=\"text\" placeholder='Insira sua sugestão, depoimento e contato em caso de dúvida' value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input className=\"SubmitButton\" type=\"submit\" value=\"Enviar sugestão\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\nexport default Sugestoes; ","export default __webpack_public_path__ + \"static/media/qr.20154bbf.svg\";","\r\nimport React, { Component } from 'react';\r\n\r\nimport TimeAgo from 'javascript-time-ago';\r\n\r\nimport pt from 'javascript-time-ago/locale/pt.json';\r\nTimeAgo.addDefaultLocale(pt);\r\n\r\nconst timeAgo = new TimeAgo();\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass CleanOld extends Component {\r\n\r\n    componentDidMount() {\r\n        \r\n        (async function main() {\r\n            // Use service account creds\r\n            await doc.useServiceAccountAuth({\r\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n            });\r\n    \r\n            await doc.loadInfo(); // Loads document properties and worksheets\r\n    \r\n            const sheet = doc.sheetsByIndex[0];\r\n            const rows = await sheet.getRows();\r\n            rows.forEach((x) => { \r\n                let dateMarked;\r\n                if(x.DateISO) dateMarked = timeAgo.format(Date.now() - (Date.now() - new Date(x.DateISO).getTime()) );\r\n                \r\n                //filtrar datas antigas\r\n                if(\r\n                    dateMarked.includes(\"semana\") \r\n                    || dateMarked.includes(\"mes\") \r\n                //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\r\n                ) { x.delete(); } });\r\n\r\n        })();\r\n    }\r\n    render(){\r\n        return <div></div>;\r\n    }\r\n}\r\n\r\nexport default CleanOld;","export default __webpack_public_path__ + \"static/media/insta.20ffff3e.svg\";","import React, { Component } from 'react';\nimport './App.css';\nimport { OpenStreetMapProvider } from 'leaflet-geosearch';\nimport Header from './components/header';\n\nimport InserirEndereco from './components/googlesheets/endereco';\nimport MyLocationButton from './components/googlesheets/mylocation';\nimport Sugestao from './components/googlesheets/sugestao';\n\nimport CoffeeMap from './components/map.js';\n// import CoffeeTable from './components/table';\nimport ReactGA from 'react-ga';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Checkbox } from '@mui/material';\n\nimport envVariables from './components/variaveisAmbiente';\n\nimport qr from './images/qr.svg';\n\n// Material-UI\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nimport CleanOld from './components/googlesheets/cleanold';\n\n\nimport coffeeBean from './images/bean.svg';\nimport hub from './images/hub.svg';\nimport green from './images/green.svg';\nimport red from './images/red.svg';\nimport insta from './images/insta.svg';\n\nimport AesEncryption from \"aes-encryption\";\n\nimport Cookies from 'universal-cookie';\n \nconst cookies = new Cookies();\nconst EXPIRE_DAY = 7;\n\nconst aes = new AesEncryption();\n\n// Google Analytics\nfunction initializeReactGA() {\n  ReactGA.initialize('UA-172868315-1');\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\ninitializeReactGA();\n\naes.setSecretKey(process.env.REACT_APP_CRYPTSEED+\"F\");\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\n\n// Google Sheets Document ID -- PROD\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\n\n// Google Sheets Document ID -- DEV\n// const doc = new GoogleSpreadsheet('1jQI6PstbEArW_3xDnGgPJR6_37r_KjLoa765bOgMBhk');\n\n// Provider for leaflet-geosearch plugin\nconst provider = new OpenStreetMapProvider();\n//limit osm https://operations.osmfoundation.org/policies/nominatim/\n\n\n\n\nclass App extends Component {\n\n  // Initial state\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      dataMaps: [],\n      dataHeader: [{ label: \"Índice\" }, { label: \"Lugar\" }],\n      rowCount: '',\n      center:[-8.0671132,-34.8766719],\n      alimento:'Alimento pronto',\n      telefone:'',\n      telefoneEncryptado:'',\n      diaSemana:'',\n      horario:'',\n      filtro:\"Todos\",\n      lastMarkedCoords:[],\n      numero:'',\n      telefoneFilterLocal:false,\n      site:'',\n      redesocial:''\n\n    }\n\n    this.dropDownMenuSemanaEntregaAlimentoPronto = React.createRef();\n    this.dropDownMenuHorarioEntregaAlimentoPronto = React.createRef();\n    this.dropDownMenuSemanaPrecisandoBuscar = React.createRef();\n    this.dropDownMenuHorarioPrecisandoBuscar = React.createRef();\n    this.dropDownMenuFiltro = React.createRef();\n    this.redesocialRef = React.createRef();\n    this.dropDownMenuRedeSocial = React.createRef();\n  \n    \n    this.handleChangeNumero = this.handleChangeNumero.bind(this);\n\n    this.setTipoAlimento = this.setTipoAlimento.bind(this);\n    this.handleChangeTelefone = this.handleChangeTelefone.bind(this);\n    this.setDiaSemana = this.setDiaSemana.bind(this);\n    this.setHorario = this.setHorario.bind(this);\n    this.setFiltro = this.setFiltro.bind(this);\n    this.removerPonto = this.removerPonto.bind(this);\n    this.handleClickMap = this.handleClickMap.bind(this);\n    this.telefoneFilterChange = this.telefoneFilterChange.bind(this);\n    this.handleChangeRedeSocial = this.handleChangeRedeSocial.bind(this);\n  }\n\n  telefoneFilterChange(event){\n    envVariables.telefoneFilter = !envVariables.telefoneFilter;\n    this.setState({\n      telefoneFilterLocal: envVariables.telefoneFilter\n    });\n  }\n\n  removerPonto(coords, categoriaPonto){\n    console.log(\"remover \"+coords);\n    let motivo = prompt(\"por qual motivo (em resumo) gostaria de deletar esse ponto?\");\n    if(motivo !== null){\n      (async function main(self) {\n        try{\n          await doc.useServiceAccountAuth({\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n            });\n\n            await doc.loadInfo(); // Loads document properties and worksheets\n\n            const sheet = doc.sheetsByIndex[4];\n            //row = { Name: \"new name\", Value: \"new value\" };\n            \n            const row = { Motivo: motivo, Ponto: JSON.stringify(coords), DateISO: new Date().toISOString(), CategoriaPonto:categoriaPonto};\n            \n            let r = await sheet.addRow(row);\n            console.log(r);\n          \n            alert(\"pedido de deletar enviado com sucesso\");\n        }catch(e){\n          alert(\"ERRO, tente novamente\");\n          //console.log(e);\n\n        }\n        \n      })(motivo, coords);\n    }\n  }\n\n  entregarAlimento(coords){\n    (async function main(self) {\n      try{\n        await doc.useServiceAccountAuth({\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n\n          await doc.loadInfo(); // Loads document properties and worksheets\n\n          const sheet = doc.sheetsByIndex[0];\n          //row = { Name: \"new name\", Value: \"new value\" };\n          \n          const rows = await sheet.getRows();\n          coords = JSON.stringify(coords);\n          let rowEncontrada = rows.filter((x) => { \n            //x.Coordinates\n            //console.log(JSON.parse(x.Dados).Coordinates);\n            return JSON.parse(x.Dados).Coordinates === coords; });\n          \n          //console.log(rowEncontrada[0].City);\n          let dadosNovos = JSON.parse(rowEncontrada[0].Dados);\n          dadosNovos.AlimentoEntregue++;\n          rowEncontrada[0].Dados = JSON.stringify(dadosNovos);\n          await rowEncontrada[0].save();\n          \n          window.location.reload();\n      }catch(e){\n        //console.log(e);\n\n      }\n      \n    })(coords);\n  }\n\n  avaliar(coords, avaliacao){\n    \n    let cookieName='pontosAvaliados';\n    let pontos = cookies.get(cookieName) || \"\";\n    //coords = JSON.parse(coords);\n    let coordsString = coords[0]+\"\"+coords[1];\n    //let pontosEntregues = JSON.parse(pontosEntreguesData);\n    if(pontos.includes(coordsString)) return;\n    pontos+=coordsString;\n\n    const cookieExpireDate = new Date();\n    cookieExpireDate.setDate(cookieExpireDate.getDate() + EXPIRE_DAY);\n\n    cookies.set(cookieName, pontos, { path: '/', expires: cookieExpireDate });\n    \n    (async function main(coords, avaliacao) {\n      try{\n        await doc.useServiceAccountAuth({\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n\n          await doc.loadInfo(); // Loads document properties and worksheets\n\n          const sheet = doc.sheetsByIndex[0];\n          //row = { Name: \"new name\", Value: \"new value\" };\n          \n          const rows = await sheet.getRows();\n          coords = JSON.stringify(coords);\n          let rowEncontrada = rows.filter((x) => { \n            //x.Coordinates\n            //console.log(JSON.parse(x.Dados).Coordinates);\n            return JSON.parse(x.Dados).Coordinates === coords; });\n          console.log(rowEncontrada);\n          \n          //console.log(rowEncontrada[0].City);\n          let dadosNovos = JSON.parse(rowEncontrada[0].Dados);\n          if(dadosNovos.Avaliacao == undefined){\n            dadosNovos.Avaliacao = {\n              \"1\":0,\n              \"2\":0,\n              \"3\":0,\n              \"4\":0,\n              \"5\":0\n            }\n          }\n          dadosNovos.Avaliacao[avaliacao]++;\n          rowEncontrada[0].Dados = JSON.stringify(dadosNovos);\n          await rowEncontrada[0].save();\n          \n          window.location.reload();\n      }catch(e){\n        //console.log(e);\n\n      }\n      \n    })(coords, avaliacao);\n  }\n\n  setFiltro(event){\n    this.setState({\n      filtro: event.target.value\n    });\n  }\n  setTipoAlimento(event){\n    this.setState({\n      alimento: event.target.value\n    });\n    \n    let isPrecisandoBuscar = event.target.value === 'PrecisandoBuscar',\n    isEntregaAlimentoPronto = event.target.value === 'EntregaAlimentoPronto',\n    isDoador = event.target.value === 'Doador';\n\n    this.dropDownMenuSemanaPrecisandoBuscar.current.style.display=\"none\";\n    this.dropDownMenuHorarioPrecisandoBuscar.current.style.display=\"none\";\n    this.dropDownMenuSemanaEntregaAlimentoPronto.current.style.display=\"none\";\n    this.dropDownMenuHorarioEntregaAlimentoPronto.current.style.display=\"none\";\n\n    if( isPrecisandoBuscar ){\n      this.dropDownMenuSemanaPrecisandoBuscar.current.style.display=\"\";\n      this.dropDownMenuHorarioPrecisandoBuscar.current.style.display=\"\";\n      this.setState({\n        diaSemana: this.dropDownMenuSemanaPrecisandoBuscar.current.value,\n        horario: this.dropDownMenuHorarioPrecisandoBuscar.current.value\n      });\n\n    }else    \n    if( isEntregaAlimentoPronto ){\n      this.dropDownMenuSemanaEntregaAlimentoPronto.current.style.display=\"\";\n      this.dropDownMenuHorarioEntregaAlimentoPronto.current.style.display=\"\";\n      \n      this.setState({\n        diaSemana: this.dropDownMenuSemanaEntregaAlimentoPronto.current.value,\n        horario: this.dropDownMenuHorarioEntregaAlimentoPronto.current.value\n      });\n\n    }\n    else {\n      this.setState({\n        diaSemana: '',\n        horario: ''\n      });\n\n    }\n\n    if(isPrecisandoBuscar || isEntregaAlimentoPronto || isDoador){\n      this.redesocialRef.current.style.display=\"\";\n      this.dropDownMenuRedeSocial.current.style.display=\"\";\n    }else{\n      this.redesocialRef.current.style.display=\"none\";\n      this.dropDownMenuRedeSocial.current.style.display=\"none\";\n    }\n\n  }\n\n  setDiaSemana(event){\n    this.setState({\n      diaSemana: event.target.selectedOptions[0].value\n    });\n    // console.log(this.dropDownMenuSemana.current.value);\n    // console.log(event.target.selectedOptions[0].value);\n    // console.log(this.state.diaSemana);\n  }\n\n  \n  setHorario(event){\n    this.setState({\n      horario: event.target.selectedOptions[0].value\n    });\n    // console.log(this.dropDownMenuSemana.current.value);\n    // console.log(event.target.selectedOptions[0].value);\n    // console.log(this.state.diaSemana);\n  }\n\n  handleChangeTelefone(event) {\n    if(event.target.value.length>15) return;\n    let telefoneValue = event.target.value.replace(/[^0-9]/g,'');\n    if(telefoneValue.length >= 8){\n      this.setState({telefoneEncryptado: aes.encrypt(telefoneValue)});\n    }\n    this.setState({telefone: telefoneValue});\n  }\n\n  handleChangeRedeSocial(event){\n    let site = event.target.value;\n    if(site.length>30) return;\n    this.setState({site: site, redesocial:this.dropDownMenuRedeSocial.current.value+site});\n\n  }\n  \n    \n  handleChangeNumero(event) {\n    if(event.target.value.length > 10) return;\n    let numero = event.target.value.replace(/[^0-9]/g,'');\n    this.setState({numero: numero});\n  }\n\n  handleClickMap(){\n    // this.setState({lastMarkedCoords: coords});\n    if(envVariables.lastMarked === undefined) return;\n    this.setState({isLoading: true});\n    (async function main(self) {\n      await doc.useServiceAccountAuth({\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n      });\n\n      await doc.loadInfo(); // Loads document properties and worksheets\n      let {lat, lng} = envVariables.lastMarked.getLatLng();\n      envVariables.lastMarked.latlng = [lat,lng];\n      let regiao;\n      if(envVariables.dentroLimites(envVariables.lastMarked.latlng)){\n        regiao=0;\n      }\n      else{\n        alert(\"Região não suportada\");\n        return;\n      }\n      const sheet = doc.sheetsByIndex[regiao];\n      // const rows = await sheet.getRows();\n      // Total row count\n\n      // if(this.state.numero !== ''){\n      //   this.state.numero = \", nº\"+this.state.numero;\n      // }\n      \n      // const row = { \n      //   Roaster: self.state.alimento, \n      //   URL:self.state.numero, \n      //   City: \"\", \n      //   Coordinates:JSON.stringify([self.props.location[0], self.props.location[1]]), \n      //   DateISO: new Date().toISOString(), \n      //   Telefone: self.props.telefone, \n      //   DiaSemana:self.props.diaSemana,\n      //   Horario:self.props.horario,\n      //   AlimentoEntregue:0,\n      // };\n      let row = envVariables.criarRow(\n        self.state.alimento,\n        \"\",\n        \"\",\n        envVariables.lastMarked.latlng,\n        self.state.telefoneEncryptado,\n        self.state.diaSemana,\n        self.state.horario,\n        self.state.redesocial\n      )\n      // if(self.state.numero !== ''){\n      //   self.state.numero = \", nº\"+self.state.numero;\n      // }\n      // let dadosJSON = {\n      //   \"Roaster\": self.state.alimento, \n      //   \"Coordinates\":JSON.stringify(envVariables.lastMarked.latlng), \n      //   \"DateISO\": new Date().toISOString(), \n      //   \"Telefone\": self.state.telefoneEncryptado, \n      //   \"AlimentoEntregue\":0,\n      //   \"URL\":self.state.numero\n      // };\n\n      // if(self.state.alimento==='EntregaAlimentoPronto' || self.state.alimento==='PrecisandoBuscar')\n      // {\n      //   dadosJSON.DiaSemana=self.state.diaSemana;\n      //   dadosJSON.Horario=self.state.horario;\n        \n      // }\n      // row = { Dados: JSON.stringify(dadosJSON) };\n      \n      const result = await sheet.addRow(row);\n      // console.log(result);\n      window.location.reload();\n  })(this);\n  }\n\n  componentDidMount() {\n\n    // Google Sheets API\n    // Based on https://github.com/theoephraim/node-google-spreadsheet\n\n    var self = this;\n\n    //current location    \n    navigator.geolocation.getCurrentPosition(function(position) {\n      envVariables.currentLocation = [position.coords.latitude, position.coords.longitude];\n      self.setState({center: [position.coords.latitude, position.coords.longitude]}) \n    });\n\n    (async function main(self) {\n      // Use service account creds\n      await doc.useServiceAccountAuth({\n        client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n        private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n      });\n\n      await doc.loadInfo(); // Loads document properties and worksheets\n      \n      /*https://www.keene.edu/campus/maps/tool/\n        long, lat\n        x, y\n        -52.2070313, 2.20\n        -52.4267578, -13.9234039\n        -34.3212891, -14.0939572\n        -34.3212891, 1.6696855\n0: -8.0256189\n1: -34.9175702\n        -55.4589844, -32.6578757\n        -55.5468750, -14.1791861\n        -38.1445313, -14.1791861\n        -38.0566406, -32.8426736\n      */\n     //limitar regiao\n      let regiao;\n      if(envVariables.dentroLimites(self.state.center)){\n        regiao=0;\n      }     \n      else{\n        alert(\"Região ainda não suportada\");\n        return;\n      }\n      const sheet = doc.sheetsByIndex[regiao];\n      const rows = await sheet.getRows();\n      // Total row count\n      self.setState({ rowCount: rows.length });\n      \n      // rows.filter( (x) => { return !x.Data}).map( (x) => {\n      //   x.Dados = JSON.stringify(\n      //     { \n      //       \"Roaster\": x.Roaster, \n      //       \"URL\": x.URL, \n      //       \"City\": x.City, \n      //       \"Coordinates\": x.Coordinates, \n      //       \"DateISO\": x.DateISO, \n      //       \"Telefone\": x.Telefone, \n      //       \"DiaSemana\": x.DiaSemana,\n      //       \"Horario\": x.Horario,\n      //       \"AlimentoEntregue\": x.AlimentoEntregue\n      //     }\n      //   );\n      //   (async function main(x){\n          \n      //   await x.save();\n      //   })(x);\n\n      // })\n      rows.forEach((x) => {\n        let dados = JSON.parse(x.Dados);\n        x.Roaster = dados.Roaster;\n        x.URL = dados.URL;\n        x.City = dados.City;\n        x.Coordinates = dados.Coordinates;\n        x.DateISO = dados.DateISO;\n        x.Telefone = dados.Telefone;\n        x.DiaSemana = dados.DiaSemana;\n        x.Horario = dados.Horario;\n        x.AlimentoEntregue = dados.AlimentoEntregue;\n        x.RedeSocial = dados.RedeSocial;\n        x.Avaliacao = dados.Avaliacao;\n        \n        if (dados.Coordinates) { x.mapCoords = JSON.parse(x.Coordinates); \n          if(dados.Telefone) {\n            try{\n              x.Telefone = aes.decrypt(x.Telefone);\n            }catch(e){\n              //problema ao decriptar, string nao esta no formato hex\n            }\n          } \n        }\n       \n      });\n      self.setState({ dataMaps: rows });\n\n      // var needsUpdates = rows.filter((x) => { x = JSON.parse(x); return !x.Coordinates; });\n      // if(needsUpdates.length === 0) console.log(\"nao precisa atualizar\");\n      // if (needsUpdates && needsUpdates.length > 0) {\n      //     for (let index in needsUpdates) {\n      //       // if(needsUpdates[index]._rawData.length===0) needsUpdates[index].delete(); //se deixar rows vazias na planilha\n      //         let city = needsUpdates[index].City;\n      //         setTimeout(() => \n      //             {\n      //                 (async function main() {\n      //                     try{\n      //                         let providerResult = await provider.search({ query: city.replace('-',\",\") + ', Brazil' });\n                      \n      //                         if(providerResult.length !== 0 ){\n      //                             // throw new Error(\"endereco-nao-encontrado\");\n                      \n      //                             console.log(providerResult);\n      //                             let latlon = [providerResult[0].y, providerResult[0].x];\n      //                             needsUpdates[index].Coordinates = JSON.stringify(latlon); // Convert obj to string\n      //                             //needsUpdates[index].mapCoords = latlon;\n      //                             await needsUpdates[index].save(); // Save to remote Google Sheet\n      //                         }\n      //                     }catch(e){\n      //                         console.log(\"ERRO\");\n      //                         console.log(e);\n      //                     }\n      //                 })();\n                  \n      //             },1300                        \n      //         );\n              \n      //     }\n      //   self.setState({ dataMaps: rows });\n      // }\n\n      // Loading message \n      self.setState({ isLoading: false })\n\n    })(self);\n\n    window.fixarPonto = function (endereco, coords){\n      (async function main(endereco, coords) {\n        try{\n          await doc.useServiceAccountAuth({\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n      \n          await doc.loadInfo(); // Loads document properties and worksheets\n      \n          const sheet = doc.sheetsByIndex[0];\n          \n          const rows = await sheet.getRows();\n\n          let rowEncontrada = rows.filter( (x) => \n          {\n            return JSON.parse(x.Dados).City.includes(endereco);\n          }\n          );\n\n          rowEncontrada.forEach( (x) => \n          {\n            let dadosNovos = JSON.parse(x.Dados);\n            dadosNovos.Coordinates = JSON.stringify(coords);\n            x.Dados = JSON.stringify(dadosNovos);\n          });\n\n          for(let x of rowEncontrada) await x.save();\n\n        }catch(e){\n          \n        }\n        \n      })(endereco, coords);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header rowCountProp={this.state.rowCount} />\n        {/* <InserirEndereco/>\n        <MyLocationButton location={this.state.center}/> */}\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={8}>\n            <Paper id=\"CoffeeMap\" className=\"fadeIn\">\n              {this.state.isLoading\n                ? <div className=\"flexLoading\"><div className=\"loading\">Carregando...</div></div>\n                : <CoffeeMap \n                dataMapsProp={this.state.dataMaps} \n                location={this.state.center} \n                tileMapOption={this.state.tileMapOption} \n                removerPonto={this.removerPonto} \n                entregarAlimento={this.entregarAlimento}\n                avaliar={this.avaliar}\n                filtro={this.state.filtro}\n                />\n              }\n            </Paper>\n          </Grid>\n          \n          <Grid item xs={12} sm={4}>\n          {/* https://smartdevpreneur.com/setting-material-ui-grid-item-height/ */}\n            <Paper id=\"CoffeeTable\" style={{height:'100%'}} className=\"toolPanel2\">\n              {this.state.isLoading\n                ? <div className=\"flexLoading\"><div className=\"loading\"><CircularProgress /></div></div>\n                // : <CoffeeTable dataMapsProp={this.state.dataMaps} dataHeaderProp={this.state.dataHeader} />\n              : \n              \n    <div className='relativePosition'>\n      ver  \n              <select ref= {this.dropDownMenuFiltro} id=\"filtro\" onChange={this.setFiltro}>\n                <option value=\"Todos\">Todos</option>\n                <option value=\"Doadores\">Doadores</option>\n                <option value=\"CestaBasica\">Cesta básica</option>\n                <option value=\"MoradorRua\">Situação de rua</option>\n                <option value=\"Refeição Pronta\">Refeição Pronta</option>\n              </select>\n              <Checkbox\n                checked={this.state.telefoneFilterLocal}\n                onChange={this.telefoneFilterChange}\n                inputProps={{ 'aria-label': 'controlled' }}\n              /> Telefone\n                {/* RADIO BUTTON */}\n        <div className='relativePosition'>\n          <ul>\n            \n          <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Teste\"\n                  checked={this.state.alimento === \"Teste\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span> Opção para testar a ferramenta </span>\n              </label>\n            </li>\n          <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Alimento pronto\"\n                  checked={this.state.alimento === \"Alimento pronto\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='yellowHub'> Pessoa precisando de Alimento pronto <img width=\"30px\" height=\"30px\" src={coffeeBean}></img></span>\n              </label>\n            </li>\n\n            <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Alimento de cesta básica\"\n                  checked={this.state.alimento === \"Alimento de cesta básica\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='yellowHub'> Preciso de Alimento de cesta básica <img width=\"30px\" height=\"30px\" src={coffeeBean}></img></span>\n              </label>\n            </li>\n                        \n            <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Doador\"\n                  checked={this.state.alimento === \"Doador\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='blueHub'> Recebo para doar <img width=\"30px\" height=\"30px\" src={hub}></img></span>\n              </label>\n            </li>\n\n            <li>\n            <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"EntregaAlimentoPronto\"\n                  checked={this.state.alimento === \"EntregaAlimentoPronto\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='redHub'> Entrego refeições em ponto fixo <img width=\"30px\" height=\"30px\" src={red}></img></span>\n              \n                <br></br>\n                <select ref= {this.dropDownMenuSemanaEntregaAlimentoPronto} style={{\"display\":\"none\"}} id=\"dia\" onChange={this.setDiaSemana}>\n                <option value=\"nas Segundas\">nas Segundas</option>\n                <option value=\"nas Terças\">nas Terças</option>\n                <option value=\"nas Quartas\">nas Quartas</option>\n                <option value=\"nas Quintas\">nas Quintas</option>\n                <option value=\"nas Sextas\">nas Sextas</option>\n                <option value=\"nos Sábados\">nos Sábados</option>\n                <option value=\"nos Domingos\">nos Domingos</option>\n                <option value=\"todo dia\">todo dia</option>\n              </select>\n              <select ref= {this.dropDownMenuHorarioEntregaAlimentoPronto} style={{\"display\":\"none\"}} id=\"horario\" onChange={this.setHorario}>\n                <option value=\"manhã 05:30\">manhã 05:30</option>\n                <option value=\"manhã 06:30\">manhã 06:30</option>\n                <option value=\"tarde 13:30\">tarde 13:30</option>\n                <option value=\"tarde 16:30\">tarde 16:30</option>\n                <option value=\"noite 18:30\">noite 18:30</option>\n                <option value=\"noite 19:30\">noite 19:30</option>\n              </select>\n              </label>\n            </li>\n\n            <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"PrecisandoBuscar\"\n                  checked={this.state.alimento === \"PrecisandoBuscar\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='greenHub'> Tenho alimento perto de se perder <a target='_blank' rel=\"noreferrer\" href=\"https://www.camara.leg.br/noticias/670937-nova-lei-incentiva-empresas-a-doarem-alimentos-e-refeicoes-para-pessoas-vulneraveis/\">(lei)</a>  <img width=\"30px\" height=\"30px\" src={green}></img></span>\n              \n              <br></br>\n              <select ref= {this.dropDownMenuSemanaPrecisandoBuscar} style={{\"display\":\"none\"}} id=\"dia\" onChange={this.setDiaSemana}>\n                <option value=\"Hoje\">Hoje</option>\n                <option value=\"nas Segundas\">nas Segundas</option>\n                <option value=\"nas Terças\">nas Terças</option>\n                <option value=\"nas Quartas\">nas Quartas</option>\n                <option value=\"nas Quintas\">nas Quintas</option>\n                <option value=\"nas Sextas\">nas Sextas</option>\n                <option value=\"nos Sábados\">nos Sábados</option>\n                <option value=\"nos Domingos\">nos Domingos</option>               \n                <option value=\"todo dia\">todo dia</option>\n              </select>\n              <select ref= {this.dropDownMenuHorarioPrecisandoBuscar} style={{\"display\":\"none\"}} id=\"horario\" onChange={this.setHorario}>\n                <option value=\"manhã 05:30\">manhã 05:30</option>\n                <option value=\"manhã 06:30\">manhã 06:30</option>\n                <option value=\"tarde 13:30\">tarde 13:30</option>\n                <option value=\"tarde 16:30\">tarde 16:30</option>\n                <option value=\"noite 18:30\">noite 18:30</option>\n                <option value=\"noite 19:30\">noite 19:30</option>\n              </select>\n              </label>\n              \n            </li>\n\n          \n          </ul>\n    </div>\n        {/* FIM RADIO BUTTON */}\n            <div className='relativePosition'>\n                \n                <input className=\"TextField tfMarginUp\" type=\"text\" placeholder='Insira telefone se quiser' value={this.state.telefone} onChange={this.handleChangeTelefone} />\n                <input className='nLocal' type=\"text\" placeholder='nº' value={this.state.numero} onChange={this.handleChangeNumero} />\n                \n                <br/>\n                <select style={{\"display\":\"none\"}} ref= {this.dropDownMenuRedeSocial}>\n                  <option value=\"instagram.com/\">Insta</option>\n                  <option value=\"facebook.com/\">Face</option>\n                </select>\n                <input ref= {this.redesocialRef} style={{\"display\":\"none\"}} className=\"TextField\" type=\"text\" placeholder='@' value={this.state.site} onChange={this.handleChangeRedeSocial} />\n                \n                <br></br>\n                <div className='buttonsSidebySide'>\n                  <MyLocationButton\n                  location={this.state.center} \n                  alimento={this.state.alimento} \n                  telefone={this.state.telefoneEncryptado}\n                  diaSemana={this.state.diaSemana}\n                  horario={this.state.horario}\n                  numero={this.state.numero}\n                  redesocial={this.state.redesocial}\n                  /> \n\n                  {this.state.isLoading?\n                  <CircularProgress/>\n                  :<button className=\"SubmitButton buttonsSidebySide\" onClick={this.handleClickMap}>marcar Local Tocado</button>}\n                </div>\n                \n                <InserirEndereco \n                alimento={this.state.alimento} \n                telefone={this.state.telefoneEncryptado}\n                diaSemana={this.state.diaSemana}\n                horario={this.state.horario}\n                redesocial={this.state.redesocial}\n                /> \n\n                {/* <input className=\"TextField\" type=\"text\" placeholder='Insira o site do projeto' value={this.state.site} onChange={this.handleChangeSite} />\n                <br></br> */}\n                \n\n               \n              </div>\n          </div>\n               \n              \n              }\n            </Paper>\n          </Grid>\n\n\n          <Grid item xs={12} sm={12}>\n            <Paper id=\"MoreInfo\" style={{height:'100%'}} >\n            <a target='_blank' rel=\"noreferrer\" href=\"https://instagram.com/mapafome\">\n            <img src={insta} style={{height:'25px'}}/>\n            </a>\n\n            <a className=\"wpbtn\" title=\"share to whatsapp\" href=\"whatsapp://send?text=Para marcar no mapa e alimentar quem tem fome, achei esse site: www.mapafome.com.br\"> <img className=\"wp\" src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/>\n                Compartilhar no Whatsapp</a>\n                <a style={{float:'right'}} target='_blank' rel=\"noreferrer\" href=\"https://t.me/share?url=www.mapafome.com.br&amp;text=Para%20marcar%20no%20mapa%20e%20alimentar%20quem%20tem%20fome%2C%20achei%20esse%20site%3A\" className=\"tgme_widget_share_btn\"><img className=\"telegram\" src=\"https://telegram.org/img/WidgetButton_LogoSmall.png\" alt=\"\"></img></a>\n\n                <br></br>\n              Mapeados: {this.state.rowCount} \n              <br></br>No mapa clique na bolinha para saber como ajudar.<br></br> Você pode se incluir ou incluir outra pessoa, <br></br>selecione a situação e confirme o local (mais informações <a target='_blank' rel=\"noreferrer\" href=\"https://g1.globo.com/pe/pernambuco/noticia/2022/02/10/site-criado-por-estudante-da-ufpe-aproxima-pessoas-que-estao-passando-fome-e-doadores-de-comida.ghtml\">na matéria da Globo</a>):\n              \n              <br></br>\n              \n                {/* <img src={qr} alt=\"\"/> */}\n                {/* <CleanOld></CleanOld> */}\n                <img className=\"ods\" alt=\"\" src=\"https://brasil.un.org/profiles/undg_country/themes/custom/undg/images/SDGs/pt-br/SDG-2.svg\"></img> No Mapa da Fome você pode encontrar a quem ajudar e fazer novas marcações, caso uma opção represente você ou outra pessoa, selecione, coloque número para contato se quiser, e confirme com localização atual ou endereço e número\n                <br></br><span className=\"yellowHub\">  em amarelo são pessoas <img width=\"30px\" height=\"30px\" src={coffeeBean}></img></span>em vulnerabilidade social e insegurança alimentar que estão com fome em casa ou na rua, --precisam de alimento\n                <br></br><span className=\"blueHub\">  em azul são pessoas <img width=\"30px\" height=\"30px\" src={hub}></img></span>que recebem alimentos ou recursos para distribuir alimento ou refeições na comunidade (exemplo: sopão solidário, ongs, voluntários) --precisam de doações\n                <br></br><span className=\"redHub\">  em vermelho são pessoas <img width=\"30px\" height=\"30px\" src={red}></img></span>que entregam refeição em ponto fixo na rua em certo dia na semana. --ponto de entrega de alimento pronto\n                <br></br><span className=\"greenHub\">  em verde são pessoas <img width=\"30px\" height=\"30px\" src={green}></img></span>que trabalham com alimentos e precisam destinar os alimentos não comercializados ou não consumidos e não tem pessoas para buscar esses alimentos (exemplo: restaurante, hotel, lanchonete, feira livre, supermercados) --precisam de voluntários para buscar \n              \n                \n                <br></br><br></br>serve para \n\n<br></br>-mapear pessoas que estão com fome na rua ou em casa\n<br></br>-mapear iniciativas que recebem recursos para fazer doação\n<br></br>-mostrar no mapa onde e quando tem alimento sendo distribuído\n<br></br>-mostrar no mapa lugares comerciais ou residenciais que precisam de voluntários ou necessitados para buscar alimentos não consumidos ou não comercializados\n<br></br> é possível traçar uma rota ao destino ao clicar Ir para o destino, e ser redirecionado para o Google Maps\n<br></br>\ncontato: <a target='_blank' rel=\"noreferrer\" href=\"https://mail.google.com/mail/u/0/?fs=1&to=rslgp@cin.ufpe.br&tf=cm\" >rslgp@cin.ufpe.br</a> <a target='_blank' rel=\"noreferrer\"  href='https://wa.me/5583996157234'>(83) 9.9615-7234</a>\n\n\n<Sugestao/>\n        \n        </Paper>\n          </Grid>\n\n        </Grid>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","export default __webpack_public_path__ + \"static/media/bean.8d52f968.svg\";"],"sourceRoot":""}