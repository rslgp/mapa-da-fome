{"version":3,"sources":["images/hub.svg","images/green.svg","images/red.svg","components/map.js","images/currentLocation.svg","images/currentLocationSmall.svg","components/variaveisAmbiente.js","components/twemoji.js","components/header.js","components/tableCount.js","components/googlesheets/endereco.js","components/googlesheets/mylocation.js","components/googlesheets/sugestao.js","components/CreatorsMapaFome.js","images/qr.svg","components/googlesheets/cleanold.js","images/insta.svg","App.js","index.js","images/bean.svg"],"names":["TimeAgo","addDefaultLocale","pt","timeAgo","global","lastMarked","undefined","lastMarkedCoords","SearchField","_ref","apiKey","provider","OpenStreetMapProvider","params","countrycodes","addressdetails","country","providerOptions","searchBounds","LatLng","region","searchControl","GeoSearchControl","marker","icon","CurrentLocation","draggable","autoClose","map","useMap","useEffect","addControl","removeControl","myIcon","L","Icon","iconUrl","coffeeBean","iconSize","Point","className","hubIcon","hub","greenIcon","green","redIcon","red","CurrentLocationSVG","interactive","CurrentLocationSmall","CurrentLocationSmallSVG","TestIcon","markerclusterOptionsPrecisando","cluster","childCount","getChildCount","c","DivIcon","html","markerclusterOptionsAnjos","markerclusterOptionsEntrega","CoffeeMap","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","dataMaps","center","location","filtro","_createClass","key","value","screensizeZoom","window","innerWidth","_jsx","children","_jsxs","MapContainer","style","height","width","zoom","maxZoom","this","attributionControl","whenReady","target","on","e","_e$latlng","latlng","lat","lng","envVariables","remove","addTo","LayersControl","opacity","position","BaseLayer","checked","name","TileLayer","url","attribution","closeResultsOnClick","AttributionControl","prefix","Marker","eventHandlers","click","preventDefault","renderSwitch","renderTestes","mapCoords","DateISO","Telefone","Avaliacao","_this2","googleDirection","concat","dateMarked","format","Date","now","getTime","urlTelefone","legivelTelefone","replace","length","onClick","clicouTelefone","href","rel","AvaliacaoData","nota","totalClicks","Math","round","dadosPopup","_this3","precisandoMsg","contato","AlimentoEntregue","Roaster","RedeSocial","Popup","src","viewBox","focusable","d","Rating","onChange","event","newValue","avaliar","size","sx","verificado","verificarPonto","removerPonto","entregarAlimento","_this4","MarkerClusterGroup","spiderfyDistanceMultiplier","showCoverageOnHover","maxClusterRadius","iconCreateFunction","dataMapsProp","filter","x","dataItem","k","City","URL","DiaSemana","Mes","Horario","CurrentIcon","_this4$setupVariables","setupVariables","telefoneFilter","_objectSpread","contabilizarClicado","console","log","configPopup","_this5","_this5$setupVariables","_this6","removeOutsideVisibleBounds","_this6$setupVariables","_this7","_this7$setupVariables","_this8","_this8$setupVariables","redesocial","_this9","_this9$setupVariables","_this10","_this10$setupVariable","_this11","_this11$setupVariable","msec","mins","floor","param","renderDoadoresAzul","renderDoadoresVerde","renderNecessitados","renderCestaBasica","renderDoadoresVermelho","renderRedeSocial","renderVerificados","nextProps","Component","localizacao","mapArea","teto","chao","paredeEsquerda","paredeDireita","lat1","lon1","lat2","lon2","dLat","PI","dLon","a","sin","cos","atan2","sqrt","dadosRow","numero","dadosJSON","alimento","toISOString","coords","Coordinates","JSON","stringify","telefone","diaSemana","horario","mes","Dados","Twemoji","emoji","dangerouslySetInnerHTML","__html","twemoji","parse","folder","ext","memo","Header","apply","arguments","rowCountProp","id","AppBar","Toolbar","Typography","variant","GoogleSpreadsheet","require","doc","process","REACT_APP_GOOGLESHEETID","NameForm","isLoading","handleChange","bind","_assertThisInitialized","handleSubmit","setState","_main","_asyncToGenerator","_regeneratorRuntime","mark","_callee","self","sheet","row","providerResult","latlon","wrap","_context","prev","next","useServiceAccountAuth","client_email","REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL","private_key","REACT_APP_GOOGLE_PRIVATE_KEY","loadInfo","sheetsByIndex","alert","abrupt","endereco","criarRow","search","query","sent","y","Error","t0","addRow","reload","stop","_x","CircularProgress","onSubmit","type","placeholder","loadCells","getCell","saveUpdatedCells","_main2","_callee2","regiao","_context2","dentroLimites","_x2","Sugestoes","Sugestao","CreatorsMapaFome","cookies","Cookies","aes","AesEncryption","ReactGA","initialize","pageview","pathname","setSecretKey","REACT_APP_CRYPTSEED","App","dataHeader","label","rowCount","telefoneEncryptado","telefoneFilterLocal","site","dropDownMenuSemanaEntregaAlimentoPronto","React","createRef","dropDownMenuHorarioEntregaAlimentoPronto","dropDownMenuSemanaPrecisandoBuscar","dropDownMenuHorarioPrecisandoBuscar","dropDownMenuFiltro","redesocialRef","dropDownMenuRedeSocial","dropDownMenuMesPrecisandoBuscar","dropDownMenuMesEntregaAlimentoPronto","handleChangeNumero","setTipoAlimento","handleChangeTelefone","setDiaSemana","setHorario","setMes","setFiltro","handleClickMap","telefoneFilterChange","handleChangeRedeSocial","categoriaPonto","motivo","prompt","r","Motivo","Ponto","CategoriaPonto","_main3","_callee3","rows","rowEncontrada","dadosNovos","_context3","getRows","clicado","save","_x3","_main4","_callee4","_context4","clickTel","_x4","_main5","_callee5","_context5","_x5","avaliacao","_main6","_callee6","cookieName","pontos","coordsString","cookieExpireDate","_context6","get","includes","setDate","getDate","set","path","expires","_x6","_x7","isPrecisandoBuscar","isEntregaAlimentoPronto","isDoador","current","display","selectedOptions","telefoneValue","encrypt","_main7","_callee7","_envVariables$lastMar","_context7","getLatLng","_x8","navigator","geolocation","getCurrentPosition","currentLocation","latitude","longitude","_main8","_callee8","_context8","forEach","dados","decrypt","_x9","fixarPonto","_main9","_callee9","_iterator","_step","_context9","_createForOfIteratorHelper","s","n","done","f","finish","t1","_x10","_x11","distance","proximos","dado","distancia","distanceInKmBetweenEarthCoordinates","push","sort","b","stats","_main10","_callee10","SortedPoints","tmp","_context10","i","Grid","container","spacing","item","xs","sm","Paper","tileMapOption","ref","Checkbox","inputProps","onBlur","MyLocationButton","InserirEndereco","title","alt","float","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03a92934.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hub.4f920e1b.svg\";","export default __webpack_public_path__ + \"static/media/green.00533c2a.svg\";","export default __webpack_public_path__ + \"static/media/red.651e6e29.svg\";","import React, { Component, useEffect } from 'react';\nimport { MapContainer, Marker, TileLayer, Tooltip, AttributionControl, Popup, LayersControl } from \"react-leaflet\";\nimport L, {LatLng} from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport \"react-leaflet-markercluster/dist/styles.min.css\";\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\nimport { useMap } from 'react-leaflet';\nimport coffeeBean from '../images/bean.svg';\nimport hub from '../images/hub.svg';\nimport green from '../images/green.svg';\nimport red from '../images/red.svg';\nimport CurrentLocationSVG from '../images/currentLocation.svg';\nimport CurrentLocationSmallSVG from '../images/currentLocationSmall.svg';\nimport TimeAgo from 'javascript-time-ago';\nimport Rating from '@mui/material/Rating';\n\nimport envVariables from './variaveisAmbiente';\n\nimport pt from 'javascript-time-ago/locale/pt.json';\nTimeAgo.addDefaultLocale(pt);\n\nconst timeAgo = new TimeAgo();\n\nglobal.lastMarked = undefined;\nglobal.lastMarkedCoords = undefined;\n\nconst SearchField = ({ apiKey }) => {\n    \n    const provider = new OpenStreetMapProvider(\n    {\n        params: {\n            'accept-language': 'br', // render results in br\n            countrycodes: 'br', // limit search results to the br\n            addressdetails: 1, // include additional address detail parts\n            country:'br',\n          },\n        providerOptions:{\n            searchBounds: [\n            new LatLng(0.275901, -59.178876),\n            new LatLng(-35.558031, -28.944502)\n            ],\n            region: \"br\"\n        }\n    });\n  \n    // @ts-ignore\n    const searchControl = new GeoSearchControl({\n      provider: provider,\n      marker: {\n        // optional: L.Marker    - default L.Icon.Default\n        icon: CurrentLocation,\n        draggable: false,\n      },\n      autoClose:true,\n    }\n      \n    );\n  \n    const map = useMap();\n    useEffect(() => {\n      map.addControl(searchControl);\n      return () => map.removeControl(searchControl);\n    }, []);\n  \n    return null;\n  };\n\n// Leaflet custom marker\nconst myIcon = new L.Icon({\n    // Coffee bean attribution -- Thanks! https://commons.wikimedia.org/wiki/File:Coffee_bean_symbol.svg\n    iconUrl: coffeeBean,\n    iconSize: new L.Point(20, 20),\n    className: 'leaflet-bean-icon',\n});\n\n\n// Leaflet custom marker\nconst hubIcon = new L.Icon({\n    iconUrl: hub,\n    iconSize: new L.Point(30, 30),\n    className: 'leaflet-bean-icon',\n});\n\n// Leaflet custom marker\nconst greenIcon = new L.Icon({\n    iconUrl: green,\n    iconSize: new L.Point(35, 35),\n    className: 'leaflet-bean-icon',\n});\nconst redIcon = new L.Icon({\n    iconUrl: red,\n    iconSize: new L.Point(35, 35),\n    className: 'leaflet-bean-icon',\n});\n\nconst CurrentLocation = new L.Icon({\n    iconUrl: CurrentLocationSVG,\n    iconSize: new L.Point(150, 150),\n    className: 'leaflet-bean-icon',\n    interactive: false\n});\nconst CurrentLocationSmall = new L.Icon({\n    iconUrl: CurrentLocationSmallSVG,\n    iconSize: new L.Point(20, 20),\n    className: 'leaflet-bean-icon',\n    interactive: false\n});\n\nconst TestIcon = new L.Icon({\n    iconUrl: 'https://maps.gstatic.com/tactile/reveal/close_1x_16dp.png',\n    iconSize: new L.Point(10, 10),\n    className: 'leaflet-bean-icon',\n    interactive: false\n});\n\n\nconst markerclusterOptionsPrecisando = function (cluster) {\n        var childCount = cluster.getChildCount();\n        var c = ' marker-cluster-';\n        if (childCount < 10) {\n          c += 'small';\n        } \n        else if (childCount < 100) {\n          c += 'medium';\n        } \n        else {\n          c += 'large';\n        }\n       \n        return new L.DivIcon({ html: '<div><span>' + childCount + '</span></div>', \n         className: 'marker-cluster' + c + '-precisandoCluster', iconSize: new L.Point(40, 40) });\n        };\n\n  const markerclusterOptionsAnjos = (cluster) => {\n    var childCount = cluster.getChildCount();\n    var c = ' marker-cluster-';\n    if (childCount < 10) {\n      c += 'small';\n    } \n    else if (childCount < 100) {\n      c += 'medium';\n    } \n    else {\n      c += 'large';\n    }\n   \n    return new L.DivIcon({ html: '<div><span>' + childCount + '</span></div>', \n     className: 'marker-cluster' + c +'-anjosCluster', iconSize: new L.Point(40, 40) });\n    };\n\n    const markerclusterOptionsEntrega = (cluster) => {       \n        return new L.DivIcon({ html: '<div><span>' + cluster.getChildCount() + '</span></div>', \n         className: 'redHub marker-cluster', iconSize: new L.Point(40, 40) });\n    };\n\n\nclass CoffeeMap extends Component {\n\n    // Initial state\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            dataMaps: [],\n            center: props.location,\n            filtro: props.filtro,\n        }\n    }\n\n     //ATUALIZAR PROPS VINDAS DO PAI\n     static getDerivedStateFromProps(nextProps, state) {\n        if(state){\n          if (nextProps.filtro !== state.filtro){ \n            state.filtro=nextProps.filtro;\n          }\n        }\n        return state;\n      }\n\n    render() {\n\n        // Render map default zoom based on mobile breakpoint\n        const isMobile = window.innerWidth < 480;\n        const screensizeZoom = isMobile ? 7.25 : 8.5*1.2;\n\n        return (\n            <div>\n                <MapContainer\n                    style={{ height: \"89vh\", width: \"100%\" }}\n                    zoom={screensizeZoom}\n                    maxZoom={18}\n                    center={this.state.center}\n                    attributionControl={false}\n                    whenReady={(map) => {\n                        //console.log(map);\n                        map.target.on(\"click\", function (e) {\n                          //if(e.originalEvent.detail>=2)alert(e.originalEvent.detail);\n                          const { lat, lng } = e.latlng;\n                          //envVariables.lastMarked.latlng = [lat,lng];\n                        //   console.log(this);\n                        //   this.props.onClickMap([lat,lng]);\n                          if(envVariables.lastMarked) envVariables.lastMarked.remove();\n                          envVariables.lastMarked = L.marker([lat, lng], {icon:CurrentLocationSmall, draggable: false}).addTo(map.target);\n                        });\n                      }}\n                    >\n\n{/* https://leaflet-extras.github.io/leaflet-providers/preview/ */}\n{/* https://github.com/dhis2-club-tanzania/function-maintenance/blob/0dadaa96955156b6ddefc0fcf9dd54e45ffb9458/src/app/shared/modules/ngx-dhis2-visualization/modules/map/constants/tile-layer.constant.ts */}\n{/* https://www.arcgis.com/apps/mapviewer/index.html */}\n                    {/* <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n                     {/* <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n                    {/* <TileLayer url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n\n                    \n                     {/* {this.state.tileMapOption ? \n                     <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                     attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                 />\n                    :\n                    <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />\n                } */}\n\n                     {/* <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    /> */}\n                    {/* <TileLayer url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />  */}\n                    {/* <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />  */}\n                    <LayersControl style={{opacity:'0.5'}} position=\"bottomleft\">\n                    \n                    {/* <LayersControl.BaseLayer checked name=\"Esri\">\n                    <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}\"\n                        attribution='Tiles &copy; Esri'\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"Stamen-lite\">\n                    <TileLayer url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}{r}.png\"\n                        attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"Stamen-terrain\">\n                    <TileLayer url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/terrain/{z}/{x}/{y}{r}.png\"\n                        attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"4\">\n                    <TileLayer url=\"https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"3\">\n                    <TileLayer url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"2\">\n                    <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer checked name=\"1\">\n                    <TileLayer url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer> */}\n                    <LayersControl.BaseLayer checked name=\"Waze\">\n                    <TileLayer url=\"https://worldtiles1.waze.com/tiles/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='https://www.waze.com/pt-BR/live-map' target='_blank' rel='noreferrer'>Waze</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n                    <LayersControl.BaseLayer  name=\"Mapa\">\n                    <TileLayer url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                     attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OSM</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n\n                    <LayersControl.BaseLayer name=\"Satelite\">\n                    <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n                        attribution=\" &copy; <a href='https://www.arcgis.com/apps/mapviewer/index.html' target='_blank' rel='noreferrer'>Esri</a>\"\n                    />\n                    </LayersControl.BaseLayer>\n\n                    \n                    </LayersControl>\n\n                    <SearchField \n                        closeResultsOnClick={true}\n                        providerOptions={{\n                            searchBounds: [\n                            new LatLng(0.275901, -59.178876),\n                            new LatLng(-35.558031, -28.944502)\n                            ],\n                            region: \"br\"\n                        }}\n                    />\n\n                    <AttributionControl\n                        position=\"bottomleft\"\n                        prefix={false}\n                    />\n                    \n                    <Marker\n                            icon= {CurrentLocation} \n                            key={\"currentPosition\"}\n                            center={this.state.center}\n                            position={this.state.center}\n\n                            eventHandlers={{\n                                click: (e) => { \n                                    e.preventDefault();\n                                }\n                            }}\n\n                            interactive={false}\n                        >\n                            \n                    {/* <Popup\n                        direction=\"auto\"\n                        offset={[2, 0]}\n                        opacity={1}>\n                        <span>você está aqui</span>\n                    </Popup> */}\n                        </Marker>\n\n                        {/* {(() => {\n                            switch(this.state.filtro) {\n                                case \"Todos\":\n                                    return ([\n                                        this.renderDoadoresAzul(),\n                                        this.renderDoadoresVerde(),\n                                        this.renderNecessitados(),\n                                        this.renderDoadoresVermelho()]\n                                    )\n                                    break;\n                                case \"Necessitados\":\n                                    return ([\n                                        this.renderNecessitados()]\n                                    )\n                                    break;\n                                case \"Doadores\":\n                                    return ([\n                                        this.renderDoadoresAzul(),\n                                        this.renderDoadoresVerde(),\n                                        this.renderDoadoresVermelho()]\n                                    )\n                                    break;\n                                case \"Refeição Pronta\":\n                                    return ([\n                                        this.renderDoadoresVerde(),\n                                        this.renderDoadoresVermelho()]\n                                    )\n                                    break;\n                            }\n                        })()} */}\n                        {this.renderSwitch(this.state.filtro)}\n                        {this.renderTestes()}\n\n                    \n                </MapContainer>\n            </div>\n        );\n    }\n\n    \n    setupVariables(mapCoords,DateISO,Telefone,Avaliacao){\n        let googleDirection = `https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`;\n                            \n        let dateMarked = timeAgo.format(Date.now() - (Date.now() - new Date(DateISO).getTime()) );\n         //if(DateISO) dateMarked\n        if(Telefone){\n            let urlTelefone = `whatsapp://send?phone=55${Telefone}`;\n            let legivelTelefone = Telefone.replace(/(\\d{2})(\\d{5})(\\d{4})/g, \"($1) $2-$3\");\n            let contato=\"contato:\";\n            switch(Telefone.length){\n                case 0:\n                    Telefone=\"\";\n                    break;\n                case 8:\n                    Telefone=\"contato:\"+Telefone.replace(/(\\d{4})(\\d{4})/g, \"$1-$2\");\n                    Telefone=<span onClick={()=>this.props.clicouTelefone([mapCoords[0], mapCoords[1]])}>{Telefone}</span>\n                    break;\n                case 9:\n                    Telefone=\"contato:\"+Telefone.replace(/(\\d{5})(\\d{4})/g, \"$1-$2\");\n                    Telefone=<span onClick={()=>this.props.clicouTelefone([mapCoords[0], mapCoords[1]])}>{Telefone}</span>\n                    break;\n                default:\n                    Telefone=<span onClick={()=>this.props.clicouTelefone([mapCoords[0], mapCoords[1]])}>{contato}<a href={urlTelefone} target='_blank' rel='noreferrer'>{legivelTelefone}</a></span>;\n                    break;\n            }\n        }\n\n        let AvaliacaoData = {nota:0, totalClicks:0};\n        if(Avaliacao){\n            AvaliacaoData.totalClicks = (Avaliacao[\"5\"]+Avaliacao[\"4\"]+Avaliacao[\"3\"]+Avaliacao[\"2\"]+Avaliacao[\"1\"]);\n            if( AvaliacaoData.totalClicks === 0 ){\n                Avaliacao=\"Nenhuma\";\n            }else{\n                Avaliacao = (Avaliacao[\"5\"]*5 +\n                Avaliacao[\"4\"]*4 +\n                Avaliacao[\"3\"]*3 +\n                Avaliacao[\"2\"]*2 +\n                Avaliacao[\"1\"]*1)\n                /            \n                (AvaliacaoData.totalClicks);\n\n                Avaliacao = Math.round(Avaliacao * 100)/100;\n\n            }\n        }\n\n        AvaliacaoData.nota = Avaliacao;\n\n    \n        return {googleDirection, dateMarked, Telefone, AvaliacaoData};\n    }\n\n    configPopup(dadosPopup){\t\n        let {googleDirection, precisandoMsg, dateMarked, contato, \t\n            AlimentoEntregue, mapCoords, Roaster, Avaliacao, RedeSocial} = dadosPopup;\t\n        \n        if(Avaliacao===undefined) Avaliacao = {nota:\"Nenhuma\",totalClicks:0};\n        return <Popup>\n            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n            <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n            <br/>\n            <div style={{width:'80%'}}> {precisandoMsg} </div>\n            <br/>\n            {dateMarked} {contato} \n            {RedeSocial ? \n                <span><br></br><a href={\"https://\"+RedeSocial} target='_blank' rel='noreferrer'> RedeSocial</a></span>\n            : <span></span>\n            }\n            <br/>\n            (<svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" focusable=\"false\"><path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27z\"></path></svg>\n            {Avaliacao.nota})\n            ({Avaliacao.totalClicks} notas) \n            Avalie: \n            <br/>\n            <Rating\n                name=\"simple-controlled\"\n                value={Avaliacao.nota}\n                onChange={(event, newValue) => {\n                    this.props.avaliar([mapCoords[0], mapCoords[1]], newValue);\n                }}\n                size=\"large\"\n                sx={{\"font-size\":\"2.125rem\"}}\n            />\n            \n            <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n            { (Roaster === \"Doador\" || Roaster === \"EntregaAlimentoPronto\") ? (dadosPopup.verificado===1 ? <img src=\"https://static.xx.fbcdn.net/assets/?revision=1174640696642832&amp;name=ig-verifiedbadge-shared&amp;density=1\"></img> : <button onClick={()=>this.props.verificarPonto([mapCoords[0], mapCoords[1]], Roaster)}>cnpj</button>) : <span></span>}\n            <br/>\n            <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n            <span>    </span>\n            <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                    \n        </Popup>\n    }\n\n    renderRedeSocial(){\n        return <MarkerClusterGroup\n                    // grupo de onde pode ajudar\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                        iconCreateFunction={markerclusterOptionsAnjos}\n                    >                  \n                    {/* .filter(x => { return x.Coordinates; })       */}\n                        {this.props.dataMapsProp.filter(x => {\n                            return x.RedeSocial \n                        }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Mes, Horario, AlimentoEntregue, Avaliacao, RedeSocial} = dataItem;\n                            \n                            if(mapCoords === undefined) return; if(URL===undefined) URL = \"\"; \n                            if(RedeSocial===undefined) return (<div></div>);\n                            \n                            let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone, Avaliacao);\n                            \n                            //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                            if(envVariables.telefoneFilter && (contato===undefined || contato===\"\")) return (<div></div>);\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            switch(Roaster){\n                                case \"Doador\":\n                                    precisandoMsg = \"Recebendo alimento para distribuir\"+URL;\n                                    CurrentIcon = hubIcon;\n                                    break;                               \n                                \n                                case \"EntregaAlimentoPronto\":\n                                    precisandoMsg = `Entregando refeições prontas `+DiaSemana+\" pela \"+Horario+\" \"+Mes;\n                                    CurrentIcon = redIcon;\n                                    break;\n                                default:\n                                    return (<div></div>);\n                                    break;\n                            }\n                            \n                            let dadosPopup = {...dataItem};\n                            dadosPopup.precisandoMsg = precisandoMsg;\n                            dadosPopup.googleDirection = googleDirection;\n                            dadosPopup.dateMarked = dateMarked;\n                            dadosPopup.contato = contato;\n                            dadosPopup.Avaliacao = nota;\n\n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`);\n                                            this.props.contabilizarClicado([mapCoords[0], mapCoords[1]]);\n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                   {this.configPopup(dadosPopup)}\n                                    \n                                    {/* <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n                                        <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {contato} \n                                        <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n                                        <br/>\n                                        <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                        <span>    </span>\n                                        <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                \n                                    </Popup> */}\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n    }\n\n    renderVerificados(){\n        return <MarkerClusterGroup\n                    // grupo de onde pode ajudar\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                        iconCreateFunction={markerclusterOptionsAnjos}\n                    >                  \n                    {/* .filter(x => { return x.Coordinates; })       */}\n                        {this.props.dataMapsProp.filter(x => {return x.RedeSocial }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Mes, Horario, AlimentoEntregue, Avaliacao, RedeSocial} = dataItem;\n                            \n                            if(mapCoords === undefined) return; if(URL===undefined) URL = \"\"; if(RedeSocial===undefined) RedeSocial=\"\";\n                            \n                            let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone, Avaliacao);\n                            \n                            //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            if(dataItem.verificado !== 1) return (<div></div>);\n                            if(envVariables.telefoneFilter && (contato===undefined || contato===\"\")) return (<div></div>);\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            switch(Roaster){\n                                case \"Doador\":\n                                    precisandoMsg = \"Recebendo alimento para distribuir\"+URL;\n                                    CurrentIcon = hubIcon;\n                                    break;                               \n                                \n                                case \"EntregaAlimentoPronto\":\n                                    precisandoMsg = `Entregando refeições prontas `+DiaSemana+\" pela \"+Horario+\" \"+Mes;\n                                    CurrentIcon = redIcon;\n                                    break;\n                                default:\n                                    return (<div></div>);\n                                    break;\n                            }\n                            \n                            let dadosPopup = {...dataItem};\n                            dadosPopup.precisandoMsg = precisandoMsg;\n                            dadosPopup.googleDirection = googleDirection;\n                            dadosPopup.dateMarked = dateMarked;\n                            dadosPopup.contato = contato;\n                            dadosPopup.Avaliacao = nota;\n\n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`); \n                                            this.props.contabilizarClicado([mapCoords[0], mapCoords[1]]);\n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                   {this.configPopup(dadosPopup)}\n                                    \n                                    {/* <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n                                        <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {contato} \n                                        <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n                                        <br/>\n                                        <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                        <span>    </span>\n                                        <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                \n                                    </Popup> */}\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n    }\n\n    renderDoadoresAzul(){\n        return <MarkerClusterGroup\n                    // grupo de onde pode ajudar\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                        iconCreateFunction={markerclusterOptionsAnjos}\n                        \n                        removeOutsideVisibleBounds={false}\n                    >                  \n                    {/* .filter(x => { return x.Coordinates; })       */}\n                        {this.props.dataMapsProp.filter(x => {return x.Roaster===\"Doador\" }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Horario, AlimentoEntregue, Avaliacao, RedeSocial} = dataItem;\n                            \n                            if(mapCoords === undefined) return; if(URL===undefined) URL = \"\"; if(RedeSocial===undefined) RedeSocial=\"\";\n                            \n                            let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone, Avaliacao);\n                            \n                            //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                            if(envVariables.telefoneFilter && (contato===undefined || contato===\"\")) return (<div></div>);\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            // switch(Roaster){\n                            //     case \"Doador\":\n                                    precisandoMsg = \"Recebendo alimento para distribuir\"+URL;\n                                    CurrentIcon = hubIcon;\n                            //         break;                               \n                                \n                            //     default:\n                            //         return (<div></div>);\n                            //         break;\n                            // }\n\n                            let dadosPopup = {...dataItem};\n                            dadosPopup.precisandoMsg = precisandoMsg;\n                            dadosPopup.googleDirection = googleDirection;\n                            dadosPopup.dateMarked = dateMarked;\n                            dadosPopup.contato = contato;\n                            dadosPopup.Avaliacao = nota;\n\n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`); \n                                            this.props.contabilizarClicado([mapCoords[0], mapCoords[1]]);\n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                   {this.configPopup(dadosPopup)}\n                                    \n                                    {/* <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n                                        <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {contato} \n                                        <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n                                        <br/>\n                                        <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                        <span>    </span>\n                                        <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                \n                                    </Popup> */}\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n    }\n\n    renderDoadoresVerde(){\n        return <MarkerClusterGroup\n                    // grupo de onde pode ajudar\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                        iconCreateFunction={markerclusterOptionsAnjos}\n                    >                        \n                        {this.props.dataMapsProp.filter(x => {return x.Roaster===\"PrecisandoBuscar\" }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Horario, Mes, AlimentoEntregue, Avaliacao} = dataItem;\n                            \n                            if(mapCoords === undefined) return; if(URL===undefined) URL = \"\"; if(Mes===undefined) Mes=\"\";\n\n                            let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone,Avaliacao);\n                            \n                            //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                            if(envVariables.telefoneFilter && (contato===undefined || contato===\"\")) return (<div></div>);\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            // switch(Roaster){\n                            //     case \"PrecisandoBuscar\":\n                                    precisandoMsg = `Precisando de pessoas para buscar `+DiaSemana + \" pela \"+Horario+\" \"+Mes;\n                                    CurrentIcon = greenIcon;\n                            //         break;                                \n                                \n                            //     default:\n                            //         return (<div></div>);\n                            //         break;\n                            // }\n                            \n                            let dadosPopup = {...dataItem};\n                            dadosPopup.precisandoMsg = precisandoMsg;\n                            dadosPopup.googleDirection = googleDirection;\n                            dadosPopup.dateMarked = dateMarked;\n                            dadosPopup.contato = contato;\n                            dadosPopup.Avaliacao = nota;\n\n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`); \n                                            this.props.contabilizarClicado([mapCoords[0], mapCoords[1]]);\n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                   {this.configPopup(dadosPopup)}\n                                    \n                                    {/* <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino \n                                        <img className=\"directionIcon\" src=\"https://maps.gstatic.com/tactile/omnibox/directions-2x-20150909.png\"></img></a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {contato} \n                                        <br/>{\"(Qtde entregue:\"+AlimentoEntregue+\")\"}\n                                        <br/>\n                                        <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                        <span>    </span>\n                                        <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                                \n                                    </Popup> */}\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n    }\n\n    renderDoadoresVermelho(){\n        return <MarkerClusterGroup\n        // grupo de entrega de alimentos prontos\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n            iconCreateFunction={markerclusterOptionsEntrega}\n            \n            removeOutsideVisibleBounds={false}\n        >                        \n            {this.props.dataMapsProp.filter(x => {return x.Roaster===\"EntregaAlimentoPronto\" }).map((dataItem, k) => {\n                let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, Horario, Mes, AlimentoEntregue, Avaliacao, RedeSocial } = dataItem;\n                \n                if(mapCoords === undefined) return; if(URL===undefined) URL = \"\"; if(Mes===undefined) Mes=\"\";\n\n                let {googleDirection, dateMarked, Telefone: contato, redesocial, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone, Avaliacao);\n                \n                //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                //if(envVariables.telefoneFilter) console.log(contato);       \n                if(envVariables.telefoneFilter && (contato===undefined || contato===\"\")) return (<div></div>);\n                //filtrar datas antigas\n                // if(\n                //     dateMarked.includes(\"semana\") \n                // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                // ) return (<div></div>);\n                \n                let precisandoMsg, CurrentIcon;\n                // switch(Roaster){\n                //     case \"EntregaAlimentoPronto\":\n                        precisandoMsg = `Entregando refeições prontas `+DiaSemana+\" pela \"+Horario+\" \"+Mes;\n                        CurrentIcon = redIcon;\n                //         break;\n                    \n                //     default:\n                //         return (<div></div>);\n                //         break;\n                // }\n\n                let dadosPopup = {...dataItem};\n                dadosPopup.precisandoMsg = precisandoMsg;\n                dadosPopup.googleDirection = googleDirection;\n                dadosPopup.dateMarked = dateMarked;\n                dadosPopup.contato = contato;\n                dadosPopup.Avaliacao = nota;\n                \n                return (\n                    <Marker\n                        eventHandlers={{\n                            click: (e) => { \n                                // alert(`Precisando de ${Roaster}`);\n                                this.props.contabilizarClicado([mapCoords[0], mapCoords[1]]); \n                                console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                            }\n                        }}\n                        icon= {CurrentIcon} \n                        key={k}\n                        center={[mapCoords[0], mapCoords[1]]}\n                        position={[mapCoords[0], mapCoords[1]]}\n                    >\n                        {this.configPopup(dadosPopup)}\n                                    \n                        {/* <Popup>\n                            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                            <br/>\n                            {precisandoMsg}\n                            <br/>\n                            {dateMarked} {contato} \n                            <br/>{\" (Qtde entregue:\"+AlimentoEntregue+\")\"}\n                            <br/>\n                            <button onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                            <span>    </span>\n                            <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                        </Popup> */}\n                        {/* <Tooltip\n                            // direction=\"auto\"\n                            // offset={[15, 0]}\n                            // opacity={1}>\n                            // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                            // <span>{City}, BR</span>\n                        </Tooltip> */}\n                    </Marker>);\n            })}\n        </MarkerClusterGroup>\n    }\n\n    renderNecessitados(){\n        return <MarkerClusterGroup\n        // grupo dos que precisam\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n            iconCreateFunction={markerclusterOptionsPrecisando}\n        >                        \n            {this.props.dataMapsProp.filter(x => {return x.Roaster===\"Alimento pronto\" }).map((dataItem, k) => {\n                let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, AlimentoEntregue, Avaliacao} = dataItem;\n                \n                if(mapCoords === undefined) return; if(URL===undefined) URL = \"\";\n                \n                let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone, Avaliacao);\n        \n                //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                if(envVariables.telefoneFilter && (contato===undefined || contato===\"\")) return (<div></div>);\n                //filtrar datas antigas\n                // if(\n                //     dateMarked.includes(\"semana\") \n                // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                // ) return (<div></div>);\n                \n                let precisandoMsg, CurrentIcon;\n                // switch(Roaster){                    \n                //     case \"Alimento pronto\":\n                        precisandoMsg = `Precisando de ${Roaster}`+URL;\n                        CurrentIcon = myIcon;\n                //         break;\n                    \n                //     default:\n                //         return (<div></div>);\n                //         break;\n                // }\n\n                let dadosPopup = {...dataItem};\n                dadosPopup.precisandoMsg = precisandoMsg;\n                dadosPopup.googleDirection = googleDirection;\n                dadosPopup.dateMarked = dateMarked;\n                dadosPopup.contato = contato;\n                dadosPopup.Avaliacao = nota;\n                \n                return (\n                    <Marker\n                        eventHandlers={{\n                            click: (e) => { \n                                // alert(`Precisando de ${Roaster}`); \n                                this.props.contabilizarClicado([mapCoords[0], mapCoords[1]]);\n                                console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                            }\n                        }}\n                        icon= {CurrentIcon} \n                        key={k}\n                        center={[mapCoords[0], mapCoords[1]]}\n                        position={[mapCoords[0], mapCoords[1]]}\n                    >\n                        {this.configPopup(dadosPopup)}\n                                    \n                        {/* <Popup>\n                            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                            <br/>\n                            {precisandoMsg}\n                            <br/>\n                            {dateMarked} {contato} \n                            <br/>{\" (Qtde entregue:\"+AlimentoEntregue+\")\"}\n                            <br/>\n                            <div className='buttonsSidebySide'>\n                                <button className='buttonsSidebySide' onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                <span>    </span>\n                                <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                            </div>\n                        </Popup> */}\n                        {/* <Tooltip\n                            // direction=\"auto\"\n                            // offset={[15, 0]}\n                            // opacity={1}>\n                            // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                            // <span>{City}, BR</span>\n                        </Tooltip> */}\n                    </Marker>);\n            })}\n        </MarkerClusterGroup>\n    }\n\n    renderCestaBasica(){\n        return <MarkerClusterGroup\n        // grupo dos que precisam\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n            iconCreateFunction={markerclusterOptionsPrecisando}\n        >                        \n            {this.props.dataMapsProp.filter(x => {return x.Roaster===\"Alimento de cesta básica\" }).map((dataItem, k) => {\n                let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, AlimentoEntregue, Avaliacao} = dataItem;\n                \n                if(mapCoords === undefined) return; if(URL===undefined) URL = \"\";\n                \n                let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone, Avaliacao);\n        \n                //if(envVariables.distanceInKmBetweenEarthCoordinates(envVariables.currentLocation[0], envVariables.currentLocation[1], mapCoords[0], mapCoords[1]) > 30) return(<div></div>)\n                            \n                if(envVariables.telefoneFilter && (contato===undefined || contato===\"\")) return (<div></div>);\n                //filtrar datas antigas\n                // if(\n                //     dateMarked.includes(\"semana\") \n                // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                // ) return (<div></div>);\n                \n                let precisandoMsg, CurrentIcon;\n                // switch(Roaster){                                \n                //     case \"Alimento de cesta básica\":\n                        precisandoMsg = `Precisando de ${Roaster}`+URL;\n                        CurrentIcon = myIcon;\n                //         break;\n                    \n                //     default:\n                //         return (<div></div>);\n                //         break;\n                // }\n\n                let dadosPopup = {...dataItem};\n                dadosPopup.precisandoMsg = precisandoMsg;\n                dadosPopup.googleDirection = googleDirection;\n                dadosPopup.dateMarked = dateMarked;\n                dadosPopup.contato = contato;\n                dadosPopup.Avaliacao = nota;\n                \n                return (\n                    <Marker\n                        eventHandlers={{\n                            click: (e) => { \n                                // alert(`Precisando de ${Roaster}`); \n                                this.props.contabilizarClicado([mapCoords[0], mapCoords[1]]);\n                                console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                            }\n                        }}\n                        icon= {CurrentIcon} \n                        key={k}\n                        center={[mapCoords[0], mapCoords[1]]}\n                        position={[mapCoords[0], mapCoords[1]]}\n                    >\n                        {this.configPopup(dadosPopup)}\n                                    \n                        {/* <Popup>\n                            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                            <br/>\n                            {precisandoMsg}\n                            <br/>\n                            {dateMarked} {contato} \n                            <br/>{\" (Qtde entregue:\"+AlimentoEntregue+\")\"}\n                            <br/>\n                            <div className='buttonsSidebySide'>\n                                <button className='buttonsSidebySide' onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                <span>    </span>\n                                <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                            </div>\n                        </Popup> */}\n                        {/* <Tooltip\n                            // direction=\"auto\"\n                            // offset={[15, 0]}\n                            // opacity={1}>\n                            // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                            // <span>{City}, BR</span>\n                        </Tooltip> */}\n                    </Marker>);\n            })}\n        </MarkerClusterGroup>\n    }\n\n    renderTestes(){\n        return <MarkerClusterGroup\n        // grupo dos que precisam\n            spiderfyDistanceMultiplier={1}\n            showCoverageOnHover={false}\n            maxClusterRadius={35}\n            iconCreateFunction={markerclusterOptionsPrecisando}\n        >                        \n            {this.props.dataMapsProp.filter(x => {return x.Roaster===\"Teste\" }).map((dataItem, k) => {\n                let { City, mapCoords, Roaster, URL, DateISO, Telefone, DiaSemana, AlimentoEntregue, Avaliacao} = dataItem;\n                \n                if(mapCoords === undefined) return; if(URL===undefined) URL = \"\";\n                \n                let {googleDirection, dateMarked, Telefone: contato, AvaliacaoData: nota} = this.setupVariables(mapCoords,DateISO,Telefone);\n        //filtrar datas antigas\n\n                var msec = Date.now() - (new Date(DateISO)).getTime();\n                var mins = Math.floor(msec / 60000);\n                var hrs = Math.floor(mins / 60);\n                if(\n                    hrs > 3\n                ) return (<div></div>);\n                \n                \n                let precisandoMsg, CurrentIcon;\n                // switch(Roaster){                                \n                //     case \"Teste\":\n                        CurrentIcon = TestIcon;\n                //         break;\n                    \n                //     default:\n                //         return (<div></div>);\n                //         break;\n                // }\n                \n                return (\n                    <Marker\n                        eventHandlers={{\n                            click: (e) => { \n                                // alert(`Precisando de ${Roaster}`); \n                                this.props.contabilizarClicado([mapCoords[0], mapCoords[1]]);\n                                console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                            }\n                        }}\n                        icon= {CurrentIcon} \n                        key={k}\n                        center={[mapCoords[0], mapCoords[1]]}\n                        position={[mapCoords[0], mapCoords[1]]}\n                    >\n                        {/* {this.configPopup(googleDirection,precisandoMsg,dateMarked,contato,AlimentoEntregue,mapCoords,Roaster)} */}\n                                    \n                        {/* <Popup>\n                            <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                            <br/>\n                            {precisandoMsg}\n                            <br/>\n                            {dateMarked} {contato} \n                            <br/>{\" (Qtde entregue:\"+AlimentoEntregue+\")\"}\n                            <br/>\n                            <div className='buttonsSidebySide'>\n                                <button className='buttonsSidebySide' onClick={() => this.props.removerPonto([mapCoords[0], mapCoords[1]], Roaster)}>apagar</button>\n                                <span>    </span>\n                                <button className='buttonsSidebySide floatRight' onClick={() => this.props.entregarAlimento([mapCoords[0], mapCoords[1]])}>entreguei</button>\n                            </div>\n                        </Popup> */}\n                        {/* <Tooltip\n                            // direction=\"auto\"\n                            // offset={[15, 0]}\n                            // opacity={1}>\n                            // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                            // <span>{City}, BR</span>\n                        </Tooltip> */}\n                    </Marker>);\n            })}\n        </MarkerClusterGroup>\n    }\n\n    renderSwitch(param){\n        switch(this.state.filtro) {\n            case \"Todos\":\n                return ([\n                    this.renderDoadoresAzul(),\n                    this.renderDoadoresVerde(),\n                    this.renderNecessitados(),\n                    this.renderCestaBasica(),\n                    this.renderDoadoresVermelho()]\n                )\n                break;\n            case \"CestaBasica\":\n                return ([\n                    this.renderCestaBasica()]\n                )\n                break;\n            case \"MoradorRua\":\n                return ([\n                    this.renderNecessitados()]\n                )\n                break;\n            case \"Doadores\":\n                return ([\n                    this.renderDoadoresAzul(),\n                    this.renderDoadoresVerde(),\n                    this.renderDoadoresVermelho()]\n                )\n                break;\n            case \"Refeição Pronta\":\n                return ([\n                    this.renderDoadoresVerde(),\n                    this.renderDoadoresVermelho()]\n                )\n                break;\t\n            case \"RedeSocial\":\t\n                return ([\t\n                    this.renderRedeSocial()]\t\n                )\t\n                break;\t\n            case \"Verificados\":\t\n                return ([\t\n                    this.renderVerificados()]\t\n                )\t\n                break;\t\n            case \"Nenhum\":\t\n                return (<div></div>);\t\n                break;\n            default:\n                return (<div></div>);\t\n                break;\n\n        }\n    }\n\n}\n\nexport default CoffeeMap;","export default __webpack_public_path__ + \"static/media/currentLocation.bd009424.svg\";","export default __webpack_public_path__ + \"static/media/currentLocationSmall.1d7df3b6.svg\";","const envVariables = {\r\n    \"mapArea\": {\r\n        \"teto\":2.20,\r\n        \"chao\":-14.09,\r\n        \"paredeEsquerda\":-52.42,\r\n        \"paredeDireita\":-34.32\r\n    },\r\n    \"lastMarked\":undefined,\r\n    \"dentroLimites\": (localizacao) => {\r\n        let permissao = false;\r\n        permissao = \r\n            //cima baixo\r\n            (localizacao[0]< envVariables.mapArea.teto && localizacao[0] > envVariables.mapArea.chao\r\n            &&\r\n            //esquerda direita\r\n            localizacao[1]>envVariables.mapArea.paredeEsquerda && localizacao[1] < envVariables.mapArea.paredeDireita        \r\n            ) || (\r\n              //cima baixo\r\n              localizacao[0]<-14.18 && localizacao[0] > -32.66\r\n              &&\r\n              //esquerda direita\r\n              localizacao[1]>-55.55 && localizacao[1] < -38.06        \r\n            );\r\n        return permissao;\r\n    },\r\n    \"telefoneFilter\":false,\r\n    \"distanceInKmBetweenEarthCoordinates\": ( lat1, lon1, lat2, lon2 ) => {\r\n        var earthRadiusKm = 6371;\r\n\r\n        var dLat =  (lat2-lat1) * Math.PI / 180;\r\n        var dLon =  (lon2-lon1) * Math.PI / 180;\r\n      \r\n        lat1 = lat1 * Math.PI / 180;\r\n        lat2 = lat2 * Math.PI / 180;\r\n      \r\n        var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n                Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2); \r\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n\r\n        return earthRadiusKm * c;\r\n    },\r\n    \"currentLocation\": [],\r\n    \"criarRow\": (dadosRow) => {\r\n\r\n        if(dadosRow.numero !== ''){\r\n            dadosRow.numero = \", nº\"+dadosRow.numero;\r\n        }\r\n        \r\n        \r\n        let dadosJSON = {\r\n            \"Roaster\": dadosRow.alimento, \r\n            \"DateISO\": new Date().toISOString(),\r\n            \"AlimentoEntregue\":0,\r\n            \"Avaliacao\": {\r\n                \"1\":0,\r\n                \"2\":0,\r\n                \"3\":0,\r\n                \"4\":0,\r\n                \"5\":0\r\n            },\r\n\r\n        };\r\n        if(dadosRow.numero!==\"\") dadosJSON.URL = dadosRow.numero;\r\n        if(dadosRow.coords!==\"\") dadosJSON.Coordinates = JSON.stringify(dadosRow.coords);\r\n        if(dadosRow.telefone!==\"\") dadosJSON.Telefone = dadosRow.telefone;\r\n        if(dadosRow.diaSemana!==\"\") {dadosJSON.DiaSemana = dadosRow.diaSemana; dadosJSON.Horario = dadosRow.horario}\r\n        if(dadosRow.redesocial!==\"\") {dadosRow.redesocial=dadosRow.redesocial.replace(\"@\",\"\");dadosJSON.RedeSocial = dadosRow.redesocial;}\r\n        if(dadosRow.mes!==\"\") dadosJSON.Mes = dadosRow.mes;\r\n        //if(dadosRow.endereco!==\"\") dadosJSON.City = dadosRow.endereco;\r\n        const row = {\r\n            Dados: JSON.stringify(dadosJSON)\r\n        };\r\n\r\n        return row;\r\n\r\n    },\r\n    \"rows\":undefined\r\n}\r\n\r\nexport default envVariables;","import React, { memo } from 'react'\nimport twemoji from 'twemoji'\n\n// Using the official https://github.com/twitter/twemoji from Twitter\n// With an excellent example from https://gist.github.com/chibicode/fe195d792270910226c928b69a468206\n\nconst Twemoji = ({ emoji }) => (\n    <span\n        dangerouslySetInnerHTML={{\n            __html: twemoji.parse(emoji, {\n                folder: 'svg',\n                ext: '.svg'\n            })\n        }}\n    />\n)\n\nexport default memo(Twemoji)","import React, { Component } from 'react';\nimport Twemoji from './twemoji';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import github_mark from '../images/github_mark.png';\nimport TableCount from './tableCount';\n\nclass Header extends Component {\n\n    render() {\n\n        const { rowCountProp } = this.props;\n\n        return (\n            <div id=\"header\">\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" id=\"logo\">\n                        <   Twemoji emoji=\"☕\" /> MAPA FOME <span className=\"beta\">(beta) site:</span> www.mapafome.com.br - assista aqui <a target='_blank' rel=\"noreferrer\" style={{\"color\":\"red\"}} href=\"https://www.youtube.com/watch?v=JcP9v5mZT9w\">Ilha das Flores</a>\n                        </Typography>\n                        {/* <TableCount rowCountProp={rowCountProp} /> */}\n                        {/* <a href=\"https://docs.google.com/spreadsheets/d/1u7jiqY1qM0jYWugn1dFiW3plQrvWysJqm8xXhO35zuU/edit?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Button\n                                variant=\"contained\"\n                                size=\"small\">\n                                Add<span id=\"RoasterButtonMobile\">&nbsp;Roaster</span>\n                            </Button>\n                        </a>\n                        <a href=\"https://github.com/hdehal/coffee-maps\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <IconButton\n                                className=\"GitHub\"\n                                variant=\"outlined\"\n                                size=\"small\">\n                                <img className=\"GitHub\" src={github_mark} alt=\"Hosted on GitHub\" />\n                            </IconButton>\n                        </a> */}\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Typography from '@mui/material/Typography';\n\nclass TableCount extends Component {\n    render() {\n        return (\n            <Typography className=\"TableCount\">\n                TOTAL: {this.props.rowCountProp}\n            </Typography>\n        );\n    }\n}\n\nexport default TableCount;","import React, { Component } from 'react';\r\n\r\nimport { \r\n  OpenStreetMapProvider,\r\n  // BingProvider \r\n} from 'leaflet-geosearch';\r\n\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport envVariables from '../variaveisAmbiente';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\nconst provider = new OpenStreetMapProvider();\r\n\r\n// = new BingProvider({\r\n//   params: {\r\n//     key: process.env.REACT_APP_BING_MAPS_API_KEY\r\n//   },\r\n// });\r\n//\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass NameForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '', \r\n        alimento: props.alimento, \r\n        isLoading:false,\r\n        telefone:props.telefone,\r\n        diaSemana:props.diaSemana,\r\n        horario:props.horario,\r\n        mes:props.mes,\r\n        redesocial:props.redesocial\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    //ATUALIZAR PROPS VINDAS DO PAI\r\n    static getDerivedStateFromProps(nextProps, state) {\r\n      if(state){\r\n        if (nextProps.alimento !== state.alimento){ \r\n          state.alimento=nextProps.alimento;\r\n        }\r\n        if (nextProps.telefone !== state.telefone){ \r\n          state.telefone=nextProps.telefone;\r\n        }\r\n        if (nextProps.diaSemana !== state.diaSemana){ \r\n          state.diaSemana=nextProps.diaSemana;\r\n        }\r\n        if (nextProps.horario !== state.horario){ \r\n          state.horario=nextProps.horario;\r\n        }\r\n        if (nextProps.mes !== state.mes){ \r\n          state.mes=nextProps.mes;\r\n        }\r\n        if (nextProps.redesocial !== state.redesocial){ \r\n          state.redesocial=nextProps.redesocial;\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n  \r\n    handleChange(event) {\r\n      if(event.target.value.length > 100) return; \r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      //alert('Um endereço foi enviado: ' + this.state.value);\r\n      if(this.state.value === '') {event.preventDefault();return;}\r\n      \r\n      this.setState({isLoading: true});\r\n\r\n      (async function main(self) {\r\n        await doc.useServiceAccountAuth({\r\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n        });\r\n\r\n        await doc.loadInfo(); // Loads document properties and worksheets\r\n\r\n        const sheet = doc.sheetsByIndex[0];\r\n        //row = { Name: \"new name\", Value: \"new value\" };\r\n        \r\n        // Total row count\r\n        let numero = self.state.value.replace(/[^0-9]/g,'');\r\n        if(numero === ''){\r\n          alert(\"faltou colocar o número\");\r\n          \r\n          event.preventDefault();\r\n          self.setState({isLoading: false});\r\n          return;\r\n        }\r\n        // const row = { \r\n        //   Roaster:  self.state.alimento, \r\n        //   URL:numero, City: self.state.value,\r\n        //   DateISO: new Date().toISOString(), \r\n        //   Telefone: self.state.telefone, \r\n        //   DiaSemana: self.state.diaSemana, \r\n        //   Horario: self.state.horario,\r\n        //   AlimentoEntregue:0,\r\n        // };\r\n\r\n        let dadosRow = {};\r\n        dadosRow.alimento = self.state.alimento;\r\n        dadosRow.numero = numero;\r\n        dadosRow.endereco = self.state.value;\r\n        dadosRow.coords = \"\";\r\n        dadosRow.telefone = self.state.telefone;\r\n        dadosRow.diaSemana = self.state.diaSemana;\r\n        dadosRow.horario = self.state.horario;\r\n        dadosRow.mes = self.state.mes;\r\n        dadosRow.redesocial = self.state.redesocial;\r\n        const row = envVariables.criarRow(dadosRow);\r\n        // let dadosJSON = { \r\n        //   \"Roaster\":  self.state.alimento, \r\n        //   \"URL\":numero, \r\n        //   \"City\": self.state.value,\r\n        //   \"DateISO\": new Date().toISOString(), \r\n        //   \"Telefone\": self.state.telefone, \r\n        //   \"DiaSemana\": self.state.diaSemana, \r\n        //   \"Horario\": self.state.horario,\r\n        //   \"AlimentoEntregue\":0,\r\n        //   \"RedeSocial\":\"\",\r\n        //   \"Avaliacao\": {\r\n        //     \"1\":0,\r\n        //     \"2\":0,\r\n        //     \"3\":0,\r\n        //     \"4\":0,\r\n        //     \"5\":0\r\n        //   },\r\n        // };\r\n\r\n        \r\n        try{\r\n          let dadosJSON = JSON.parse(row.Dados);\r\n          let providerResult = await provider.search({ query: self.state.value.replace('-',\",\") + ', Brazil' });\r\n  \r\n          if(providerResult.length !== 0 ){\r\n              // throw new Error(\"endereco-nao-encontrado\");\r\n  \r\n              // console.log(providerResult);\r\n              let latlon = [providerResult[0].y,providerResult[0].x];\r\n              dadosJSON.Coordinates = JSON.stringify(latlon).replace(\" \",\"\");\r\n              row.Dados = JSON.stringify(dadosJSON); // Convert obj to string\r\n              //needsUpdates[index].mapCoords = latlon;\r\n          }else{\r\n             throw new Error(\"endereco-nao-encontrado\");\r\n          }\r\n        }catch(e){\r\n            console.log(\"ERRO\");\r\n            console.log(e);\r\n            alert(\"Houve um problema ao cadastrar endereço, porfavor clique no mapa e depois confirme o no botão marcar Local tocado.\\nou use o botão marcar Localização Atual\");\r\n        }\r\n        await sheet.addRow(row);\r\n       \r\n        self.setState({isLoading: false});\r\n        window.location.reload();\r\n      })(this);\r\n      event.preventDefault();\r\n    }\r\n\r\n    \r\n  \r\n    render() {\r\n      return (\r\n        this.state.isLoading ?\r\n        <div><CircularProgress /></div>\r\n        :\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <input className=\"TextField\" type=\"text\" placeholder='Insira rua,nº,bairro,cidade,estado' value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input className=\"SubmitButton\" type=\"submit\" value=\"Enviar Endereço\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\nexport default NameForm; ","import React, { Component } from 'react';\r\n\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport envVariables from '../variaveisAmbiente';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass NameForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '', \r\n        location: props.location, \r\n        alimento: props.alimento, \r\n        isLoading:false,\r\n        telefone:props.telefone,\r\n        diaSemana:props.diaSemana,\r\n        mes:props.mes,\r\n        numero:props.numero,\r\n        redesocial:props.redesocial,\r\n      };\r\n  \r\n      // this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n\r\n    }\r\n\r\n  componentDidMount() {\r\n      \r\n    //salvar acesso  \r\n      \r\n    (async function main(self) {\r\n      try{\r\n        await doc.useServiceAccountAuth({\r\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n        });\r\n    \r\n        await doc.loadInfo(); // Loads document properties and worksheets\r\n    \r\n        const sheet = doc.sheetsByIndex[1];\r\n        \r\n        await sheet.loadCells('A2');\r\n        const a1 = sheet.getCell(1, 0);\r\n        a1.value+=1;\r\n        await sheet.saveUpdatedCells();\r\n      }catch(e){\r\n        \r\n      }\r\n      \r\n    })(this);\r\n\r\n  }\r\n\r\n    //ATUALIZAR PROPS VINDAS DO PAI\r\n    static getDerivedStateFromProps(nextProps, state) {\r\n      if(state){\r\n\r\n        if (nextProps.alimento !== state.alimento){ \r\n          state.alimento=nextProps.alimento;\r\n        }\r\n        if (nextProps.telefone !== state.telefone){ \r\n          state.telefone=nextProps.telefone;\r\n        }\r\n        if (nextProps.diaSemana !== state.diaSemana){ \r\n          state.diaSemana=nextProps.diaSemana;\r\n        }\r\n        if (nextProps.horario !== state.horario){ \r\n          state.horario=nextProps.horario;\r\n        }        \r\n        if (nextProps.mes !== state.mes){ \r\n          state.mes=nextProps.mes;\r\n        }\r\n        if (nextProps.numero !== state.numero){ \r\n          state.numero=nextProps.numero;\r\n        }\r\n        if (nextProps.redesocial !== state.redesocial){ \r\n          state.redesocial=nextProps.redesocial;\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n  \r\n    // handleChange(event) {\r\n    //   this.setState({value: event.target.value});\r\n    // }\r\n  \r\n    handleSubmit(event) { \r\n        //navigator.geolocation.getCurrentPosition(function(position) {\r\n        if(this.state.location[0]===-8.0671132 && this.state.location[1]===-34.8766719){\r\n          alert(\"Localização do celular está desativada, ative, recarregue a página e tente novamente com a localização ativa, se mesmo assim não conseguir insira o endereço completo e clique enviar endereço\");\r\n          event.preventDefault();\r\n          return;\r\n        }\r\n        this.setState({isLoading: true});\r\n            (async function main(self) {\r\n                await doc.useServiceAccountAuth({\r\n                    client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n                    private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n                });\r\n        \r\n                await doc.loadInfo(); // Loads document properties and worksheets\r\n                \r\n                let regiao;\r\n                if(envVariables.dentroLimites(self.state.location)){\r\n                  regiao=0;\r\n                }\r\n                else{\r\n                  alert(\"Região não suportada\");\r\n                  return;\r\n                }\r\n                const sheet = doc.sheetsByIndex[regiao];\r\n                // const rows = await sheet.getRows();\r\n                // Total row count\r\n\r\n                // const row = { \r\n                //   Roaster: self.state.alimento, \r\n                //   URL:self.state.numero, \r\n                //   City: \"\", \r\n                //   Coordinates:JSON.stringify([self.props.location[0], self.props.location[1]]), \r\n                //   DateISO: new Date().toISOString(), \r\n                //   Telefone: self.props.telefone, \r\n                //   DiaSemana:self.props.diaSemana,\r\n                //   Horario:self.props.horario,\r\n                //   AlimentoEntregue:0,\r\n                // };\r\n\r\n                let dadosRow = {};\r\n                dadosRow.alimento = self.state.alimento;\r\n                dadosRow.numero = self.state.numero;\r\n                dadosRow.endereco = \"\";\r\n                dadosRow.coords = self.state.location;\r\n                dadosRow.telefone = self.state.telefone;\r\n                dadosRow.diaSemana = self.state.diaSemana;\r\n                dadosRow.horario = self.state.horario;\r\n                dadosRow.mes = self.state.mes;\r\n                dadosRow.redesocial = self.state.redesocial;\r\n\r\n              const row = envVariables.criarRow(dadosRow);\r\n\r\n                \r\n            // {\r\n            //   Dados: JSON.stringify(\r\n            //     { \r\n            //       \"Roaster\": self.state.alimento, \r\n            //       \"URL\":self.state.numero, \r\n            //       \"City\": \"\", \r\n            //       \"Coordinates\":JSON.stringify([self.props.location[0], self.props.location[1]]), \r\n            //       \"DateISO\": new Date().toISOString(), \r\n            //       \"Telefone\": self.props.telefone, \r\n            //       \"DiaSemana\":self.props.diaSemana,\r\n            //       \"Horario\":self.props.horario,\r\n            //       \"AlimentoEntregue\":0,\r\n            //       \"RedeSocial\":self.state.redesocial.replace('@',''),\r\n            //       \"Avaliacao\": {\r\n            //         \"1\":0,\r\n            //         \"2\":0,\r\n            //         \"3\":0,\r\n            //         \"4\":0,\r\n            //         \"5\":0\r\n            //       },\r\n            //     }\r\n\r\n            //   )\r\n            // };\r\n                \r\n                const result = await sheet.addRow(row);\r\n                //console.log(result);\r\n                window.location.reload();\r\n            })(this);\r\n        //});\r\n      event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n          this.state.isLoading ?\r\n          <div><CircularProgress /></div>\r\n          : \r\n            <button className=\"SubmitButton buttonsSidebySide\" onClick={this.handleSubmit}>\r\n              marcar Localização Atual\r\n            </button>\r\n        \r\n      );\r\n    }\r\n  }\r\nexport default NameForm; ","import React, { Component } from 'react';\r\n\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass Sugestoes extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '',\r\n        isLoading:false\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n  \r\n    handleChange(event) {\r\n      if(event.target.value.length > 1000) return;\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      //alert('Um endereço foi enviado: ' + this.state.value);\r\n      if(this.state.value === '') {event.preventDefault();return;}\r\n      \r\n      this.setState({isLoading: true});\r\n      \r\n      (async function main(self) {\r\n        try{\r\n          await doc.useServiceAccountAuth({\r\n              client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n              private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n          });\r\n\r\n          await doc.loadInfo(); // Loads document properties and worksheets\r\n\r\n          const sheet = doc.sheetsByIndex[2];\r\n          //row = { Name: \"new name\", Value: \"new value\" };\r\n          \r\n          const row = { Sugestao: self.state.value, DateISO: new Date().toISOString()};\r\n          \r\n          await sheet.addRow(row);\r\n        \r\n          self.setState({isLoading: false});\r\n          alert(\"sugestão enviada com sucesso\");\r\n        }catch(e){\r\n          alert(\"Erro, tente novamente\");\r\n        }\r\n        \r\n      })(this);\r\n      event.preventDefault();\r\n    }\r\n\r\n    \r\n  \r\n    render() {\r\n      return (\r\n        this.state.isLoading ?\r\n        <div><CircularProgress /></div>\r\n        :\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <textarea className=\"TextField\" type=\"text\" placeholder='Insira sua sugestão, depoimento e contato em caso de dúvida' value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input className=\"SubmitButton\" type=\"submit\" value=\"Enviar sugestão\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\nexport default Sugestoes; ","import React from 'react';\n\nconst CreatorsMapaFome2 = () => {\n  return (\n    <div>\n      <h1>Criadores de Conteúdo do Mapa Fome</h1>\n      <iframe\n        src=\"http://creators.mapafome.com.br/\"\n        title=\"Creators Mapa Fome\"\n        style={{ width: '100%', height: '500px' }}\n        frameBorder=\"0\"\n        scrolling=\"no\"\n      />\n    </div>\n  );\n};\n\nconst CreatorsMapaFome = () => {\n  return (\n    <div>\n    <a target='_blank' rel=\"noreferrer\" href=\"https://mapafome.com.br/influencers\">Criadores de Conteúdo do Mapa Fome</a>\n    </div>\n  );\n};\n\nexport default CreatorsMapaFome;\n","export default __webpack_public_path__ + \"static/media/qr.20154bbf.svg\";","\r\nimport React, { Component } from 'react';\r\n\r\nimport TimeAgo from 'javascript-time-ago';\r\n\r\nimport pt from 'javascript-time-ago/locale/pt.json';\r\nTimeAgo.addDefaultLocale(pt);\r\n\r\nconst timeAgo = new TimeAgo();\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass CleanOld extends Component {\r\n\r\n    componentDidMount() {\r\n        \r\n        (async function main() {\r\n            // Use service account creds\r\n            await doc.useServiceAccountAuth({\r\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n            });\r\n    \r\n            await doc.loadInfo(); // Loads document properties and worksheets\r\n    \r\n            const sheet = doc.sheetsByIndex[0];\r\n            const rows = await sheet.getRows();\r\n            rows.forEach((x) => { \r\n                let dateMarked;\r\n                if(x.DateISO) dateMarked = timeAgo.format(Date.now() - (Date.now() - new Date(x.DateISO).getTime()) );\r\n                \r\n                //filtrar datas antigas\r\n                if(\r\n                    dateMarked.includes(\"semana\") \r\n                    || dateMarked.includes(\"mes\") \r\n                //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\r\n                ) { x.delete(); } });\r\n\r\n        })();\r\n    }\r\n    render(){\r\n        return <div></div>;\r\n    }\r\n}\r\n\r\nexport default CleanOld;","export default __webpack_public_path__ + \"static/media/insta.20ffff3e.svg\";","import React, { Component } from 'react';\nimport './App.css';\nimport { OpenStreetMapProvider } from 'leaflet-geosearch';\nimport Header from './components/header';\n\nimport InserirEndereco from './components/googlesheets/endereco';\nimport MyLocationButton from './components/googlesheets/mylocation';\nimport Sugestao from './components/googlesheets/sugestao';\n\nimport CoffeeMap from './components/map.js';\n// import CoffeeTable from './components/table';\nimport ReactGA from 'react-ga';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Checkbox } from '@mui/material';\n\n//call to action content creators\nimport CreatorsMapaFome from './components/CreatorsMapaFome.js'\n\nimport envVariables from './components/variaveisAmbiente';\n\nimport qr from './images/qr.svg';\n\n// Material-UI\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nimport CleanOld from './components/googlesheets/cleanold';\n\n\nimport coffeeBean from './images/bean.svg';\nimport hub from './images/hub.svg';\nimport green from './images/green.svg';\nimport red from './images/red.svg';\nimport insta from './images/insta.svg';\n\nimport AesEncryption from \"aes-encryption\";\n\nimport Cookies from 'universal-cookie';\n \nconst cookies = new Cookies();\nconst EXPIRE_DAY = 7;\n\nconst aes = new AesEncryption();\n\n// Google Analytics\nfunction initializeReactGA() {\n  ReactGA.initialize('UA-172868315-1');\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\ninitializeReactGA();\n\naes.setSecretKey(process.env.REACT_APP_CRYPTSEED+\"F\");\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\n\n// Google Sheets Document ID -- PROD\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\n\n// Google Sheets Document ID -- DEV\n// const doc = new GoogleSpreadsheet('1jQI6PstbEArW_3xDnGgPJR6_37r_KjLoa765bOgMBhk');\n\n// Provider for leaflet-geosearch plugin\nconst provider = new OpenStreetMapProvider();\n//limit osm https://operations.osmfoundation.org/policies/nominatim/\n\n\n\n\nclass App extends Component {\n\n  // Initial state\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      dataMaps: [],\n      dataHeader: [{ label: \"Índice\" }, { label: \"Lugar\" }],\n      rowCount: '',\n      center:[-8.0671132,-34.8766719],\n      alimento:'Alimento pronto',\n      telefone:'',\n      telefoneEncryptado:'',\n      diaSemana:'',\n      horario:'',\n      mes:'',\n      filtro:\"Todos\",\n      lastMarkedCoords:[],\n      numero:'',\n      telefoneFilterLocal:false,\n      site:'',\n      redesocial:'',\n\n    }\n\n    this.dropDownMenuSemanaEntregaAlimentoPronto = React.createRef();\n    this.dropDownMenuHorarioEntregaAlimentoPronto = React.createRef();\n    this.dropDownMenuSemanaPrecisandoBuscar = React.createRef();\n    this.dropDownMenuHorarioPrecisandoBuscar = React.createRef();\n    this.dropDownMenuFiltro = React.createRef();\n    this.redesocialRef = React.createRef();\n    this.dropDownMenuRedeSocial = React.createRef();\n    this.dropDownMenuMesPrecisandoBuscar = React.createRef();\n    this.dropDownMenuMesEntregaAlimentoPronto = React.createRef();\n  \n    \n    this.handleChangeNumero = this.handleChangeNumero.bind(this);\n\n    this.setTipoAlimento = this.setTipoAlimento.bind(this);\n    this.handleChangeTelefone = this.handleChangeTelefone.bind(this);\n    this.setDiaSemana = this.setDiaSemana.bind(this);\n    this.setHorario = this.setHorario.bind(this);\n    this.setMes = this.setMes.bind(this);\n    this.setFiltro = this.setFiltro.bind(this);\n    this.removerPonto = this.removerPonto.bind(this);\n    this.handleClickMap = this.handleClickMap.bind(this);\n    this.telefoneFilterChange = this.telefoneFilterChange.bind(this);\n    this.handleChangeRedeSocial = this.handleChangeRedeSocial.bind(this);\n  }\n\n  telefoneFilterChange(event){\n    envVariables.telefoneFilter = !envVariables.telefoneFilter;\n    this.setState({\n      telefoneFilterLocal: envVariables.telefoneFilter\n    });\n  }\n\n  removerPonto(coords, categoriaPonto){\n    console.log(\"remover \"+coords);\n    let motivo = prompt(\"por qual motivo (em resumo) gostaria de deletar esse ponto?\");\n    if(motivo !== null){\n      (async function main(self) {\n        try{\n          await doc.useServiceAccountAuth({\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n            });\n\n            await doc.loadInfo(); // Loads document properties and worksheets\n\n            const sheet = doc.sheetsByIndex[4];\n            //row = { Name: \"new name\", Value: \"new value\" };\n            \n            const row = { Motivo: motivo, Ponto: JSON.stringify(coords), DateISO: new Date().toISOString(), CategoriaPonto:categoriaPonto};\n            \n            let r = await sheet.addRow(row);\n            console.log(r);\n          \n            alert(\"pedido de deletar enviado com sucesso\");\n        }catch(e){\n          alert(\"ERRO, tente novamente\");\n          //console.log(e);\n\n        }\n        \n      })(motivo, coords);\n    }\n  }\n\n  verificarPonto(coords, categoriaPonto){\n    let motivo = prompt(\"Insira o CNPJ da entidade, nome da entidade, nome do responsável, email, telefone e se é credenciada para receber recurso do governo\");\n    if(motivo !== null){\n      (async function main(self) {\n        try{\n          await doc.useServiceAccountAuth({\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n            });\n\n            await doc.loadInfo(); // Loads document properties and worksheets\n\n            const sheet = doc.sheetsByIndex[3];\n            //row = { Name: \"new name\", Value: \"new value\" };\n            \n            const row = { Motivo: motivo, Ponto: JSON.stringify(coords), DateISO: new Date().toISOString(), CategoriaPonto:categoriaPonto};\n            \n            let r = await sheet.addRow(row);\n            console.log(r);\n          \n            alert(\"pedido de cnpj enviado com sucesso\");\n        }catch(e){\n          alert(\"ERRO, tente novamente\");\n          console.log(e);\n\n        }\n        \n      })(motivo, coords);\n    }\n  }\n\n  contabilizarClicado(coords){\n    (async function main(self) {\n      try{\n        await doc.useServiceAccountAuth({\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n\n          await doc.loadInfo(); // Loads document properties and worksheets\n\n          const sheet = doc.sheetsByIndex[0];\n          //row = { Name: \"new name\", Value: \"new value\" };\n          if(envVariables.rows===undefined) envVariables.rows = await sheet.getRows();\n          const rows = envVariables.rows;\n          coords = JSON.stringify(coords);\n          let rowEncontrada = rows.filter((x) => { \n            //x.Coordinates\n            //console.log(JSON.parse(x.Dados).Coordinates);\n            return JSON.parse(x.Dados).Coordinates === coords; });\n          \n          //console.log(rowEncontrada[0].City);\n          let dadosNovos = JSON.parse(rowEncontrada[0].Dados);\n          if(dadosNovos.clicado) dadosNovos.clicado++;\n          else dadosNovos.clicado=1;\n          rowEncontrada[0].Dados = JSON.stringify(dadosNovos);\n          await rowEncontrada[0].save();\n          \n          //window.location.reload();\n      }catch(e){\n        //console.log(e);\n\n      }\n      \n    })(coords);\n  }\n  \n  clicouTelefone(coords){\n    (async function main(self) {\n      try{\n        await doc.useServiceAccountAuth({\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n\n          await doc.loadInfo(); // Loads document properties and worksheets\n\n          const sheet = doc.sheetsByIndex[0];\n          //row = { Name: \"new name\", Value: \"new value\" };\n          if(envVariables.rows===undefined) envVariables.rows = await sheet.getRows();\n          const rows = envVariables.rows;\n          coords = JSON.stringify(coords);\n          let rowEncontrada = rows.filter((x) => { \n            //x.Coordinates\n            //console.log(JSON.parse(x.Dados).Coordinates);\n            return JSON.parse(x.Dados).Coordinates === coords; });\n          \n          //console.log(rowEncontrada[0].City);\n          let dadosNovos = JSON.parse(rowEncontrada[0].Dados);\n          if(dadosNovos.clickTel) dadosNovos.clickTel++;\n          else dadosNovos.clickTel=1;\n          rowEncontrada[0].Dados = JSON.stringify(dadosNovos);\n          await rowEncontrada[0].save();\n          \n          //window.location.reload();\n      }catch(e){\n        //console.log(e);\n\n      }\n      \n    })(coords);\n  }\n  entregarAlimento(coords){\n    (async function main(self) {\n      try{\n        await doc.useServiceAccountAuth({\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n\n          await doc.loadInfo(); // Loads document properties and worksheets\n\n          const sheet = doc.sheetsByIndex[0];\n          //row = { Name: \"new name\", Value: \"new value\" };\n          if(envVariables.rows===undefined) envVariables.rows = await sheet.getRows();\n          const rows = envVariables.rows;\n          coords = JSON.stringify(coords);\n          let rowEncontrada = rows.filter((x) => { \n            //x.Coordinates\n            //console.log(JSON.parse(x.Dados).Coordinates);\n            return JSON.parse(x.Dados).Coordinates === coords; });\n          \n          //console.log(rowEncontrada[0].City);\n          let dadosNovos = JSON.parse(rowEncontrada[0].Dados);\n          dadosNovos.AlimentoEntregue++;\n          rowEncontrada[0].Dados = JSON.stringify(dadosNovos);\n          await rowEncontrada[0].save();\n          \n          window.location.reload();\n      }catch(e){\n        //console.log(e);\n\n      }\n      \n    })(coords);\n  }\n\n  avaliar(coords, avaliacao){\n    \n    (async function main(coords, avaliacao) {\n      try{\n        await doc.useServiceAccountAuth({\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n\n          await doc.loadInfo(); // Loads document properties and worksheets\n\n          const sheet = doc.sheetsByIndex[0];\n          //row = { Name: \"new name\", Value: \"new value\" };\n          \n          if(envVariables.rows===undefined) envVariables.rows = await sheet.getRows();\n          const rows = envVariables.rows;\n          coords = JSON.stringify(coords);\n          let rowEncontrada = rows.filter((x) => { \n            //x.Coordinates\n            console.log(JSON.parse(x.Dados).Coordinates);\n            return JSON.parse(x.Dados).Coordinates===(coords); });\n          \n          //console.log(rowEncontrada[0].City);\n          let dadosNovos = JSON.parse(rowEncontrada[0].Dados);\n          if(dadosNovos.Avaliacao == undefined){\n            dadosNovos.Avaliacao = {\n              \"1\":0,\n              \"2\":0,\n              \"3\":0,\n              \"4\":0,\n              \"5\":0\n            }\n          }\n          if(avaliacao===null)avaliacao=5;\n          dadosNovos.Avaliacao[avaliacao]++;\n          rowEncontrada[0].Dados = JSON.stringify(dadosNovos);\n          \n          let cookieName='pontosAvaliados';\n          let pontos = cookies.get(cookieName) || \"\";\n          coords = JSON.parse(coords);\n          let coordsString = coords[0]+\"\"+coords[1];\n          //let pontosEntregues = JSON.parse(pontosEntreguesData);\n          if(pontos.includes(coordsString)) return;\n\n          await rowEncontrada[0].save();\n          \n          pontos+=coordsString;\n\n          const cookieExpireDate = new Date();\n          cookieExpireDate.setDate(cookieExpireDate.getDate() + EXPIRE_DAY);\n\n          cookies.set(cookieName, pontos, { path: '/', expires: cookieExpireDate });\n          \n          window.location.reload();\n      }catch(e){\n        console.log(e);\n\n      }\n      \n    })(coords, avaliacao);\n  }\n\n  setFiltro(event){\n    this.setState({\n      filtro: event.target.value\n    });\n  }\n  setTipoAlimento(event){\n    this.setState({\n      alimento: event.target.value\n    });\n    \n    let isPrecisandoBuscar = event.target.value === 'PrecisandoBuscar',\n    isEntregaAlimentoPronto = event.target.value === 'EntregaAlimentoPronto',\n    isDoador = event.target.value === 'Doador';\n\n    this.dropDownMenuSemanaPrecisandoBuscar.current.style.display=\"none\";\n    this.dropDownMenuHorarioPrecisandoBuscar.current.style.display=\"none\";\n    this.dropDownMenuMesPrecisandoBuscar.current.style.display=\"none\";\n    this.dropDownMenuSemanaEntregaAlimentoPronto.current.style.display=\"none\";\n    this.dropDownMenuHorarioEntregaAlimentoPronto.current.style.display=\"none\";\n    this.dropDownMenuMesEntregaAlimentoPronto.current.style.display=\"none\";\n\n    if( isPrecisandoBuscar ){\n      this.dropDownMenuSemanaPrecisandoBuscar.current.style.display=\"\";\n      this.dropDownMenuHorarioPrecisandoBuscar.current.style.display=\"\";\n      this.dropDownMenuMesPrecisandoBuscar.current.style.display=\"\";\n      this.setState({\n        diaSemana: this.dropDownMenuSemanaPrecisandoBuscar.current.value,\n        horario: this.dropDownMenuHorarioPrecisandoBuscar.current.value,\n        mes: this.dropDownMenuMesPrecisandoBuscar.current.value\n      });\n\n    }else    \n    if( isEntregaAlimentoPronto ){\n      this.dropDownMenuSemanaEntregaAlimentoPronto.current.style.display=\"\";\n      this.dropDownMenuHorarioEntregaAlimentoPronto.current.style.display=\"\";\n      this.dropDownMenuMesEntregaAlimentoPronto.current.style.display=\"\";\n      \n      this.setState({\n        diaSemana: this.dropDownMenuSemanaEntregaAlimentoPronto.current.value,\n        horario: this.dropDownMenuHorarioEntregaAlimentoPronto.current.value,\n        mes: this.dropDownMenuMesEntregaAlimentoPronto.current.value\n      });\n\n    }\n    else {\n      this.setState({\n        diaSemana: '',\n        horario: '',\n        mes: ''\n      });\n\n    }\n\n    if(isPrecisandoBuscar || isEntregaAlimentoPronto || isDoador){\n      this.redesocialRef.current.style.display=\"\";\n      this.dropDownMenuRedeSocial.current.style.display=\"\";\n    }else{\n      this.redesocialRef.current.style.display=\"none\";\n      this.dropDownMenuRedeSocial.current.style.display=\"none\";\n    }\n\n  }\n\n  setDiaSemana(event){\n    this.setState({\n      diaSemana: event.target.selectedOptions[0].value\n    });\n    // console.log(this.dropDownMenuSemana.current.value);\n    // console.log(event.target.selectedOptions[0].value);\n    // console.log(this.state.diaSemana);\n  }\n\n  \n  setHorario(event){\n    this.setState({\n      horario: event.target.selectedOptions[0].value\n    });\n    // console.log(this.dropDownMenuSemana.current.value);\n    // console.log(event.target.selectedOptions[0].value);\n    // console.log(this.state.diaSemana);\n  }\n\n  setMes(event){\n    this.setState({\n      mes: event.target.selectedOptions[0].value\n    });\n    // console.log(this.dropDownMenuSemana.current.value);\n    // console.log(event.target.selectedOptions[0].value);\n    // console.log(this.state.diaSemana);\n  }\n\n  handleChangeTelefone(event) {\n    if(event.target.value.length>15) return;\n    let telefoneValue = event.target.value.replace(/[^0-9]/g,'');\n    if(telefoneValue.length >= 8){\n      this.setState({telefoneEncryptado: aes.encrypt(telefoneValue)});\n    }\n    this.setState({telefone: telefoneValue});\n  }\n\n  handleChangeRedeSocial(event){\n    let site = event.target.value;\n    if(site.length>30) return;\n    this.setState({site: site, redesocial:this.dropDownMenuRedeSocial.current.value+site});\n\n  }\n  \n    \n  handleChangeNumero(event) {\n    if(event.target.value.length > 10) return;\n    let numero = event.target.value.replace(/[^0-9]/g,'');\n    this.setState({numero: numero});\n  }\n\n  handleClickMap(){\n    // this.setState({lastMarkedCoords: coords});\n    if(envVariables.lastMarked === undefined) return;\n    this.setState({isLoading: true});\n    (async function main(self) {\n      await doc.useServiceAccountAuth({\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n      });\n\n      await doc.loadInfo(); // Loads document properties and worksheets\n      let {lat, lng} = envVariables.lastMarked.getLatLng();\n      envVariables.lastMarked.latlng = [lat,lng];\n      let regiao;\n      if(envVariables.dentroLimites(envVariables.lastMarked.latlng)){\n        regiao=0;\n      }\n      else{\n        alert(\"Região não suportada\");\n        return;\n      }\n      const sheet = doc.sheetsByIndex[regiao];\n      // const rows = await sheet.getRows();\n      // Total row count\n\n      // if(this.state.numero !== ''){\n      //   this.state.numero = \", nº\"+this.state.numero;\n      // }\n      \n      // const row = { \n      //   Roaster: self.state.alimento, \n      //   URL:self.state.numero, \n      //   City: \"\", \n      //   Coordinates:JSON.stringify([self.props.location[0], self.props.location[1]]), \n      //   DateISO: new Date().toISOString(), \n      //   Telefone: self.props.telefone, \n      //   DiaSemana:self.props.diaSemana,\n      //   Horario:self.props.horario,\n      //   AlimentoEntregue:0,\n      // };\n\n      let dadosRow = {};\n      dadosRow.alimento = self.state.alimento;\n      dadosRow.numero = \"\";\n      dadosRow.endereco = \"\";\n      dadosRow.coords = envVariables.lastMarked.latlng;\n      dadosRow.telefone = self.state.telefoneEncryptado;\n      dadosRow.diaSemana = self.state.diaSemana;\n      dadosRow.horario = self.state.horario;\n      dadosRow.mes = self.state.mes;\n      dadosRow.redesocial = self.state.redesocial;\n\n      let row = envVariables.criarRow(dadosRow);\n      // if(self.state.numero !== ''){\n      //   self.state.numero = \", nº\"+self.state.numero;\n      // }\n      // let dadosJSON = {\n      //   \"Roaster\": self.state.alimento, \n      //   \"Coordinates\":JSON.stringify(envVariables.lastMarked.latlng), \n      //   \"DateISO\": new Date().toISOString(), \n      //   \"Telefone\": self.state.telefoneEncryptado, \n      //   \"AlimentoEntregue\":0,\n      //   \"URL\":self.state.numero\n      // };\n\n      // if(self.state.alimento==='EntregaAlimentoPronto' || self.state.alimento==='PrecisandoBuscar')\n      // {\n      //   dadosJSON.DiaSemana=self.state.diaSemana;\n      //   dadosJSON.Horario=self.state.horario;\n        \n      // }\n      // row = { Dados: JSON.stringify(dadosJSON) };\n      \n      const result = await sheet.addRow(row);\n      // console.log(result);\n      window.location.reload();\n  })(this);\n  }\n\n  componentDidMount() {\n\n    // Google Sheets API\n    // Based on https://github.com/theoephraim/node-google-spreadsheet\n\n    var self = this;\n\n    //current location    \n    navigator.geolocation.getCurrentPosition(function(position) {\n      envVariables.currentLocation = [position.coords.latitude, position.coords.longitude];\n      self.setState({center: [position.coords.latitude, position.coords.longitude]}) \n    });\n\n    (async function main(self) {\n      // Use service account creds\n      await doc.useServiceAccountAuth({\n        client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n        private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n      });\n\n      await doc.loadInfo(); // Loads document properties and worksheets\n      \n      /*https://www.keene.edu/campus/maps/tool/\n        long, lat\n        x, y\n        -52.2070313, 2.20\n        -52.4267578, -13.9234039\n        -34.3212891, -14.0939572\n        -34.3212891, 1.6696855\n0: -8.0256189\n1: -34.9175702\n        -55.4589844, -32.6578757\n        -55.5468750, -14.1791861\n        -38.1445313, -14.1791861\n        -38.0566406, -32.8426736\n      */\n     //limitar regiao\n      let regiao;\n      if(envVariables.dentroLimites(self.state.center)){\n        regiao=0;\n      }     \n      else{\n        alert(\"Região ainda não suportada\");\n        return;\n      }\n      const sheet = doc.sheetsByIndex[regiao];\n      if(envVariables.rows===undefined) envVariables.rows = await sheet.getRows();\n      const rows = envVariables.rows;\n      // Total row count\n      self.setState({ rowCount: rows.length });\n      \n      // rows.filter( (x) => { return !x.Data}).map( (x) => {\n      //   x.Dados = JSON.stringify(\n      //     { \n      //       \"Roaster\": x.Roaster, \n      //       \"URL\": x.URL, \n      //       \"City\": x.City, \n      //       \"Coordinates\": x.Coordinates, \n      //       \"DateISO\": x.DateISO, \n      //       \"Telefone\": x.Telefone, \n      //       \"DiaSemana\": x.DiaSemana,\n      //       \"Horario\": x.Horario,\n      //       \"AlimentoEntregue\": x.AlimentoEntregue\n      //     }\n      //   );\n      //   (async function main(x){\n          \n      //   await x.save();\n      //   })(x);\n\n      // })\n      rows.forEach((x) => {\n        let dados = JSON.parse(x.Dados);\n        for(let key in dados){\n          x[key] = dados[key];\n        }\n        // x.Roaster = dados.Roaster;\n        // x.URL = dados.URL;\n        // x.City = dados.City;\n        // x.DateISO = dados.DateISO;\n        // x.DiaSemana = dados.DiaSemana;\n        // x.Horario = dados.Horario;\n        // x.Mes = dados.Mes;\n        // x.AlimentoEntregue = dados.AlimentoEntregue;\n        // x.RedeSocial = dados.RedeSocial;\n        // x.Avaliacao = dados.Avaliacao;\n        \n        if (dados.Coordinates) { x.mapCoords = JSON.parse(x.Coordinates); \n          if(dados.Telefone) {\n            try{\n              x.Telefone = aes.decrypt(x.Telefone);\n            }catch(e){\n              //problema ao decriptar, string nao esta no formato hex\n            }\n          } \n        }\n       \n      });\n      self.setState({ dataMaps: rows });\n\n      // var needsUpdates = rows.filter((x) => { x = JSON.parse(x); return !x.Coordinates; });\n      // if(needsUpdates.length === 0) console.log(\"nao precisa atualizar\");\n      // if (needsUpdates && needsUpdates.length > 0) {\n      //     for (let index in needsUpdates) {\n      //       // if(needsUpdates[index]._rawData.length===0) needsUpdates[index].delete(); //se deixar rows vazias na planilha\n      //         let city = needsUpdates[index].City;\n      //         setTimeout(() => \n      //             {\n      //                 (async function main() {\n      //                     try{\n      //                         let providerResult = await provider.search({ query: city.replace('-',\",\") + ', Brazil' });\n                      \n      //                         if(providerResult.length !== 0 ){\n      //                             // throw new Error(\"endereco-nao-encontrado\");\n                      \n      //                             console.log(providerResult);\n      //                             let latlon = [providerResult[0].y, providerResult[0].x];\n      //                             needsUpdates[index].Coordinates = JSON.stringify(latlon); // Convert obj to string\n      //                             //needsUpdates[index].mapCoords = latlon;\n      //                             await needsUpdates[index].save(); // Save to remote Google Sheet\n      //                         }\n      //                     }catch(e){\n      //                         console.log(\"ERRO\");\n      //                         console.log(e);\n      //                     }\n      //                 })();\n                  \n      //             },1300                        \n      //         );\n              \n      //     }\n      //   self.setState({ dataMaps: rows });\n      // }\n\n      // Loading message \n      self.setState({ isLoading: false })\n\n    })(self);\n\n    window.fixarPonto = function (endereco, coords){\n      (async function main(endereco, coords) {\n        try{\n          await doc.useServiceAccountAuth({\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n      \n          await doc.loadInfo(); // Loads document properties and worksheets\n      \n          const sheet = doc.sheetsByIndex[0];\n          \n          if(envVariables.rows===undefined) envVariables.rows = await sheet.getRows();\n          const rows = envVariables.rows;\n\n          let rowEncontrada = rows.filter( (x) => \n          {\n            return JSON.parse(x.Dados).City.includes(endereco);\n          }\n          );\n\n          rowEncontrada.forEach( (x) => \n          {\n            let dadosNovos = JSON.parse(x.Dados);\n            dadosNovos.Coordinates = JSON.stringify(coords);\n            x.Dados = JSON.stringify(dadosNovos);\n          });\n\n          for(let x of rowEncontrada) await x.save();\n\n        }catch(e){\n          \n        }\n        \n      })(endereco, coords);\n    }\n\n    //retornar os pontos proximos a 5km\n    window.distance = function(){\n      const rows = envVariables.rows;\n      let proximos = [];\n      rows.forEach( (x) => {\n        let dado = JSON.parse(x.Dados);\n        if(dado.Coordinates){\n          let coords = JSON.parse(dado.Coordinates);\n          let distancia = envVariables.distanceInKmBetweenEarthCoordinates(\n            envVariables.currentLocation[0], \n            envVariables.currentLocation[1], \n            coords[0], \n            coords[1]);\n            dado.distancia = distancia;\n          if(distancia < 5) proximos.push(dado);\n        }\n      });\n      \n      proximos.sort(function(a,b){\n        return a.distancia - b.distancia;\n      });\n      console.log(proximos);\n\n    }\n    window.stats = function (){\n      (async function main() {\n        try{\n          await doc.useServiceAccountAuth({\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n          });\n      \n          await doc.loadInfo(); // Loads document properties and worksheets\n      \n          const sheet = doc.sheetsByIndex[0];\n          \n          if(envVariables.rows===undefined) envVariables.rows = await sheet.getRows();\n          const rows = envVariables.rows;\n  \n          let rowEncontrada = rows.filter( (x) => \n          {\n            return JSON.parse(x.Dados).clicado;\n          }\n          );\n          var SortedPoints = [];\n          var tmp;\n          rowEncontrada.forEach( (x) => \n          {\n            let dadosNovos = JSON.parse(x.Dados);\n            if(dadosNovos.Telefone) dadosNovos.Telefone = \"https://wa.me/55\"+aes.decrypt(dadosNovos.Telefone);\n            SortedPoints.push(dadosNovos);\n            for (var i = SortedPoints.length - 1; i > 0 && SortedPoints[i].clicado > SortedPoints[i-1].clicado; i--) {\n                tmp = SortedPoints[i];\n                SortedPoints[i] = SortedPoints[i-1];\n                SortedPoints[i-1] = tmp;\n            }\n          });\n          console.log(\"mais clicados\");\n          console.log(SortedPoints);\n\n          \n          rowEncontrada = rows.filter( (x) => \n          {\n            return JSON.parse(x.Dados).clickTel;\n          }\n          );\n          var SortedPoints = [];\n          var tmp;\n          rowEncontrada.forEach( (x) => \n          {\n            let dadosNovos = JSON.parse(x.Dados);\n            dadosNovos.Telefone = \"https://wa.me/55\"+aes.decrypt(dadosNovos.Telefone);\n            SortedPoints.push(dadosNovos);\n            for (var i = SortedPoints.length - 1; i > 0 && SortedPoints[i].clickTel > SortedPoints[i-1].clickTel; i--) {\n                tmp = SortedPoints[i];\n                SortedPoints[i] = SortedPoints[i-1];\n                SortedPoints[i-1] = tmp;\n            }\n          });\n          console.log(\"mais clicados em telefone\");\n          console.log(SortedPoints);\n\n          rowEncontrada = rows.filter( (x) => \n          {\n            return JSON.parse(x.Dados).AlimentoEntregue;\n          }\n          );\n          var SortedPoints = [];\n          var tmp;\n          rowEncontrada.forEach( (x) => \n          {\n            let dadosNovos = JSON.parse(x.Dados);\n            SortedPoints.push(dadosNovos);\n            for (var i = SortedPoints.length - 1; i > 0 && SortedPoints[i].AlimentoEntregue > SortedPoints[i-1].AlimentoEntregue; i--) {\n                tmp = SortedPoints[i];\n                SortedPoints[i] = SortedPoints[i-1];\n                SortedPoints[i-1] = tmp;\n            }\n          });\n          console.log(\"mais entregues\");\n          console.log(SortedPoints);\n\n\n          rowEncontrada = rows.filter( (x) => \n          {\n            return JSON.parse(x.Dados).Avaliacao;\n          }\n          );\n          var SortedPoints = [];\n          var tmp;\n          rowEncontrada.forEach( (x) => \n          {\n            let dadosNovos = JSON.parse(x.Dados);\n\n            let AvaliacaoData = {nota:0, totalClicks:0};\n            if(dadosNovos.Avaliacao){\n                AvaliacaoData.totalClicks = (dadosNovos.Avaliacao[\"5\"]+dadosNovos.Avaliacao[\"4\"]+dadosNovos.Avaliacao[\"3\"]+dadosNovos.Avaliacao[\"2\"]+dadosNovos.Avaliacao[\"1\"]);\n                if( AvaliacaoData.totalClicks === 0 ){\n                  //dadosNovos.Avaliacao=\"Nenhuma\";\n                }else{\n                  dadosNovos.Avaliacao = (dadosNovos.Avaliacao[\"5\"]*5 +\n                    dadosNovos.Avaliacao[\"4\"]*4 +\n                    dadosNovos.Avaliacao[\"3\"]*3 +\n                    dadosNovos.Avaliacao[\"2\"]*2 +\n                    dadosNovos.Avaliacao[\"1\"]*1)\n                    /            \n                    (AvaliacaoData.totalClicks);\n    \n                    AvaliacaoData.nota = Math.round(dadosNovos.Avaliacao * 100)/100;\n                    AvaliacaoData.nota=AvaliacaoData.nota*100000+AvaliacaoData.totalClicks;\n                }\n            }\n    \n            //AvaliacaoData.nota = dadosNovos.Avaliacao;\n\n            if(AvaliacaoData.nota>0) SortedPoints.push({...JSON.parse(x.Dados),\"nota\":AvaliacaoData.nota});\n            for (var i = SortedPoints.length - 1; i > 0 && SortedPoints[i].nota > SortedPoints[i-1].nota; i--) {\n                tmp = SortedPoints[i];\n                SortedPoints[i] = SortedPoints[i-1];\n                SortedPoints[i-1] = tmp;\n            }\n          });\n          console.log(\"maiores notas\");\n          console.log(SortedPoints);          \n\n  \n        }catch(e){\n          \n        }\n        \n      })();\n    }\n\n//     window.planilhacsv = function (){\n//       (async function main() {\n//         try{\n//           await doc.useServiceAccountAuth({\n//             client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n//             private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n//           });\n      \n//           await doc.loadInfo(); // Loads document properties and worksheets\n      \n//           const sheet = doc.sheetsByIndex[0];\n          \n//           if(envVariables.rows===undefined) envVariables.rows = await sheet.getRows();\n//           const rows = envVariables.rows;\n  \n//           let rowEncontrada = rows.filter( (x) => \n//           {\n//             return JSON.parse(x.Dados).Telefone;\n//           }\n//           );\n//           var planilhacsv=\"Situação,Telefone,coords,RedeSocial\\n\";\n//           var tmp;\n//           var result = {};\n//           rowEncontrada.forEach( (x) => \n//           {\n//             let y = JSON.parse(x.Dados);\n//             planilhacsv+=[y.Roaster,aes.decrypt(y.Telefone),y.Coordinates,y.RedeSocial].toString()+\"\\n\";\n//           });\n//           console.log(planilhacsv);\n\n//           /**\n//            * \n//            * {\n//     \"11\": \"São Paulo\",\n//     \"12\": \"São Paulo\",\n//     \"13\": \"São Paulo\",\n//     \"14\": \"São Paulo\",\n//     \"15\": \"São Paulo\",\n//     \"16\": \"São Paulo\",\n//     \"17\": \"São Paulo\",\n//     \"18\": \"São Paulo\",\n//     \"19\": \"São Paulo\",\n//     \"21\": \"Rio de Janeiro\",\n//     \"22\": \"Rio de Janeiro\",\n//     \"24\": \"Rio de Janeiro\",\n//     \"27\": \"Espírito Santo\",\n//     \"28\": \"Espírito Santo\",\n//     \"31\": \"Minas Gerais\",\n//     \"32\": \"Minas Gerais\",\n//     \"33\": \"Minas Gerais\",\n//     \"34\": \"Minas Gerais\",\n//     \"35\": \"Minas Gerais\",\n//     \"37\": \"Minas Gerais\",\n//     \"38\": \"Minas Gerais\",\n//     \"41\": \"Paraná\",\n//     \"42\": \"Paraná\",\n//     \"43\": \"Paraná\",\n//     \"44\": \"Paraná\",\n//     \"45\": \"Paraná\",\n//     \"46\": \"Paraná\",\n//     \"47\": \"Santa Catarina\",\n//     \"48\": \"Santa Catarina\",\n//     \"49\": \"Santa Catarina\",\n//     \"51\": \"Rio Grande do Sul\",\n//     \"53\": \"Rio Grande do Sul\",\n//     \"54\": \"Rio Grande do Sul\",\n//     \"55\": \"Rio Grande do Sul\",\n//     \"61\": \"Distrito Federal\",\n//     \"62\": \"Goiás\",\n//     \"63\": \"Tocantins\",\n//     \"64\": \"Goiás\",\n//     \"65\": \"Mato Grosso\",\n//     \"66\": \"Mato Grosso\",\n//     \"67\": \"Mato Grosso do Sul\",\n//     \"68\": \"Acre\",\n//     \"69\": \"Rondônia\",\n//     \"71\": \"Bahia\",\n//     \"73\": \"Bahia\",\n//     \"74\": \"Bahia\",\n//     \"75\": \"Bahia\",\n//     \"77\": \"Bahia\",\n//     \"79\": \"Sergipe\",\n//     \"81\": \"Pernambuco\",\n//     \"82\": \"Alagoas\",\n//     \"83\": \"Paraíba\",\n//     \"84\": \"Rio Grande do Norte\",\n//     \"85\": \"Ceará\",\n//     \"86\": \"Piauí\",\n//     \"87\": \"Pernambuco\",\n//     \"88\": \"Ceará\",\n//     \"89\": \"Piauí\",\n//     \"91\": \"Pará\",\n//     \"92\": \"Amazonas\",\n//     \"93\": \"Pará\",\n//     \"94\": \"Pará\",\n//     \"95\": \"Roraima\",\n//     \"96\": \"Amapá\",\n//     \"97\": \"Amazonas\",\n//     \"98\": \"Maranhão\",\n//     \"99\": \"Maranhão\"\n// }\n//            */\n\n  \n//         }catch(e){\n          \n//         }\n        \n//       })();\n//     }\n  }\n\n  \n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header rowCountProp={this.state.rowCount} />\n        {/* <InserirEndereco/>\n        <MyLocationButton location={this.state.center}/> */}\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={8}>\n            <Paper id=\"CoffeeMap\" className=\"fadeIn\">\n              {this.state.isLoading\n                ? <div className=\"flexLoading\"><div className=\"loading\">Carregando...</div></div>\n                : <CoffeeMap \n                dataMapsProp={this.state.dataMaps} \n                location={this.state.center} \n                tileMapOption={this.state.tileMapOption} \n                removerPonto={this.removerPonto} \n                verificarPonto={this.verificarPonto} \n                entregarAlimento={this.entregarAlimento}\n                avaliar={this.avaliar}\n                filtro={this.state.filtro}\n                contabilizarClicado={this.contabilizarClicado}\n                clicouTelefone={this.clicouTelefone}\n                />\n              }\n            </Paper>\n          </Grid>\n          \n          <Grid item xs={12} sm={4}>\n          {/* https://smartdevpreneur.com/setting-material-ui-grid-item-height/ */}\n            <Paper id=\"CoffeeTable\" style={{height:'100%'}} className=\"toolPanel2\">\n              {this.state.isLoading\n                ? <div className=\"flexLoading\"><div className=\"loading\"><CircularProgress /></div></div>\n                // : <CoffeeTable dataMapsProp={this.state.dataMaps} dataHeaderProp={this.state.dataHeader} />\n              : \n              \n    <div className='relativePosition'>\n      {/* <a target='_blank' rel=\"noreferrer\" href=\"https://api.whatsapp.com/send/?phone=5583996157234&text=quero+me+voluntariar+no+mapa+fome&app_absent=0\">quero me voluntariar no Mapa Fome</a>\n      <br/> */}\n      filtro atual:  \n              <select ref= {this.dropDownMenuFiltro} id=\"filtro\" onChange={this.setFiltro}>\n                <option value=\"Todos\">Todos</option>\n                <option value=\"Doadores\">Doadores</option>\n                <option value=\"CestaBasica\">Cesta básica</option>\n                <option value=\"MoradorRua\">Situação de rua</option>\n                <option value=\"Refeição Pronta\">Refeição Pronta</option>\n                <option value=\"RedeSocial\">Rede Social</option>\n                <option value=\"Verificados\">possui CNPJ</option>\n                <option value=\"Nenhum\">Nenhum</option>\n              </select>\n              <Checkbox\n                checked={this.state.telefoneFilterLocal}\n                onChange={this.telefoneFilterChange}\n                inputProps={{ 'aria-label': 'controlled' }}\n              /> Telefone\n                {/* RADIO BUTTON */}\n        <div className='relativePosition'>\n          <ul>\n            \n          <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Teste\"\n                  checked={this.state.alimento === \"Teste\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span> Opção para testar a ferramenta </span>\n              </label>\n            </li>\n          <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Alimento pronto\"\n                  checked={this.state.alimento === \"Alimento pronto\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='yellowHub'> Pessoa precisando de Alimento pronto <img width=\"30px\" height=\"30px\" src={coffeeBean}></img></span>\n              </label>\n            </li>\n\n            <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Alimento de cesta básica\"\n                  checked={this.state.alimento === \"Alimento de cesta básica\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='yellowHub'> Preciso de Alimento de cesta básica <img width=\"30px\" height=\"30px\" src={coffeeBean}></img></span>\n              </label>\n            </li>\n                        \n            <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"Doador\"\n                  checked={this.state.alimento === \"Doador\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='blueHub'> Recebo para doar <img width=\"30px\" height=\"30px\" src={hub}></img></span>\n              </label>\n            </li>\n\n            <li>\n            <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"EntregaAlimentoPronto\"\n                  checked={this.state.alimento === \"EntregaAlimentoPronto\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='redHub'> Entrego refeições em ponto fixo <img width=\"30px\" height=\"30px\" src={red}></img></span>\n              \n                <br></br>\n                <select ref= {this.dropDownMenuSemanaEntregaAlimentoPronto} style={{\"display\":\"none\"}} id=\"dia\" onChange={this.setDiaSemana}>\n                <option value=\"nas Segundas\">nas Segundas</option>\n                <option value=\"nas Terças\">nas Terças</option>\n                <option value=\"nas Quartas\">nas Quartas</option>\n                <option value=\"nas Quintas\">nas Quintas</option>\n                <option value=\"nas Sextas\">nas Sextas</option>\n                <option value=\"nos Sábados\">nos Sábados</option>\n                <option value=\"nos Domingos\">nos Domingos</option>\n                <option value=\"todo dia\">todo dia</option>\n              </select>\n              <select ref= {this.dropDownMenuHorarioEntregaAlimentoPronto} style={{\"display\":\"none\"}} id=\"horario\" onChange={this.setHorario}>\n                <option value=\"manhã 05:30\">manhã 05:30</option>\n                <option value=\"manhã 06:30\">manhã 06:30</option>\n                <option value=\"manhã 09:30\">manhã 09:30</option>\n                <option value=\"tarde 13:30\">tarde 13:30</option>\n                <option value=\"tarde 16:30\">tarde 16:30</option>\n                <option value=\"noite 18:30\">noite 18:30</option>\n                <option value=\"noite 19:30\">noite 19:30</option>\n              </select>\n\n              \n              <select ref= {this.dropDownMenuMesEntregaAlimentoPronto} style={{\"display\":\"none\"}} id=\"mes2\" onChange={this.setMes}>\n                <option value=\"x4 por mês\">x4 por mês</option>\n                <option value=\"x3 por mês\">x3 por mês</option>\n                <option value=\"x2 por mês\">x2 por mês</option>\n                <option value=\"x1 por mês\">x1 por mês</option>\n              </select>\n              </label>\n            </li>\n\n            <li>\n              <label className='uxLi'>\n                <input\n                  type=\"radio\"\n                  value=\"PrecisandoBuscar\"\n                  checked={this.state.alimento === \"PrecisandoBuscar\"}\n                  onChange={this.setTipoAlimento}\n                />\n                <span className='greenHub'> Tenho alimento perto de se perder <a target='_blank' rel=\"noreferrer\" href=\"https://www.camara.leg.br/noticias/670937-nova-lei-incentiva-empresas-a-doarem-alimentos-e-refeicoes-para-pessoas-vulneraveis/\">(lei)</a>  <img width=\"30px\" height=\"30px\" src={green}></img></span>\n              \n              <br></br>\n              <select ref= {this.dropDownMenuSemanaPrecisandoBuscar} style={{\"display\":\"none\"}} id=\"dia2\" onChange={this.setDiaSemana}>\n                <option value=\"Hoje\">Hoje</option>\n                <option value=\"nas Segundas\">nas Segundas</option>\n                <option value=\"nas Terças\">nas Terças</option>\n                <option value=\"nas Quartas\">nas Quartas</option>\n                <option value=\"nas Quintas\">nas Quintas</option>\n                <option value=\"nas Sextas\">nas Sextas</option>\n                <option value=\"nos Sábados\">nos Sábados</option>\n                <option value=\"nos Domingos\">nos Domingos</option>\n              </select>\n              <select ref= {this.dropDownMenuHorarioPrecisandoBuscar} style={{\"display\":\"none\"}} id=\"horario2\" onChange={this.setHorario}>\n                <option value=\"manhã 05:30\">manhã 05:30</option>\n                <option value=\"manhã 06:30\">manhã 06:30</option>\n                <option value=\"manhã 09:30\">manhã 09:30</option>\n                <option value=\"tarde 13:30\">tarde 13:30</option>\n                <option value=\"tarde 16:30\">tarde 16:30</option>\n                <option value=\"noite 18:30\">noite 18:30</option>\n                <option value=\"noite 19:30\">noite 19:30</option>\n              </select>\n              \n              <select ref= {this.dropDownMenuMesPrecisandoBuscar} style={{\"display\":\"none\"}} id=\"mes2\" onChange={this.setMes}>\n                <option value=\"x4 por mês\">x4 por mês</option>\n                <option value=\"x3 por mês\">x3 por mês</option>\n                <option value=\"x2 por mês\">x2 por mês</option>\n                <option value=\"x1 por mês\">x1 por mês</option>\n              </select>\n              </label>\n              \n            </li>\n\n          \n          </ul>\n    </div>\n        {/* FIM RADIO BUTTON */}\n            <div className='relativePosition'>\n                \n                <input className=\"TextField tfMarginUp\" type=\"text\" placeholder='Insira DDD telefone se quiser' /*value={this.state.telefone}*/ onBlur={this.handleChangeTelefone} />\n                <input className='nLocal' type=\"text\" placeholder='nº' /*value={this.state.numero}*/ onBlur={this.handleChangeNumero} />\n                \n                <br/>\n                <select style={{\"display\":\"none\"}} ref= {this.dropDownMenuRedeSocial}>\n                  <option value=\"instagram.com/\">Insta</option>\n                  <option value=\"facebook.com/\">Face</option>\n                </select>\n                <input ref= {this.redesocialRef} style={{\"display\":\"none\"}} className=\"TextField\" type=\"text\" placeholder='@' /*value={this.state.site}*/ onBlur={this.handleChangeRedeSocial} />\n                \n                <br></br>\n                <div className='buttonsSidebySide'>\n                  <MyLocationButton\n                  location={this.state.center} \n                  alimento={this.state.alimento} \n                  telefone={this.state.telefoneEncryptado}\n                  diaSemana={this.state.diaSemana}\n                  horario={this.state.horario}\n                  numero={this.state.numero}\n                  redesocial={this.state.redesocial}\n                  mes={this.state.mes}\n                  /> \n\n                  {this.state.isLoading?\n                  <CircularProgress/>\n                  :<button className=\"SubmitButton buttonsSidebySide\" onClick={this.handleClickMap}>marcar Local Tocado</button>}\n                </div>\n                <figure><center>OU</center></figure>\n                <InserirEndereco \n                alimento={this.state.alimento} \n                telefone={this.state.telefoneEncryptado}\n                diaSemana={this.state.diaSemana}\n                horario={this.state.horario}\n                redesocial={this.state.redesocial}\n                mes={this.state.mes}\n                /> \n\n                {/* <input className=\"TextField\" type=\"text\" placeholder='Insira o site do projeto' value={this.state.site} onChange={this.handleChangeSite} />\n                <br></br> */}\n                \n\n               \n              </div>\n              \n          </div>\n               \n              }\n            </Paper>\n          </Grid>\n\n\n          <Grid item xs={12} sm={12}>\n            <Paper id=\"MoreInfo\" style={{height:'100%'}} >\n            {/* Contribua também Sinalizando projetos que arrecadam e entregam alimentos na sua cidade, <a target='_blank' rel=\"noreferrer\" href=\"https://www.google.com.br/search?q=suaCidade+~voluntarios+OR+%22grupo%22+AND+~doacoes+AND+%22alimentos%22+%2290000..99999%22+OR+%228000..9999%22\">entrando em contato com eles</a> para eles sinalizarem\n             <br/>  */}\n            <a className=\"wpbtn\" title=\"share to whatsapp\" href=\"whatsapp://send?text=Para marcar no mapa e alimentar quem tem fome, achei esse site: www.mapafome.com.br\"> <img className=\"wp\" src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/>\n                Compartilhar no Whatsapp</a>\n                <a style={{float:'right'}} target='_blank' rel=\"noreferrer\" href=\"https://t.me/share?url=www.mapafome.com.br&amp;text=Para%20marcar%20no%20mapa%20e%20alimentar%20quem%20tem%20fome%2C%20achei%20esse%20site%3A\" className=\"tgme_widget_share_btn\"><img className=\"telegram\" src=\"https://telegram.org/img/WidgetButton_LogoSmall.png\" alt=\"\"></img></a>\n\n                <br></br>\n              EM MANUTENÇÃO - Mapeados: {this.state.rowCount}<br></br>\n              <a href='https://play.google.com/store/apps/details?id=br.com.mapafome'><img style={{height:'55px'}} alt='Disponível no Google Play' src='https://play.google.com/intl/en_us/badges/static/images/badges/pt_badge_web_generic.png'/></a>\n              <a target='_blank' rel=\"noreferrer\" href=\"https://instagram.com/mapafome\"><img style={{height:'55px'}}src=\"https://play-lh.googleusercontent.com/VRMWkE5p3CkWhJs6nv-9ZsLAs1QOg5ob1_3qg-rckwYW7yp1fMrYZqnEFpk0IoVP4LM=w240-h480-rw\"/></a>\n            \n              <br></br>No mapa clique na bolinha para saber como ajudar.<br></br> Você pode se incluir ou incluir outra pessoa, <br></br>selecione a situação e confirme o local (mais informações <a target='_blank' rel=\"noreferrer\" href=\"https://g1.globo.com/pe/pernambuco/noticia/2022/02/10/site-criado-por-estudante-da-ufpe-aproxima-pessoas-que-estao-passando-fome-e-doadores-de-comida.ghtml\">na matéria da Globo</a>)(<a href=\"https://globoplay.globo.com/v/10350537/\">e jornal hoje da Globo em rede nacional</a>):\n              <br></br><span className=\"yellowHub\">  em amarelo são pessoas <img width=\"30px\" height=\"30px\" src={coffeeBean}></img></span>em vulnerabilidade social e insegurança alimentar que estão com fome em casa ou na rua, --precisam de alimento\n              <br></br><span className=\"blueHub\">  em azul são pessoas <img width=\"30px\" height=\"30px\" src={hub}></img></span>que recebem alimentos ou recursos para distribuir alimento ou refeições na comunidade (exemplo: sopão solidário, ongs, voluntários) --precisam de doações\n              <br></br><span className=\"redHub\">  em vermelho são pessoas <img width=\"30px\" height=\"30px\" src={red}></img></span>que entregam refeição em ponto fixo na rua em certo dia na semana. --ponto de entrega de alimento pronto\n              <br></br><span className=\"greenHub\">  em verde são pessoas <img width=\"30px\" height=\"30px\" src={green}></img></span>que trabalham com alimentos e precisam destinar os alimentos não comercializados ou não consumidos e não tem pessoas para buscar esses alimentos (exemplo: restaurante, hotel, lanchonete, feira livre, supermercados) --precisam de voluntários para buscar \n            \n              <br></br>\n              <br></br>\n              <CreatorsMapaFome/>\n              <br/>\n\t\t\t  em agradecimento a formação humana, moral e ética que recebi dos meus professores de Filosofia e Sociologia do ensino médio\n\t\t\t  <br/><span style={{\"font-size\":\"1.4em\",\"color\":\"blue\"}}>•</span>por terem passado o premiado documentário com base em fatos reais curta de 13 minutos do brasileiro Jorge Furtado <a target='_blank' rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=JcP9v5mZT9w\">Ilha das Flores</a>\n\t\t\t  <br/><span style={{\"font-size\":\"1.4em\",\"color\":\"blue\"}}>•</span>após 10 anos de ter assistido, aprendido e internalizado e entendido nosso papel como sociedade e comunidade, tive a oportunidade de agir usando conhecimento e tecnologias acumulado ao longo do tempo \n\t\t\t  <br/><span style={{\"font-size\":\"1.4em\",\"color\":\"blue\"}}>•</span>e a base para criação de projetos (pesquisa de campo e Project Manager) obtida na disciplina de Projetão CIn UFPE \n\t\t\t  <br/><span style={{\"font-size\":\"1.4em\",\"color\":\"red\"}}>•</span>resultou em obter as ferramentas necessárias para agir em favor das pessoas que passam fome\n\t\t\t  <br/><span style={{\"font-size\":\"1.4em\",\"color\":\"red\"}}>•</span>e dar visibilidade, e contribuir junto com as pessoas de bom coração a elas que rotinamente agem alimentando quem não tem dinheiro para comprar comida\n\t\t\t  <br/><span style={{\"font-size\":\"1.4em\",\"color\":\"green\"}}>•</span>e contribuir com os comerciantes de alimentos a reduzirem o desperdício de alimento\n\t\t\t  <br/><span style={{\"font-size\":\"1.4em\",\"color\":\"red\"}}>•</span>e motivar e ofertar ferramentas necessárias para cada ser humano fazer sua parte e poder colaborar de forma recorrente, saber e encontrar a quem ofertar alimento\n\t\t\t  <br/><span style={{\"font-size\":\"1.4em\",\"color\":\"orange\"}}>•</span>ou se não com o alimento, com o compartilhamento de informação ao informar da existência do MAPA FOME que é gratuito, a quem precisa e a quem pode ajudar, pois irão saber a quem buscar\n\t\t\t  <br/><span style={{\"font-size\":\"1.4em\",\"color\":\"red\"}}>•</span>sem comida, qualquer ser humano morre prematuramente. e qualquer pessoa ao deixar de prestar assistência, quando possível fazê-lo sem risco pessoal, à pessoa (...) ao desamparo ou em grave e iminente perigo = praticar crime de Omissão de socorro Art. 135 Código Penal Brasileiro\n\t\t\t  \n\t\t\t  <table style={{\"width\":\"94%\", \"text-align\":\"center\"}}>\n\t\t\t\t  <tr style={{\"background-color\":\"#c8dff5\"}}>\n\t\t\t\t\t<th style={{\"width\":\"7%\"}}>Tempo<br/>de<br/>Fome</th>\n\t\t\t\t\t<th style={{\"width\":\"86%\"}}>Consequências ruins</th>\n\t\t\t\t\t<th style={{\"width\":\"7%\"}}>Risco de vida<br/>da pessoa<br/>desamparada</th>\n\t\t\t\t  </tr>\n\t\t\t\t  <tr>\n\t\t\t\t\t<td>0-3<br/>horas</td>\n\t\t\t\t\t<td>Mudança mínima</td>\n\t\t\t\t\t<td>0</td>\n\t\t\t\t  </tr>\n\t\t\t\t  <tr style={{\"background-color\":\"#c8dff5\"}}>\n\t\t\t\t\t<td>4-8<br/>horas</td>\n\t\t\t\t\t<td style={{\"padding\":\"3%\"}}>Você vai sentir mais fome e sua barriga vai doer um pouco, e pode ter dor de cabeça</td>\n\t\t\t\t\t<td>0</td>\n\t\t\t\t  </tr>\n\t\t\t\t  <tr>\n\t\t\t\t\t<td>9-12<br/>horas</td>\n\t\t\t\t\t<td style={{\"padding\":\"3%\"}}>Você vai começar a se sentir cansado e rabugento, raivoso, irritado, estressado e vai ter dor de cabeça</td>\n\t\t\t\t\t<td>baixa</td>\n\t\t\t\t  </tr>\n\t\t\t\t  <tr style={{\"background-color\":\"#c8dff5\"}}>\n\t\t\t\t\t<td>13-16<br/>horas</td>\n\t\t\t\t\t<td style={{\"padding\":\"3%\"}}>vai ser mais difícil prestar atenção ou se concentrar</td>\n\t\t\t\t\t<td>moderada</td>\n\t\t\t\t  </tr>\n\t\t\t\t  <tr>\n\t\t\t\t\t<td>17-24<br/>horas</td>\n\t\t\t\t\t<td style={{\"padding\":\"3%\"}}>Seu corpo vai não ter açúcar suficiente, o que vai fazer você se sentir tonto ou TREMENDO</td>\n\t\t\t\t\t<td>moderada</td>\n\t\t\t\t  </tr>\n\t\t\t\t  <tr style={{\"background-color\":\"#c8dff5\"}}>\n\t\t\t\t\t<td>25-48<br/>horas</td>\n\t\t\t\t\t<td style={{\"padding\":\"3%\"}}>Você vai se sentir fraco e entra em situação de alto estresse e em modo de sobrevivência seu coração vai bater mais rápido pois falta energia que vem da comida, então tenta trabalhar dobrado na tentativa de manter o resultado (entrega de oxigênio e nutrientes para orgão vitais)</td>\n\t\t\t\t\t<td>alta</td>\n\t\t\t\t  </tr>\n\t\t\t\t  <tr>\n\t\t\t\t\t<td>49-72<br/>horas</td>\n\t\t\t\t\t<td style={{\"padding\":\"3%\"}}>Seu corpo vai começar a usar energia armazenada (gordura,...), o que vai fazer você se sentir cansado e seu sistema imunológico vai não funcionar tão bem, fica doente mais facilmente</td>\n\t\t\t\t\t<td>alta</td>\n\t\t\t\t  </tr>\n\t\t\t\t  <tr style={{\"background-color\":\"#c8dff5\"}}>\n\t\t\t\t\t<td>3-7<br/>dias</td>\n\t\t\t\t\t<td style={{\"padding\":\"3%\"}}>Os músculos passam a serem consumidos como energia, você vai se sentir muito fraco e seus músculos vão diminuir. Isso não é bom para o seu corpo, danifica o organismo. Diminuição da motivação ou produtividade</td>\n\t\t\t\t\t<td>alta</td>\n\t\t\t\t  </tr>\n\t\t\t\t  <tr>\n\t\t\t\t\t<td>8-14<br/>dias</td>\n\t\t\t\t\t<td style={{\"padding\":\"3%\"}}>Seus órgãos, que são partes importantes do seu corpo, vão ficar feridos e você vai ficar doente muito mais facilmente</td>\n\t\t\t\t\t<td>muito alta</td>\n\t\t\t\t  </tr>\n\t\t\t\t  <tr style={{\"background-color\":\"#c8dff5\"}}>\n\t\t\t\t\t<td>15-21<br/>dias</td>\n\t\t\t\t\t<td style={{\"padding\":\"3%\"}}>Você vai ficar muito doente e sua vida vai estar em perigo</td>\n\t\t\t\t\t<td>extremamente alto</td>\n\t\t\t\t  </tr>\n\t\t\t\t  <tr>\n\t\t\t\t\t<td>22+<br/>dias</td>\n\t\t\t\t\t<td style={{\"padding\":\"3%\"}}>Você está em perigo extremo porque seu corpo não está recebendo comida suficiente, e seus órgãos vão parar de funcionar corretamente ou parar a qualquer momento</td>\n\t\t\t\t\t<td>extremamente alto</td>\n\t\t\t\t  </tr>\n\t\t\t\t</table>\n        <br/>Conclusão: Faço um apelo a você tomar medidas e ações solidárias e qualquer forma de iniciativa recorrentes, em intervalos de 1 dia a 14 dias (intervalos recorrentes de mínimo diário ou menos, máximo 2 semanas ou menos), alivie a dor e sofrimento de outro ser humano\n\t\t\t\t<br/>\n              \n                {/* <img src={qr} alt=\"\"/> */}\n                {/* <CleanOld></CleanOld> */}\n                <img className=\"ods\" alt=\"\" src=\"https://brasil.un.org/profiles/undg_country/themes/custom/undg/images/SDGs/pt-br/SDG-2.svg\"></img> No Mapa Fome você pode encontrar a quem ajudar e fazer novas marcações, caso uma opção represente você ou outra pessoa, selecione, coloque número para contato se quiser, e confirme com localização atual ou endereço e número\n              \n                \n                <br></br><br></br>serve para \n\n<br></br>-mapear pessoas que estão com fome na rua ou em casa\n<br></br>-mapear iniciativas que recebem recursos para fazer doação\n<br></br>-mostrar no mapa onde e quando tem alimento sendo distribuído\n<br></br>-mostrar no mapa lugares comerciais ou residenciais que precisam de voluntários ou necessitados para buscar alimentos não consumidos ou não comercializados\n<br></br> é possível traçar uma rota ao destino ao clicar Ir para o destino, e ser redirecionado para o Google Maps\n<br></br>\ncontato: <a target='_blank' rel=\"noreferrer\" href=\"https://mail.google.com/mail/u/0/?fs=1&to=rslgp@cin.ufpe.br&tf=cm\" >rslgp@cin.ufpe.br</a> <a target='_blank' rel=\"noreferrer\"  href='https://wa.me/5583996157234'>(83) 9.9615-7234</a>           \n<Sugestao/>\n        <a target='_blank' rel=\"noreferrer\" href=\"./privacy.html\">Privacy Policy</a>\n        <span> - </span>\n        <a target='_blank' rel=\"noreferrer\" href=\"./terms.html\">Terms</a>\n        </Paper>\n          </Grid>\n\n        </Grid>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","export default __webpack_public_path__ + \"static/media/bean.8d52f968.svg\";"],"sourceRoot":""}