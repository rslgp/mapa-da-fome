{"version":3,"sources":["components/twemoji.js","components/header.js","components/tableCount.js","components/googlesheets/form.js","components/googlesheets/mylocation.js","images/bean.svg","images/hub.svg","images/currentLocation.svg","components/map.js","images/qr.svg","components/googlesheets/cleanold.js","App.js","index.js"],"names":["Twemoji","emoji","dangerouslySetInnerHTML","__html","twemoji","parse","folder","ext","memo","Header","Component","this","props","rowCountProp","id","AppBar","position","Toolbar","Typography","variant","className","GoogleSpreadsheet","require","provider","OpenStreetMapProvider","doc","process","NameForm","state","value","alimento","isLoading","telefone","handleChange","bind","handleSubmit","event","setState","target","self","a","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsByIndex","numero","replace","row","Roaster","URL","City","DateISO","Date","toISOString","Telefone","search","query","providerResult","length","console","log","latlon","y","x","Coordinates","JSON","stringify","addRow","window","location","reload","preventDefault","CircularProgress","onSubmit","type","placeholder","onChange","nextProps","loadCells","getCell","saveUpdatedCells","getRows","result","onClick","TimeAgo","addDefaultLocale","pt","timeAgo","myIcon","L","Icon","iconUrl","coffeeBean","iconSize","Point","hubIcon","hub","CurrentLocation","CurrentLocationSVG","interactive","CoffeeMap","dataMaps","center","screensizeZoom","innerWidth","MapContainer","style","height","width","zoom","maxZoom","attributionControl","TileLayer","url","attribution","AttributionControl","prefix","Marker","icon","eventHandlers","click","e","spiderfyDistanceMultiplier","showCoverageOnHover","maxClusterRadius","dataMapsProp","filter","map","dataItem","k","dateMarked","precisandoMsg","CurrentIcon","mapCoords","googleDirection","format","now","getTime","Popup","href","rel","aes","AesEncryption","ReactGA","initialize","pageview","pathname","setSecretKey","App","dataHeader","label","rowCount","telefoneEncryptado","setTipoAlimento","handleChangeTelefone","telefoneValue","encrypt","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","rows","forEach","decrypt","needsUpdates","index","city","setTimeout","save","Grid","container","spacing","item","xs","sm","Paper","checked","title","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05ae7fc7.chunk.js","sourcesContent":["import React, { memo } from 'react'\nimport twemoji from 'twemoji'\n\n// Using the official https://github.com/twitter/twemoji from Twitter\n// With an excellent example from https://gist.github.com/chibicode/fe195d792270910226c928b69a468206\n\nconst Twemoji = ({ emoji }) => (\n    <span\n        dangerouslySetInnerHTML={{\n            __html: twemoji.parse(emoji, {\n                folder: 'svg',\n                ext: '.svg'\n            })\n        }}\n    />\n)\n\nexport default memo(Twemoji)","import React, { Component } from 'react';\nimport Twemoji from './twemoji';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import github_mark from '../images/github_mark.png';\nimport TableCount from './tableCount';\n\nclass Header extends Component {\n\n    render() {\n\n        const { rowCountProp } = this.props;\n\n        return (\n            <div id=\"header\">\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" id=\"logo\">\n                            <Twemoji emoji=\"☕\" /> MAPA da FOME <span className=\"beta\">(beta)</span> \n                        </Typography>\n                        {/* <TableCount rowCountProp={rowCountProp} /> */}\n                        {/* <a href=\"https://docs.google.com/spreadsheets/d/1u7jiqY1qM0jYWugn1dFiW3plQrvWysJqm8xXhO35zuU/edit?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <Button\n                                variant=\"contained\"\n                                size=\"small\">\n                                Add<span id=\"RoasterButtonMobile\">&nbsp;Roaster</span>\n                            </Button>\n                        </a>\n                        <a href=\"https://github.com/hdehal/coffee-maps\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <IconButton\n                                className=\"GitHub\"\n                                variant=\"outlined\"\n                                size=\"small\">\n                                <img className=\"GitHub\" src={github_mark} alt=\"Hosted on GitHub\" />\n                            </IconButton>\n                        </a> */}\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass TableCount extends Component {\n    render() {\n        return (\n            <Typography className=\"TableCount\">\n                TOTAL: {this.props.rowCountProp}\n            </Typography>\n        );\n    }\n}\n\nexport default TableCount;","import React, { Component } from 'react';\r\n\r\nimport { \r\n  OpenStreetMapProvider,\r\n  // BingProvider \r\n} from 'leaflet-geosearch';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\nconst provider = new OpenStreetMapProvider();\r\n\r\n// = new BingProvider({\r\n//   params: {\r\n//     key: process.env.REACT_APP_BING_MAPS_API_KEY\r\n//   },\r\n// });\r\n//\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass NameForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '', \r\n        alimento: props.alimento, \r\n        isLoading:false,\r\n        telefone:props.telefone\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    //ATUALIZAR PROPS VINDAS DO PAI\r\n    static getDerivedStateFromProps(nextProps, state) {\r\n      if(state){\r\n        if (nextProps.alimento !== state.alimento){ \r\n          state.alimento=nextProps.alimento;\r\n        }\r\n        if (nextProps.telefone !== state.telefone){ \r\n          state.telefone=nextProps.telefone;\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      //alert('Um endereço foi enviado: ' + this.state.value);\r\n      if(this.state.value === '') {event.preventDefault();return;}\r\n      \r\n      this.setState({isLoading: true});\r\n\r\n      (async function main(self) {\r\n        await doc.useServiceAccountAuth({\r\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n        });\r\n\r\n        await doc.loadInfo(); // Loads document properties and worksheets\r\n\r\n        const sheet = doc.sheetsByIndex[0];\r\n        //row = { Name: \"new name\", Value: \"new value\" };\r\n        \r\n        // Total row count\r\n        let numero = self.state.value.replace(/[^0-9]/g,'');\r\n        if(numero !== ''){\r\n          numero = \", nº\"+numero;\r\n        }\r\n        const row = { Roaster:  self.state.alimento, URL:numero, City: self.state.value, DateISO: new Date().toISOString(), Telefone: self.state.telefone };\r\n        \r\n        try{\r\n          let providerResult = await provider.search({ query: self.state.value.replace('-',\",\") + ', Brazil' });\r\n  \r\n          if(providerResult.length !== 0 ){\r\n              // throw new Error(\"endereco-nao-encontrado\");\r\n  \r\n              console.log(providerResult);\r\n              let latlon = [providerResult[0].y, providerResult[0].x];\r\n              row.Coordinates = JSON.stringify(latlon); // Convert obj to string\r\n              //needsUpdates[index].mapCoords = latlon;\r\n          }\r\n        }catch(e){\r\n            console.log(\"ERRO\");\r\n            console.log(e);\r\n        }\r\n        await sheet.addRow(row);\r\n       \r\n        self.setState({isLoading: false});\r\n        window.location.reload();\r\n      })(this);\r\n      event.preventDefault();\r\n    }\r\n\r\n    \r\n  \r\n    render() {\r\n      return (\r\n        this.state.isLoading ?\r\n        <div><CircularProgress /></div>\r\n        :\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <input className=\"TextField\" type=\"text\" placeholder='Insira rua,nº,bairro,cidade,estado' value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input className=\"SubmitButton\" type=\"submit\" value=\"Enviar Endereço\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\nexport default NameForm; ","import React, { Component } from 'react';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass NameForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '', \r\n        location: props.location, \r\n        alimento: props.alimento, \r\n        isLoading:props.isLoading,\r\n        telefone:props.telefone,\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    \r\n  componentDidMount() {\r\n      \r\n    //salvar acesso  \r\n      \r\n    (async function main(self) {\r\n      try{\r\n        await doc.useServiceAccountAuth({\r\n          client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n          private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n        });\r\n    \r\n        await doc.loadInfo(); // Loads document properties and worksheets\r\n    \r\n        const sheet = doc.sheetsByIndex[1];\r\n        \r\n        await sheet.loadCells('A2');\r\n        const a1 = sheet.getCell(1, 0);\r\n        a1.value+=1;\r\n        await sheet.saveUpdatedCells();\r\n      }catch(e){\r\n        \r\n      }\r\n      \r\n    })(this);\r\n\r\n  }\r\n\r\n    //ATUALIZAR PROPS VINDAS DO PAI\r\n    static getDerivedStateFromProps(nextProps, state) {\r\n      if(state){\r\n\r\n        if (nextProps.alimento !== state.alimento){ \r\n          state.alimento=nextProps.alimento;\r\n        }\r\n        if (nextProps.telefone !== state.telefone){ \r\n          state.telefone=nextProps.telefone;\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) { \r\n        //navigator.geolocation.getCurrentPosition(function(position) {\r\n        this.setState({isLoading: true});\r\n            (async function main(self) {\r\n                await doc.useServiceAccountAuth({\r\n                    client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n                    private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n                });\r\n        \r\n                await doc.loadInfo(); // Loads document properties and worksheets\r\n        \r\n                const sheet = doc.sheetsByIndex[0];\r\n                const rows = await sheet.getRows();\r\n                // Total row count\r\n                const row = { Roaster: self.state.alimento, URL:\"\", City: \"\", Coordinates:JSON.stringify([self.props.location[0], self.props.location[1]]), DateISO: new Date().toISOString(), Telefone: self.props.telefone };\r\n                \r\n                const result = await sheet.addRow(row);\r\n                console.log(result);\r\n                window.location.reload();\r\n            })(this);\r\n        //});\r\n      event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n          this.state.isLoading ?\r\n          <div><CircularProgress /></div>\r\n          :\r\n          <button className=\"SubmitButton\" onClick={this.handleSubmit}>\r\n            Marcar Minha Localização Atual\r\n          </button>\r\n        \r\n      );\r\n    }\r\n  }\r\nexport default NameForm; ","export default __webpack_public_path__ + \"static/media/bean.59d85c01.svg\";","export default __webpack_public_path__ + \"static/media/hub.8d920506.svg\";","export default __webpack_public_path__ + \"static/media/currentLocation.b9cc00ae.svg\";","import React, { Component } from 'react';\nimport { MapContainer, Marker, TileLayer, Tooltip, AttributionControl, Popup } from \"react-leaflet\";\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport \"react-leaflet-markercluster/dist/styles.min.css\";\nimport coffeeBean from '../images/bean.svg';\nimport hub from '../images/hub.svg';\nimport CurrentLocationSVG from '../images/currentLocation.svg';\nimport TimeAgo from 'javascript-time-ago';\n\nimport pt from 'javascript-time-ago/locale/pt.json';\nTimeAgo.addDefaultLocale(pt);\n\nconst timeAgo = new TimeAgo();\n\n// Leaflet custom marker\nconst myIcon = new L.Icon({\n    // Coffee bean attribution -- Thanks! https://commons.wikimedia.org/wiki/File:Coffee_bean_symbol.svg\n    iconUrl: coffeeBean,\n    iconSize: new L.Point(20, 20),\n    className: 'leaflet-bean-icon',\n});\n\n\n// Leaflet custom marker\nconst hubIcon = new L.Icon({\n    iconUrl: hub,\n    iconSize: new L.Point(30, 30),\n    className: 'leaflet-bean-icon',\n});\n\nconst CurrentLocation = new L.Icon({\n    iconUrl: CurrentLocationSVG,\n    iconSize: new L.Point(150, 150),\n    className: 'leaflet-bean-icon',\n    interactive: false\n});\n\nclass CoffeeMap extends Component {\n\n    // Initial state\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            dataMaps: [],\n            center: props.location\n        }\n    }\n\n    render() {\n\n        // Render map default zoom based on mobile breakpoint\n        const isMobile = window.innerWidth < 480;\n        const screensizeZoom = isMobile ? 7.25 : 8.5*1.2;\n\n        return (\n            <div>\n                <MapContainer\n                    style={{ height: \"89vh\", width: \"100%\" }}\n                    zoom={screensizeZoom}\n                    maxZoom={20}\n                    center={this.state.center}\n                    attributionControl={false}>\n                    <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        attribution=\" &copy; <a href='http://openstreetmap.org' target='_blank' rel='noreferrer'>OpenStreetMap</a>\"\n                    />\n\n                    <AttributionControl\n                        position=\"bottomleft\"\n                        prefix={false}\n                    />\n                    \n                    <Marker\n                            icon= {CurrentLocation} \n                            key={\"currentPosition\"}\n                            center={this.state.center}\n                            position={this.state.center}\n\n                            eventHandlers={{\n                                click: (e) => { \n                                    e.preventDefault();\n                                }\n                            }}\n\n                            interactive={false}\n                        >\n                            \n                    {/* <Popup\n                        direction=\"auto\"\n                        offset={[2, 0]}\n                        opacity={1}>\n                        <span>você está aqui</span>\n                    </Popup> */}\n                        </Marker>\n                    <MarkerClusterGroup\n                        spiderfyDistanceMultiplier={1}\n                        showCoverageOnHover={false}\n                        maxClusterRadius={35}\n                    >\n                        {/* //voce esta aqui */}\n                        \n                        {this.props.dataMapsProp.filter(x => { return x.Coordinates; }).map((dataItem, k) => {\n                            let { City, mapCoords, Roaster, URL, DateISO, Telefone } = dataItem;\n                            let googleDirection = `https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`;\n                            \n                            let dateMarked;\n                            if(DateISO) dateMarked = timeAgo.format(Date.now() - (Date.now() - new Date(DateISO).getTime()) );\n                            if(Telefone) Telefone=\"contato:\"+Telefone;\n                            //filtrar datas antigas\n                            // if(\n                            //     dateMarked.includes(\"semana\") \n                            // //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\n                            // ) return (<div></div>);\n                            \n                            let precisandoMsg, CurrentIcon;\n                            if(Roaster === \"Doador\"){\n                                precisandoMsg = \"Recebendo alimento para distribuir\"+URL;\n                                CurrentIcon = hubIcon;\n                            }else{\n                                precisandoMsg = `Precisando de ${Roaster}`+URL;\n                                CurrentIcon = myIcon;\n                            }\n                            \n                            return (\n                                <Marker\n                                    eventHandlers={{\n                                        click: (e) => { \n                                            // alert(`Precisando de ${Roaster}`); \n                                            console.log(`indo para [${[mapCoords[0]+','+mapCoords[1]]}]`); \n                                            // window.open(`https://www.google.com/maps/search/${[mapCoords[0]+','+mapCoords[1]]}`) \n                                        }\n                                    }}\n                                    icon= {CurrentIcon} \n                                    key={k}\n                                    center={[mapCoords[0], mapCoords[1]]}\n                                    position={[mapCoords[0], mapCoords[1]]}\n                                >\n                                    <Popup>\n                                        <a href={googleDirection} target='_blank' rel=\"noreferrer\">Ir para o destino</a>\n                                        <br/>\n                                        {precisandoMsg}\n                                        <br/>\n                                        {dateMarked} {Telefone}\n                                    </Popup>\n                                    {/* <Tooltip\n                                        // direction=\"auto\"\n                                        // offset={[15, 0]}\n                                        // opacity={1}>\n                                        // <span><a href={URL}>Precisando de<br></br>{Roaster}</a></span>\n                                        // <span>{City}, BR</span>\n                                    </Tooltip> */}\n                                </Marker>);\n                        })}\n                    </MarkerClusterGroup>\n                </MapContainer>\n            </div>\n        );\n    }\n}\n\nexport default CoffeeMap;","export default __webpack_public_path__ + \"static/media/qr.20154bbf.svg\";","\r\nimport React, { Component } from 'react';\r\n\r\nimport TimeAgo from 'javascript-time-ago';\r\n\r\nimport pt from 'javascript-time-ago/locale/pt.json';\r\nTimeAgo.addDefaultLocale(pt);\r\n\r\nconst timeAgo = new TimeAgo();\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\r\n\r\nclass CleanOld extends Component {\r\n\r\n    componentDidMount() {\r\n        \r\n        (async function main() {\r\n            // Use service account creds\r\n            await doc.useServiceAccountAuth({\r\n            client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\r\n            private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\r\n            });\r\n    \r\n            await doc.loadInfo(); // Loads document properties and worksheets\r\n    \r\n            const sheet = doc.sheetsByIndex[0];\r\n            const rows = await sheet.getRows();\r\n            rows.forEach((x) => { \r\n                let dateMarked;\r\n                if(x.DateISO) dateMarked = timeAgo.format(Date.now() - (Date.now() - new Date(x.DateISO).getTime()) );\r\n                \r\n                //filtrar datas antigas\r\n                if(\r\n                    dateMarked.includes(\"semana\") \r\n                    || dateMarked.includes(\"mes\") \r\n                //&& Number(dateMarked.replace(/[^0-9]/g,'')) > 7\r\n                ) { x.delete(); } });\r\n\r\n        })();\r\n    }\r\n    render(){\r\n        return <div></div>;\r\n    }\r\n}\r\n\r\nexport default CleanOld;","import React, { Component } from 'react';\nimport './App.css';\nimport { OpenStreetMapProvider } from 'leaflet-geosearch';\nimport Header from './components/header';\n\nimport NameForm from './components/googlesheets/form';\nimport MyLocationButton from './components/googlesheets/mylocation';\n\nimport CoffeeMap from './components/map.js';\n// import CoffeeTable from './components/table';\nimport ReactGA from 'react-ga';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nimport qr from './images/qr.svg';\n\n// Material-UI\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport CleanOld from './components/googlesheets/cleanold';\n\nimport AesEncryption from \"aes-encryption\";\n\nconst aes = new AesEncryption();\n\n// Google Analytics\nfunction initializeReactGA() {\n  ReactGA.initialize('UA-172868315-1');\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\ninitializeReactGA();\n\naes.setSecretKey(process.env.REACT_APP_CRYPTSEED+\"F\");\n\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\n\n// Google Sheets Document ID -- PROD\nconst doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLESHEETID);\n\n// Google Sheets Document ID -- DEV\n// const doc = new GoogleSpreadsheet('1jQI6PstbEArW_3xDnGgPJR6_37r_KjLoa765bOgMBhk');\n\n// Provider for leaflet-geosearch plugin\nconst provider = new OpenStreetMapProvider();\n//limit osm https://operations.osmfoundation.org/policies/nominatim/\n\nclass App extends Component {\n\n  // Initial state\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      dataMaps: [],\n      dataHeader: [{ label: \"Índice\" }, { label: \"Lugar\" }],\n      rowCount: '',\n      center:[-8.0671132,-34.8766719],\n      alimento:'Alimento de cesta básica',\n      telefone:'',\n      telefoneEncryptado:''\n    }\n\n    this.setTipoAlimento = this.setTipoAlimento.bind(this);\n    this.handleChangeTelefone = this.handleChangeTelefone.bind(this);\n  }\n\n  setTipoAlimento(event){\n    this.setState({\n      alimento: event.target.value\n    });\n\n  }\n\n  handleChangeTelefone(event) {\n    let telefoneValue = event.target.value.replace(/[^0-9]/g,'');\n    if(telefoneValue.length >= 8){\n      this.setState({telefoneEncryptado: aes.encrypt(telefoneValue)});\n    }\n    this.setState({telefone: telefoneValue});\n  }\n\n  componentDidMount() {\n\n    // Google Sheets API\n    // Based on https://github.com/theoephraim/node-google-spreadsheet\n\n    var self = this;\n\n    //current location    \n    navigator.geolocation.getCurrentPosition(function(position) {\n      self.setState({center: [position.coords.latitude, position.coords.longitude]}) \n    });\n\n    (async function main() {\n      // Use service account creds\n      await doc.useServiceAccountAuth({\n        client_email: process.env.REACT_APP_GOOGLE_SERVICE_ACCOUNT_EMAIL,\n        private_key: process.env.REACT_APP_GOOGLE_PRIVATE_KEY,\n      });\n\n      await doc.loadInfo(); // Loads document properties and worksheets\n\n      const sheet = doc.sheetsByIndex[0];\n      const rows = await sheet.getRows();\n      // Total row count\n      self.setState({ rowCount: rows.length });\n\n      rows.forEach((x) => { \n        if (x.Coordinates) { x.mapCoords = JSON.parse(x.Coordinates); \n          if(x.Telefone) {\n            try{\n              x.Telefone = aes.decrypt(x.Telefone);\n            }catch(e){\n              //problema ao decriptar, string nao esta no formato hex\n            }\n          } \n        } \n      });\n\n      self.setState({ dataMaps: rows });\n\n      var needsUpdates = rows.filter((x) => { return !x.Coordinates; });\n      if(needsUpdates.length === 0) console.log(\"nao precisa atualizar\");\n      if (needsUpdates && needsUpdates.length > 0) {\n          for (let index in needsUpdates) {\n            // if(needsUpdates[index]._rawData.length===0) needsUpdates[index].delete(); //se deixar rows vazias na planilha\n              let city = needsUpdates[index].City;\n              setTimeout(() => \n                  {\n                      (async function main() {\n                          try{\n                              let providerResult = await provider.search({ query: city.replace('-',\",\") + ', Brazil' });\n                      \n                              if(providerResult.length !== 0 ){\n                                  // throw new Error(\"endereco-nao-encontrado\");\n                      \n                                  console.log(providerResult);\n                                  let latlon = [providerResult[0].y, providerResult[0].x];\n                                  needsUpdates[index].Coordinates = JSON.stringify(latlon); // Convert obj to string\n                                  //needsUpdates[index].mapCoords = latlon;\n                                  await needsUpdates[index].save(); // Save to remote Google Sheet\n                              }\n                          }catch(e){\n                              console.log(\"ERRO\");\n                              console.log(e);\n                          }\n                      })();\n                  \n                  },1300                        \n              );\n              \n          }\n        self.setState({ dataMaps: rows });\n      }\n\n      // Loading message \n      self.setState({ isLoading: false })\n\n    })();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header rowCountProp={this.state.rowCount} />\n        {/* <NameForm/>\n        <MyLocationButton location={this.state.center}/> */}\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={8}>\n            <Paper id=\"CoffeeMap\" className=\"fadeIn\">\n              {this.state.isLoading\n                ? <div className=\"flexLoading\"><div className=\"loading\">Carregando...</div></div>\n                : <CoffeeMap dataMapsProp={this.state.dataMaps} location={this.state.center}/>\n              }\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Paper id=\"CoffeeTable\">\n              {this.state.isLoading\n                ? <div className=\"flexLoading\"><div className=\"loading\"><CircularProgress /></div></div>\n                // : <CoffeeTable dataMapsProp={this.state.dataMaps} dataHeaderProp={this.state.dataHeader} />\n              : <div>\n                Mapeados: {this.state.rowCount}<br></br>Insira o endereço de quem está sem dinheiro e com fome e o selecione tipo de alimento:\n        {/* RADIO BUTTON */}\n        <ul>\n          <li>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"Alimento de cesta básica\"\n                checked={this.state.alimento === \"Alimento de cesta básica\"}\n                onChange={this.setTipoAlimento}\n              />\n              Alimento de cesta básica\n            </label>\n          </li>\n          \n          <li>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"Alimento pronto\"\n                checked={this.state.alimento === \"Alimento pronto\"}\n                onChange={this.setTipoAlimento}\n              />\n              Alimento pronto\n            </label>\n          </li>\n\n          \n          <li>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"Doador\"\n                checked={this.state.alimento === \"Doador\"}\n                onChange={this.setTipoAlimento}\n              />\n              Recebo para doar\n            </label>\n          </li>\n        </ul>\n        {/* FIM RADIO BUTTON */}\n        <input className=\"TextField\" type=\"text\" placeholder='Insira telefone se quiser' value={this.state.telefone} onChange={this.handleChangeTelefone} />\n                <MyLocationButton location={this.state.center} alimento={this.state.alimento} telefone={this.state.telefoneEncryptado}/> \n                <NameForm alimento={this.state.alimento} telefone={this.state.telefoneEncryptado}/> \n                <a className=\"wpbtn\" title=\"share to whatsapp\" href=\"whatsapp://send?text=Para marcar no mapa e alimentar quem tem fome, achei esse site: https://rslgp.github.io/mapafome\"> <img className=\"wp\" src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/>\n                Compartilhar no Whatsapp</a>\n                <a target='_blank' rel=\"noreferrer\" href=\"https://t.me/share?url=https%3A%2F%2Frslgp.github.io%2Fmapafome&amp;text=Para%20marcar%20no%20mapa%20e%20alimentar%20quem%20tem%20fome%2C%20achei%20esse%20site%3A\" className=\"tgme_widget_share_btn\"><img className=\"telegram\" src=\"https://telegram.org/img/WidgetButton_LogoSmall.png\" alt=\"\"></img></a>\n\n                {/* <img src={qr} alt=\"\"/> */}\n                {/* <CleanOld></CleanOld> */}\n\n              </div>\n               \n              \n              }\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}